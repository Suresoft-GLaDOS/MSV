{
	"switch_num":	81,
	"case_num":	[443, 5, 457, 2, 456, 3, 1, 456, 417, 212, 19, 212, 14, 202, 18, 212, 14, 212, 14, 202, 18, 212, 14, 218, 18, 218, 18, 11, 212, 1, 2, 99, 35, 99, 17, 177, 3, 188, 10, 2, 178, 3, 195, 6, 2, 2, 197, 6, 2, 178, 3, 2, 2, 177, 3, 181, 10, 2, 178, 3, 2, 178, 177, 1247, 3, 2, 1247, 160, 147, 3, 147, 1, 147, 22, 1147, 1, 1147, 846, 1147, 846, 1128],
	"switch_cluster":	[[3, 6, 8, 12, 16, 18, 22, 24, 26, 29, 30, 32, 34, 39, 44, 48, 51, 52, 57, 60, 65, 67, 69, 71, 73, 75, 77, 79], [1, 5, 10, 14, 20, 27, 36, 38, 41, 43, 45, 47, 50, 54, 56, 59, 64], [0, 2, 4, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 28, 31, 33, 35, 37, 40, 42, 46, 49, 53, 55, 58, 61, 62, 63, 66, 68, 70, 72, 74, 76, 78, 80], []],
	"priority":	[{
			"file":	"libtiff/tif_aux.c",
			"line":	40,
			"primary_score":	999928,
			"second_score":	7543
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	41,
			"primary_score":	999928,
			"second_score":	7542
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	46,
			"primary_score":	999928,
			"second_score":	7541
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	47,
			"primary_score":	999928,
			"second_score":	7540
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	49,
			"primary_score":	999928,
			"second_score":	7538
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	53,
			"primary_score":	999928,
			"second_score":	7537
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	59,
			"primary_score":	999928,
			"second_score":	7544
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	114,
			"primary_score":	999940,
			"second_score":	12544
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	116,
			"primary_score":	999940,
			"second_score":	12543
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	118,
			"primary_score":	999940,
			"second_score":	12503
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	133,
			"primary_score":	999944,
			"second_score":	12502
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	266,
			"primary_score":	999940,
			"second_score":	12548
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	267,
			"primary_score":	999940,
			"second_score":	12547
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	269,
			"primary_score":	999940,
			"second_score":	12546
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	270,
			"primary_score":	999940,
			"second_score":	12545
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	271,
			"primary_score":	999940,
			"second_score":	12501
		}, {
			"file":	"libtiff/tif_aux.c",
			"line":	272,
			"primary_score":	999940,
			"second_score":	12500
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	52,
			"primary_score":	999928,
			"second_score":	345
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	53,
			"primary_score":	999933,
			"second_score":	344
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	54,
			"primary_score":	999928,
			"second_score":	336
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	55,
			"primary_score":	999928,
			"second_score":	334
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	57,
			"primary_score":	999928,
			"second_score":	289
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	58,
			"primary_score":	999929,
			"second_score":	645
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	63,
			"primary_score":	999928,
			"second_score":	288
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	72,
			"primary_score":	999928,
			"second_score":	287
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	74,
			"primary_score":	999928,
			"second_score":	286
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	75,
			"primary_score":	999929,
			"second_score":	640
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	80,
			"primary_score":	999928,
			"second_score":	285
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	81,
			"primary_score":	999928,
			"second_score":	284
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	83,
			"primary_score":	999928,
			"second_score":	283
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	84,
			"primary_score":	999928,
			"second_score":	10
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	85,
			"primary_score":	999928,
			"second_score":	9
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	92,
			"primary_score":	999928,
			"second_score":	8
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	95,
			"primary_score":	999928,
			"second_score":	6
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	105,
			"primary_score":	999928,
			"second_score":	5
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	125,
			"primary_score":	999928,
			"second_score":	348
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	126,
			"primary_score":	999928,
			"second_score":	347
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	128,
			"primary_score":	999928,
			"second_score":	346
		}, {
			"file":	"libtiff/tif_close.c",
			"line":	129,
			"primary_score":	999928,
			"second_score":	3
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	128,
			"primary_score":	999931,
			"second_score":	9766
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	129,
			"primary_score":	999931,
			"second_score":	9764
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	132,
			"primary_score":	999931,
			"second_score":	9724
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	133,
			"primary_score":	999928,
			"second_score":	335
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	138,
			"primary_score":	999928,
			"second_score":	717
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	139,
			"primary_score":	999928,
			"second_score":	716
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	140,
			"primary_score":	999928,
			"second_score":	715
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	141,
			"primary_score":	999928,
			"second_score":	714
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	142,
			"primary_score":	999928,
			"second_score":	713
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	143,
			"primary_score":	999928,
			"second_score":	712
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	144,
			"primary_score":	999928,
			"second_score":	711
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	145,
			"primary_score":	999928,
			"second_score":	710
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	146,
			"primary_score":	999928,
			"second_score":	709
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	147,
			"primary_score":	999928,
			"second_score":	708
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	148,
			"primary_score":	999928,
			"second_score":	707
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	149,
			"primary_score":	999928,
			"second_score":	706
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	150,
			"primary_score":	999928,
			"second_score":	705
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	151,
			"primary_score":	999928,
			"second_score":	704
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	152,
			"primary_score":	999928,
			"second_score":	703
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	153,
			"primary_score":	999928,
			"second_score":	702
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	154,
			"primary_score":	999928,
			"second_score":	701
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	155,
			"primary_score":	999928,
			"second_score":	700
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	156,
			"primary_score":	999928,
			"second_score":	699
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	157,
			"primary_score":	999928,
			"second_score":	698
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	163,
			"primary_score":	999928,
			"second_score":	824
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	165,
			"primary_score":	999928,
			"second_score":	818
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	172,
			"primary_score":	999928,
			"second_score":	797
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	189,
			"primary_score":	999928,
			"second_score":	823
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	190,
			"primary_score":	999928,
			"second_score":	822
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	192,
			"primary_score":	999928,
			"second_score":	821
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	195,
			"primary_score":	999928,
			"second_score":	820
		}, {
			"file":	"libtiff/tif_compress.c",
			"line":	197,
			"primary_score":	999928,
			"second_score":	819
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	141,
			"primary_score":	999928,
			"second_score":	832
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	143,
			"primary_score":	999928,
			"second_score":	831
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	144,
			"primary_score":	999928,
			"second_score":	830
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	145,
			"primary_score":	999928,
			"second_score":	829
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	146,
			"primary_score":	999928,
			"second_score":	828
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	148,
			"primary_score":	999928,
			"second_score":	827
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	154,
			"primary_score":	999928,
			"second_score":	13177
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	157,
			"primary_score":	999928,
			"second_score":	13047
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	167,
			"primary_score":	999928,
			"second_score":	12933
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	179,
			"primary_score":	999928,
			"second_score":	12932
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	187,
			"primary_score":	999928,
			"second_score":	826
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	188,
			"primary_score":	999928,
			"second_score":	12753
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	189,
			"primary_score":	999941,
			"second_score":	12752
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	190,
			"primary_score":	999971,
			"second_score":	17171
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	191,
			"primary_score":	999971,
			"second_score":	17169
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	196,
			"primary_score":	999928,
			"second_score":	825
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	197,
			"primary_score":	999928,
			"second_score":	786
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	200,
			"primary_score":	999928,
			"second_score":	785
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	203,
			"primary_score":	999929,
			"second_score":	12625
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	215,
			"primary_score":	999938,
			"second_score":	12445
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	218,
			"primary_score":	999938,
			"second_score":	12444
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	219,
			"primary_score":	999938,
			"second_score":	12443
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	222,
			"primary_score":	999928,
			"second_score":	12834
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	224,
			"primary_score":	999928,
			"second_score":	12833
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	225,
			"primary_score":	999928,
			"second_score":	12832
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	228,
			"primary_score":	999928,
			"second_score":	12298
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	230,
			"primary_score":	999928,
			"second_score":	12297
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	231,
			"primary_score":	999928,
			"second_score":	12296
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	232,
			"primary_score":	999928,
			"second_score":	12295
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	233,
			"primary_score":	999928,
			"second_score":	12294
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	235,
			"primary_score":	999928,
			"second_score":	12293
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	256,
			"primary_score":	999928,
			"second_score":	12170
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	258,
			"primary_score":	999928,
			"second_score":	12169
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	259,
			"primary_score":	999928,
			"second_score":	12168
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	338,
			"primary_score":	999938,
			"second_score":	10683
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	340,
			"primary_score":	999938,
			"second_score":	10682
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	343,
			"primary_score":	999938,
			"second_score":	10681
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	347,
			"primary_score":	999938,
			"second_score":	10680
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	352,
			"primary_score":	999938,
			"second_score":	10679
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	610,
			"primary_score":	999928,
			"second_score":	784
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	611,
			"primary_score":	999928,
			"second_score":	783
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	612,
			"primary_score":	999928,
			"second_score":	766
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	615,
			"primary_score":	999928,
			"second_score":	765
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	617,
			"primary_score":	999928,
			"second_score":	764
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	646,
			"primary_score":	999928,
			"second_score":	873
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	647,
			"primary_score":	999928,
			"second_score":	835
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	652,
			"primary_score":	999928,
			"second_score":	834
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	665,
			"primary_score":	999928,
			"second_score":	833
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	678,
			"primary_score":	999928,
			"second_score":	878
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	679,
			"primary_score":	999928,
			"second_score":	877
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	681,
			"primary_score":	999928,
			"second_score":	876
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	682,
			"primary_score":	999928,
			"second_score":	875
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	683,
			"primary_score":	999928,
			"second_score":	763
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	684,
			"primary_score":	999928,
			"second_score":	762
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	737,
			"primary_score":	999928,
			"second_score":	874
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	744,
			"primary_score":	999928,
			"second_score":	10085
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	745,
			"primary_score":	999928,
			"second_score":	10084
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	747,
			"primary_score":	999928,
			"second_score":	10083
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	753,
			"primary_score":	999937,
			"second_score":	10196
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	756,
			"primary_score":	999930,
			"second_score":	10143
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	759,
			"primary_score":	999938,
			"second_score":	12982
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	765,
			"primary_score":	999938,
			"second_score":	12678
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	777,
			"primary_score":	999938,
			"second_score":	12875
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	780,
			"primary_score":	999931,
			"second_score":	10082
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	801,
			"primary_score":	999931,
			"second_score":	10246
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	868,
			"primary_score":	999953,
			"second_score":	10740
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1022,
			"primary_score":	999928,
			"second_score":	10081
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1032,
			"primary_score":	999928,
			"second_score":	10134
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1033,
			"primary_score":	999928,
			"second_score":	10133
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1035,
			"primary_score":	999928,
			"second_score":	10132
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1036,
			"primary_score":	999928,
			"second_score":	10131
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1037,
			"primary_score":	999928,
			"second_score":	10080
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1038,
			"primary_score":	999928,
			"second_score":	10079
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1050,
			"primary_score":	999928,
			"second_score":	10130
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1051,
			"primary_score":	999928,
			"second_score":	10088
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1068,
			"primary_score":	999928,
			"second_score":	333
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1069,
			"primary_score":	999928,
			"second_score":	332
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1071,
			"primary_score":	999928,
			"second_score":	331
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1072,
			"primary_score":	999928,
			"second_score":	329
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1073,
			"primary_score":	999928,
			"second_score":	326
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1074,
			"primary_score":	999928,
			"second_score":	323
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1075,
			"primary_score":	999928,
			"second_score":	320
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1076,
			"primary_score":	999928,
			"second_score":	317
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1077,
			"primary_score":	999928,
			"second_score":	314
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1078,
			"primary_score":	999928,
			"second_score":	311
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1079,
			"primary_score":	999928,
			"second_score":	308
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1080,
			"primary_score":	999928,
			"second_score":	305
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1081,
			"primary_score":	999928,
			"second_score":	663
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1082,
			"primary_score":	999928,
			"second_score":	657
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1083,
			"primary_score":	999928,
			"second_score":	296
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1084,
			"primary_score":	999928,
			"second_score":	295
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1087,
			"primary_score":	999928,
			"second_score":	294
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1092,
			"primary_score":	999928,
			"second_score":	293
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1093,
			"primary_score":	999928,
			"second_score":	292
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1120,
			"primary_score":	999933,
			"second_score":	7839
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1121,
			"primary_score":	999933,
			"second_score":	758
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1122,
			"primary_score":	999933,
			"second_score":	757
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1123,
			"primary_score":	999933,
			"second_score":	756
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1124,
			"primary_score":	999933,
			"second_score":	755
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1125,
			"primary_score":	999933,
			"second_score":	754
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1127,
			"primary_score":	999933,
			"second_score":	753
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1136,
			"primary_score":	999928,
			"second_score":	7838
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1137,
			"primary_score":	999928,
			"second_score":	7837
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1139,
			"primary_score":	999928,
			"second_score":	7836
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1140,
			"primary_score":	999928,
			"second_score":	7834
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1142,
			"primary_score":	999928,
			"second_score":	903
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1143,
			"primary_score":	999928,
			"second_score":	901
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1144,
			"primary_score":	999928,
			"second_score":	900
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1145,
			"primary_score":	999928,
			"second_score":	899
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1146,
			"primary_score":	999928,
			"second_score":	898
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1147,
			"primary_score":	999928,
			"second_score":	897
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1148,
			"primary_score":	999928,
			"second_score":	896
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1149,
			"primary_score":	999928,
			"second_score":	895
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1150,
			"primary_score":	999928,
			"second_score":	894
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1151,
			"primary_score":	999928,
			"second_score":	893
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1152,
			"primary_score":	999928,
			"second_score":	892
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1153,
			"primary_score":	999928,
			"second_score":	891
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1154,
			"primary_score":	999928,
			"second_score":	890
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1155,
			"primary_score":	999928,
			"second_score":	889
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1156,
			"primary_score":	999928,
			"second_score":	888
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1157,
			"primary_score":	999928,
			"second_score":	887
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1158,
			"primary_score":	999928,
			"second_score":	886
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1159,
			"primary_score":	999928,
			"second_score":	885
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1160,
			"primary_score":	999928,
			"second_score":	884
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1161,
			"primary_score":	999928,
			"second_score":	883
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1162,
			"primary_score":	999928,
			"second_score":	882
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1163,
			"primary_score":	999928,
			"second_score":	881
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1168,
			"primary_score":	999928,
			"second_score":	880
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1170,
			"primary_score":	999928,
			"second_score":	879
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1179,
			"primary_score":	999928,
			"second_score":	761
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1186,
			"primary_score":	999928,
			"second_score":	760
		}, {
			"file":	"libtiff/tif_dir.c",
			"line":	1188,
			"primary_score":	999928,
			"second_score":	759
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	283,
			"primary_score":	999928,
			"second_score":	7835
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	295,
			"primary_score":	999928,
			"second_score":	7833
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	296,
			"primary_score":	999933,
			"second_score":	7832
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	298,
			"primary_score":	999933,
			"second_score":	7831
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	299,
			"primary_score":	999933,
			"second_score":	7558
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	300,
			"primary_score":	999933,
			"second_score":	7557
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	307,
			"primary_score":	999933,
			"second_score":	7556
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	308,
			"primary_score":	999933,
			"second_score":	7554
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	309,
			"primary_score":	999933,
			"second_score":	7553
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	311,
			"primary_score":	999928,
			"second_score":	7552
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	320,
			"primary_score":	999928,
			"second_score":	840
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	321,
			"primary_score":	999928,
			"second_score":	839
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	323,
			"primary_score":	999928,
			"second_score":	838
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	324,
			"primary_score":	999928,
			"second_score":	841
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	326,
			"primary_score":	999928,
			"second_score":	837
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	347,
			"primary_score":	999928,
			"second_score":	7551
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	348,
			"primary_score":	999928,
			"second_score":	7550
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	349,
			"primary_score":	999928,
			"second_score":	7549
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	350,
			"primary_score":	999928,
			"second_score":	7548
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	352,
			"primary_score":	999928,
			"second_score":	7547
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	354,
			"primary_score":	999928,
			"second_score":	7546
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	355,
			"primary_score":	999987,
			"second_score":	17129
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	360,
			"primary_score":	999928,
			"second_score":	7545
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	364,
			"primary_score":	999928,
			"second_score":	7536
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	370,
			"primary_score":	999928,
			"second_score":	7535
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	371,
			"primary_score":	999928,
			"second_score":	7534
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	372,
			"primary_score":	999928,
			"second_score":	2910
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	376,
			"primary_score":	999928,
			"second_score":	2872
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	377,
			"primary_score":	999928,
			"second_score":	2871
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	378,
			"primary_score":	999928,
			"second_score":	2870
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	383,
			"primary_score":	999928,
			"second_score":	2869
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	386,
			"primary_score":	999928,
			"second_score":	904
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	416,
			"primary_score":	999928,
			"second_score":	13523
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	484,
			"primary_score":	999928,
			"second_score":	773
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	485,
			"primary_score":	999928,
			"second_score":	772
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	486,
			"primary_score":	999928,
			"second_score":	771
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	487,
			"primary_score":	999928,
			"second_score":	770
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	489,
			"primary_score":	999928,
			"second_score":	769
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	492,
			"primary_score":	999928,
			"second_score":	868
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	497,
			"primary_score":	999928,
			"second_score":	867
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	498,
			"primary_score":	999928,
			"second_score":	866
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	500,
			"primary_score":	999928,
			"second_score":	865
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	503,
			"primary_score":	999928,
			"second_score":	836
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	536,
			"primary_score":	999928,
			"second_score":	774
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	537,
			"primary_score":	999928,
			"second_score":	768
		}, {
			"file":	"libtiff/tif_dirinfo.c",
			"line":	544,
			"primary_score":	999928,
			"second_score":	767
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	287,
			"primary_score":	999928,
			"second_score":	13544
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	288,
			"primary_score":	999928,
			"second_score":	13543
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	289,
			"primary_score":	999971,
			"second_score":	13542
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	290,
			"primary_score":	999928,
			"second_score":	13765
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	311,
			"primary_score":	999928,
			"second_score":	13762
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	373,
			"primary_score":	999928,
			"second_score":	14406
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	374,
			"primary_score":	999928,
			"second_score":	14405
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	376,
			"primary_score":	999928,
			"second_score":	14404
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	397,
			"primary_score":	999928,
			"second_score":	14403
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	398,
			"primary_score":	999928,
			"second_score":	14402
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	399,
			"primary_score":	999928,
			"second_score":	14399
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	400,
			"primary_score":	999928,
			"second_score":	14398
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	759,
			"primary_score":	999928,
			"second_score":	13527
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	760,
			"primary_score":	999928,
			"second_score":	13526
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	761,
			"primary_score":	999928,
			"second_score":	13525
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	762,
			"primary_score":	999928,
			"second_score":	13524
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	763,
			"primary_score":	999928,
			"second_score":	13522
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	768,
			"primary_score":	999928,
			"second_score":	13521
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	775,
			"primary_score":	999928,
			"second_score":	13520
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	777,
			"primary_score":	999928,
			"second_score":	13519
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	780,
			"primary_score":	999928,
			"second_score":	13518
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	781,
			"primary_score":	999928,
			"second_score":	13517
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	782,
			"primary_score":	999928,
			"second_score":	13516
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	783,
			"primary_score":	999928,
			"second_score":	13515
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	784,
			"primary_score":	999928,
			"second_score":	13506
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	786,
			"primary_score":	999928,
			"second_score":	13505
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	788,
			"primary_score":	999928,
			"second_score":	13504
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	789,
			"primary_score":	999933,
			"second_score":	13578
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	792,
			"primary_score":	999929,
			"second_score":	13503
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	793,
			"primary_score":	999929,
			"second_score":	13502
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	794,
			"primary_score":	999929,
			"second_score":	13501
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	796,
			"primary_score":	999929,
			"second_score":	13500
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	797,
			"primary_score":	999929,
			"second_score":	13490
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	822,
			"primary_score":	999928,
			"second_score":	13489
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	823,
			"primary_score":	999928,
			"second_score":	13488
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1188,
			"primary_score":	999932,
			"second_score":	13533
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1189,
			"primary_score":	999932,
			"second_score":	13532
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1190,
			"primary_score":	999932,
			"second_score":	13531
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1191,
			"primary_score":	999932,
			"second_score":	13530
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1192,
			"primary_score":	999932,
			"second_score":	13529
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1206,
			"primary_score":	999932,
			"second_score":	13528
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1207,
			"primary_score":	999932,
			"second_score":	13487
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1212,
			"primary_score":	999932,
			"second_score":	13486
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1216,
			"primary_score":	999932,
			"second_score":	13485
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1218,
			"primary_score":	999932,
			"second_score":	13484
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1857,
			"primary_score":	999928,
			"second_score":	13608
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1858,
			"primary_score":	999928,
			"second_score":	13607
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1859,
			"primary_score":	999928,
			"second_score":	13606
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1860,
			"primary_score":	999928,
			"second_score":	13605
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1861,
			"primary_score":	999928,
			"second_score":	13604
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1875,
			"primary_score":	999928,
			"second_score":	13603
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1876,
			"primary_score":	999928,
			"second_score":	13574
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1881,
			"primary_score":	999928,
			"second_score":	13573
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1909,
			"primary_score":	999928,
			"second_score":	13572
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1910,
			"primary_score":	999928,
			"second_score":	13570
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1915,
			"primary_score":	999928,
			"second_score":	13569
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1979,
			"primary_score":	999928,
			"second_score":	13568
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1980,
			"primary_score":	999928,
			"second_score":	13567
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1981,
			"primary_score":	999928,
			"second_score":	13566
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1982,
			"primary_score":	999928,
			"second_score":	13565
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1983,
			"primary_score":	999928,
			"second_score":	13564
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1984,
			"primary_score":	999928,
			"second_score":	13563
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1986,
			"primary_score":	999928,
			"second_score":	13562
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1988,
			"primary_score":	999928,
			"second_score":	13561
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	1991,
			"primary_score":	999928,
			"second_score":	13560
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2011,
			"primary_score":	999928,
			"second_score":	13559
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2012,
			"primary_score":	999928,
			"second_score":	13557
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2017,
			"primary_score":	999928,
			"second_score":	13556
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2018,
			"primary_score":	999928,
			"second_score":	13555
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2729,
			"primary_score":	999971,
			"second_score":	13539
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2730,
			"primary_score":	999971,
			"second_score":	13538
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2731,
			"primary_score":	999971,
			"second_score":	13537
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2732,
			"primary_score":	999971,
			"second_score":	13536
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2733,
			"primary_score":	999971,
			"second_score":	13535
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2735,
			"primary_score":	999971,
			"second_score":	13534
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2736,
			"primary_score":	999971,
			"second_score":	13483
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2738,
			"primary_score":	999971,
			"second_score":	13482
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2739,
			"primary_score":	999971,
			"second_score":	13481
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2740,
			"primary_score":	999971,
			"second_score":	13480
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2741,
			"primary_score":	999971,
			"second_score":	13479
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2742,
			"primary_score":	999971,
			"second_score":	13478
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2744,
			"primary_score":	999971,
			"second_score":	13475
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2749,
			"primary_score":	999971,
			"second_score":	13474
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2751,
			"primary_score":	999971,
			"second_score":	13473
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2752,
			"primary_score":	999971,
			"second_score":	13471
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2797,
			"primary_score":	999928,
			"second_score":	13764
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	2799,
			"primary_score":	999928,
			"second_score":	13763
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3287,
			"primary_score":	999929,
			"second_score":	13499
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3288,
			"primary_score":	999929,
			"second_score":	13498
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3294,
			"primary_score":	999929,
			"second_score":	13497
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3295,
			"primary_score":	999929,
			"second_score":	13496
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3296,
			"primary_score":	999929,
			"second_score":	13495
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3297,
			"primary_score":	999929,
			"second_score":	13494
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3299,
			"primary_score":	999929,
			"second_score":	13493
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3301,
			"primary_score":	999929,
			"second_score":	13491
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3398,
			"primary_score":	999928,
			"second_score":	749
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3399,
			"primary_score":	999928,
			"second_score":	748
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3400,
			"primary_score":	999928,
			"second_score":	747
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3401,
			"primary_score":	999928,
			"second_score":	746
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3402,
			"primary_score":	999928,
			"second_score":	745
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3403,
			"primary_score":	999928,
			"second_score":	744
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3404,
			"primary_score":	999928,
			"second_score":	743
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3405,
			"primary_score":	999928,
			"second_score":	742
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3406,
			"primary_score":	999928,
			"second_score":	741
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3407,
			"primary_score":	999928,
			"second_score":	740
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3408,
			"primary_score":	999935,
			"second_score":	736
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3409,
			"primary_score":	999928,
			"second_score":	24562
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3410,
			"primary_score":	999928,
			"second_score":	24560
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3411,
			"primary_score":	999928,
			"second_score":	24559
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3412,
			"primary_score":	999928,
			"second_score":	24558
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3413,
			"primary_score":	999928,
			"second_score":	24348
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3419,
			"primary_score":	999928,
			"second_score":	24347
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3420,
			"primary_score":	999928,
			"second_score":	24318
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3421,
			"primary_score":	999928,
			"second_score":	24317
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3423,
			"primary_score":	999928,
			"second_score":	24316
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3424,
			"primary_score":	999928,
			"second_score":	24271
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3431,
			"primary_score":	999928,
			"second_score":	17470
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3449,
			"primary_score":	999928,
			"second_score":	17395
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3450,
			"primary_score":	999928,
			"second_score":	17382
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3452,
			"primary_score":	999928,
			"second_score":	17381
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3454,
			"primary_score":	999928,
			"second_score":	17249
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3456,
			"primary_score":	999928,
			"second_score":	17248
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3457,
			"primary_score":	999928,
			"second_score":	17238
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3465,
			"primary_score":	999928,
			"second_score":	17237
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3466,
			"primary_score":	999928,
			"second_score":	17236
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3467,
			"primary_score":	999928,
			"second_score":	17235
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3468,
			"primary_score":	999928,
			"second_score":	17228
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3470,
			"primary_score":	999928,
			"second_score":	17227
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3475,
			"primary_score":	999928,
			"second_score":	17226
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3477,
			"primary_score":	999928,
			"second_score":	15050
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3487,
			"primary_score":	999928,
			"second_score":	15049
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3489,
			"primary_score":	999928,
			"second_score":	14041
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3491,
			"primary_score":	999928,
			"second_score":	14040
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3492,
			"primary_score":	999928,
			"second_score":	14006
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3516,
			"primary_score":	999928,
			"second_score":	14005
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3518,
			"primary_score":	999928,
			"second_score":	14004
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3519,
			"primary_score":	999928,
			"second_score":	14003
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3523,
			"primary_score":	999928,
			"second_score":	14002
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3530,
			"primary_score":	999928,
			"second_score":	14251
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3542,
			"primary_score":	999928,
			"second_score":	14043
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3543,
			"primary_score":	999928,
			"second_score":	14042
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3556,
			"primary_score":	999928,
			"second_score":	14001
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3576,
			"primary_score":	999928,
			"second_score":	14000
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3584,
			"primary_score":	999928,
			"second_score":	13999
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3585,
			"primary_score":	999928,
			"second_score":	13998
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3586,
			"primary_score":	999928,
			"second_score":	13992
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3587,
			"primary_score":	999928,
			"second_score":	13991
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3588,
			"primary_score":	999928,
			"second_score":	13990
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3589,
			"primary_score":	999928,
			"second_score":	13989
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3594,
			"primary_score":	999928,
			"second_score":	13988
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3600,
			"primary_score":	999928,
			"second_score":	13987
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3601,
			"primary_score":	999928,
			"second_score":	13986
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3603,
			"primary_score":	999928,
			"second_score":	13985
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3625,
			"primary_score":	999928,
			"second_score":	13984
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3627,
			"primary_score":	999928,
			"second_score":	13548
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3647,
			"primary_score":	999928,
			"second_score":	13547
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3648,
			"primary_score":	999928,
			"second_score":	13546
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3649,
			"primary_score":	999928,
			"second_score":	13545
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3650,
			"primary_score":	999928,
			"second_score":	13541
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3651,
			"primary_score":	999971,
			"second_score":	13540
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3652,
			"primary_score":	999928,
			"second_score":	13470
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3657,
			"primary_score":	999928,
			"second_score":	13469
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3660,
			"primary_score":	999928,
			"second_score":	13388
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3680,
			"primary_score":	999928,
			"second_score":	13616
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3685,
			"primary_score":	999928,
			"second_score":	13550
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3739,
			"primary_score":	999929,
			"second_score":	13680
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3758,
			"primary_score":	999928,
			"second_score":	13387
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3806,
			"primary_score":	999928,
			"second_score":	13386
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3816,
			"primary_score":	999928,
			"second_score":	13385
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3821,
			"primary_score":	999928,
			"second_score":	13384
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3861,
			"primary_score":	999928,
			"second_score":	13383
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3875,
			"primary_score":	999928,
			"second_score":	13382
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3894,
			"primary_score":	999928,
			"second_score":	13381
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3896,
			"primary_score":	999928,
			"second_score":	13380
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3897,
			"primary_score":	999928,
			"second_score":	13378
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3899,
			"primary_score":	999928,
			"second_score":	13377
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3901,
			"primary_score":	999929,
			"second_score":	13376
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3902,
			"primary_score":	999982,
			"second_score":	13375
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3911,
			"primary_score":	999928,
			"second_score":	13374
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3926,
			"primary_score":	999928,
			"second_score":	13373
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3937,
			"primary_score":	999928,
			"second_score":	13370
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3946,
			"primary_score":	999928,
			"second_score":	13369
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3947,
			"primary_score":	999928,
			"second_score":	13368
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3952,
			"primary_score":	999928,
			"second_score":	13367
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3953,
			"primary_score":	999928,
			"second_score":	13366
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3954,
			"primary_score":	999928,
			"second_score":	13365
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3955,
			"primary_score":	999928,
			"second_score":	13364
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3956,
			"primary_score":	999928,
			"second_score":	13363
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3958,
			"primary_score":	999928,
			"second_score":	13362
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3959,
			"primary_score":	999928,
			"second_score":	13339
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3965,
			"primary_score":	999928,
			"second_score":	13338
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3973,
			"primary_score":	999928,
			"second_score":	13337
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3979,
			"primary_score":	999928,
			"second_score":	13301
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3989,
			"primary_score":	999928,
			"second_score":	24346
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3990,
			"primary_score":	999928,
			"second_score":	24345
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3991,
			"primary_score":	999928,
			"second_score":	24344
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3992,
			"primary_score":	999928,
			"second_score":	24343
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3993,
			"primary_score":	999928,
			"second_score":	24342
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3994,
			"primary_score":	999928,
			"second_score":	24341
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	3996,
			"primary_score":	999928,
			"second_score":	24320
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4002,
			"primary_score":	999928,
			"second_score":	24319
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4009,
			"primary_score":	999928,
			"second_score":	17247
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4010,
			"primary_score":	999928,
			"second_score":	17246
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4011,
			"primary_score":	999928,
			"second_score":	17245
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4012,
			"primary_score":	999928,
			"second_score":	17244
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4014,
			"primary_score":	999928,
			"second_score":	17240
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4015,
			"primary_score":	999928,
			"second_score":	17239
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4023,
			"primary_score":	999928,
			"second_score":	13820
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4024,
			"primary_score":	999928,
			"second_score":	13819
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4025,
			"primary_score":	999928,
			"second_score":	13818
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4026,
			"primary_score":	999928,
			"second_score":	13817
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4028,
			"primary_score":	999928,
			"second_score":	13786
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4033,
			"primary_score":	999928,
			"second_score":	13785
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4034,
			"primary_score":	999928,
			"second_score":	13784
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4035,
			"primary_score":	999928,
			"second_score":	13783
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4036,
			"primary_score":	999928,
			"second_score":	13788
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4037,
			"primary_score":	999928,
			"second_score":	13787
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4039,
			"primary_score":	999928,
			"second_score":	13797
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4041,
			"primary_score":	999928,
			"second_score":	13782
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4043,
			"primary_score":	999928,
			"second_score":	13781
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4045,
			"primary_score":	999928,
			"second_score":	13780
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4046,
			"primary_score":	999928,
			"second_score":	13779
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4049,
			"primary_score":	999928,
			"second_score":	13778
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4271,
			"primary_score":	999928,
			"second_score":	739
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4273,
			"primary_score":	999928,
			"second_score":	738
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4274,
			"primary_score":	999935,
			"second_score":	737
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4276,
			"primary_score":	999928,
			"second_score":	24579
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4281,
			"primary_score":	999928,
			"second_score":	24578
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4283,
			"primary_score":	999928,
			"second_score":	24577
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4284,
			"primary_score":	999928,
			"second_score":	24576
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4290,
			"primary_score":	999928,
			"second_score":	24575
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4292,
			"primary_score":	999928,
			"second_score":	24567
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4294,
			"primary_score":	999928,
			"second_score":	24566
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4295,
			"primary_score":	999928,
			"second_score":	24565
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4298,
			"primary_score":	999928,
			"second_score":	24564
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4300,
			"primary_score":	999928,
			"second_score":	24563
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4335,
			"primary_score":	999928,
			"second_score":	24557
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4337,
			"primary_score":	999928,
			"second_score":	24556
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4338,
			"primary_score":	999928,
			"second_score":	24555
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4339,
			"primary_score":	999928,
			"second_score":	24554
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4340,
			"primary_score":	999928,
			"second_score":	24553
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4341,
			"primary_score":	999928,
			"second_score":	24552
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4342,
			"primary_score":	999928,
			"second_score":	24551
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4343,
			"primary_score":	999928,
			"second_score":	24550
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4345,
			"primary_score":	999928,
			"second_score":	24549
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4347,
			"primary_score":	999928,
			"second_score":	24548
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4348,
			"primary_score":	999928,
			"second_score":	24547
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4349,
			"primary_score":	999928,
			"second_score":	24546
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4350,
			"primary_score":	999928,
			"second_score":	24545
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4426,
			"primary_score":	999928,
			"second_score":	24544
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4427,
			"primary_score":	999928,
			"second_score":	24543
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4428,
			"primary_score":	999928,
			"second_score":	24542
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4443,
			"primary_score":	999928,
			"second_score":	24541
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4445,
			"primary_score":	999928,
			"second_score":	24540
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4446,
			"primary_score":	999928,
			"second_score":	24539
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4451,
			"primary_score":	999928,
			"second_score":	24538
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4454,
			"primary_score":	999928,
			"second_score":	24536
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4455,
			"primary_score":	999928,
			"second_score":	24535
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4457,
			"primary_score":	999928,
			"second_score":	24534
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4463,
			"primary_score":	999928,
			"second_score":	24533
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4490,
			"primary_score":	999928,
			"second_score":	24532
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4493,
			"primary_score":	999928,
			"second_score":	24523
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4495,
			"primary_score":	999928,
			"second_score":	24522
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4496,
			"primary_score":	999928,
			"second_score":	24521
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4502,
			"primary_score":	999928,
			"second_score":	24520
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4505,
			"primary_score":	999928,
			"second_score":	24518
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4506,
			"primary_score":	999928,
			"second_score":	24517
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4507,
			"primary_score":	999928,
			"second_score":	24516
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4509,
			"primary_score":	999928,
			"second_score":	24515
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4510,
			"primary_score":	999928,
			"second_score":	24514
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4511,
			"primary_score":	999928,
			"second_score":	24513
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4514,
			"primary_score":	999928,
			"second_score":	24512
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4516,
			"primary_score":	999928,
			"second_score":	24510
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4518,
			"primary_score":	999928,
			"second_score":	24509
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4533,
			"primary_score":	999928,
			"second_score":	24508
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4536,
			"primary_score":	999928,
			"second_score":	24499
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4541,
			"primary_score":	999928,
			"second_score":	24498
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4542,
			"primary_score":	999928,
			"second_score":	24497
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4543,
			"primary_score":	999928,
			"second_score":	24496
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4545,
			"primary_score":	999928,
			"second_score":	24365
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4547,
			"primary_score":	999928,
			"second_score":	24364
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4548,
			"primary_score":	999928,
			"second_score":	24363
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4549,
			"primary_score":	999928,
			"second_score":	24362
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4551,
			"primary_score":	999928,
			"second_score":	24361
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4552,
			"primary_score":	999928,
			"second_score":	24360
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4553,
			"primary_score":	999928,
			"second_score":	24359
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4555,
			"primary_score":	999928,
			"second_score":	24358
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4557,
			"primary_score":	999928,
			"second_score":	24357
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4558,
			"primary_score":	999928,
			"second_score":	24356
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4559,
			"primary_score":	999928,
			"second_score":	24355
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4560,
			"primary_score":	999928,
			"second_score":	24354
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4571,
			"primary_score":	999928,
			"second_score":	24353
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4573,
			"primary_score":	999928,
			"second_score":	24352
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4574,
			"primary_score":	999928,
			"second_score":	24350
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4575,
			"primary_score":	999928,
			"second_score":	24349
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4584,
			"primary_score":	999928,
			"second_score":	13825
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4585,
			"primary_score":	999928,
			"second_score":	13824
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4586,
			"primary_score":	999928,
			"second_score":	13823
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4587,
			"primary_score":	999928,
			"second_score":	13822
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4588,
			"primary_score":	999928,
			"second_score":	13821
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4589,
			"primary_score":	999928,
			"second_score":	13777
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4596,
			"primary_score":	999928,
			"second_score":	13776
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4597,
			"primary_score":	999928,
			"second_score":	13775
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4598,
			"primary_score":	999928,
			"second_score":	13774
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4599,
			"primary_score":	999928,
			"second_score":	13773
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4600,
			"primary_score":	999928,
			"second_score":	13772
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4668,
			"primary_score":	999928,
			"second_score":	13771
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4669,
			"primary_score":	999928,
			"second_score":	13770
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4670,
			"primary_score":	999928,
			"second_score":	13769
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4671,
			"primary_score":	999928,
			"second_score":	13768
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4672,
			"primary_score":	999928,
			"second_score":	13761
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4674,
			"primary_score":	999928,
			"second_score":	13760
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4678,
			"primary_score":	999928,
			"second_score":	13683
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4681,
			"primary_score":	999928,
			"second_score":	14410
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4682,
			"primary_score":	999928,
			"second_score":	14409
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4683,
			"primary_score":	999928,
			"second_score":	14408
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4684,
			"primary_score":	999928,
			"second_score":	14407
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4685,
			"primary_score":	999928,
			"second_score":	14397
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4687,
			"primary_score":	999928,
			"second_score":	14396
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	4691,
			"primary_score":	999928,
			"second_score":	14306
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	5221,
			"primary_score":	999928,
			"second_score":	13682
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	5226,
			"primary_score":	999928,
			"second_score":	13681
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	5236,
			"primary_score":	999928,
			"second_score":	13612
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	5237,
			"primary_score":	999928,
			"second_score":	13611
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	5238,
			"primary_score":	999928,
			"second_score":	13610
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	5239,
			"primary_score":	999928,
			"second_score":	13609
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	5240,
			"primary_score":	999928,
			"second_score":	13554
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	5245,
			"primary_score":	999928,
			"second_score":	13553
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	5261,
			"primary_score":	999928,
			"second_score":	13552
		}, {
			"file":	"libtiff/tif_dirread.c",
			"line":	5262,
			"primary_score":	999928,
			"second_score":	13551
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	166,
			"primary_score":	999933,
			"second_score":	9736
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	348,
			"primary_score":	999933,
			"second_score":	9735
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	349,
			"primary_score":	999933,
			"second_score":	9734
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	350,
			"primary_score":	999933,
			"second_score":	9733
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	351,
			"primary_score":	999933,
			"second_score":	9732
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	352,
			"primary_score":	999933,
			"second_score":	9731
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	353,
			"primary_score":	999933,
			"second_score":	9730
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	354,
			"primary_score":	999933,
			"second_score":	9729
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	361,
			"primary_score":	999933,
			"second_score":	9728
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	363,
			"primary_score":	999933,
			"second_score":	9727
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	365,
			"primary_score":	999989,
			"second_score":	9726
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	366,
			"primary_score":	999989,
			"second_score":	9725
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	373,
			"primary_score":	999933,
			"second_score":	9722
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	381,
			"primary_score":	999933,
			"second_score":	9720
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	384,
			"primary_score":	999989,
			"second_score":	9719
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	391,
			"primary_score":	999933,
			"second_score":	9684
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	393,
			"primary_score":	999934,
			"second_score":	9683
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	394,
			"primary_score":	999934,
			"second_score":	9681
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	395,
			"primary_score":	999934,
			"second_score":	9680
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	396,
			"primary_score":	999934,
			"second_score":	9679
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	398,
			"primary_score":	999933,
			"second_score":	9678
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	400,
			"primary_score":	999933,
			"second_score":	9677
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	401,
			"primary_score":	999933,
			"second_score":	9676
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	402,
			"primary_score":	999933,
			"second_score":	9675
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	403,
			"primary_score":	999933,
			"second_score":	9674
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	405,
			"primary_score":	999933,
			"second_score":	9113
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	406,
			"primary_score":	999933,
			"second_score":	9112
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	408,
			"primary_score":	999933,
			"second_score":	9111
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	410,
			"primary_score":	999933,
			"second_score":	9110
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	412,
			"primary_score":	999933,
			"second_score":	9087
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	415,
			"primary_score":	999933,
			"second_score":	9061
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	422,
			"primary_score":	999933,
			"second_score":	9060
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	429,
			"primary_score":	999933,
			"second_score":	9059
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	436,
			"primary_score":	999933,
			"second_score":	9058
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	441,
			"primary_score":	999933,
			"second_score":	9057
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	443,
			"primary_score":	999933,
			"second_score":	9056
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	446,
			"primary_score":	999933,
			"second_score":	8996
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	448,
			"primary_score":	999933,
			"second_score":	8995
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	451,
			"primary_score":	999933,
			"second_score":	8964
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	453,
			"primary_score":	999934,
			"second_score":	8963
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	456,
			"primary_score":	999933,
			"second_score":	8929
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	461,
			"primary_score":	999933,
			"second_score":	8928
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	466,
			"primary_score":	999933,
			"second_score":	8927
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	468,
			"primary_score":	999938,
			"second_score":	8926
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	471,
			"primary_score":	999933,
			"second_score":	8889
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	473,
			"primary_score":	999933,
			"second_score":	8888
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	476,
			"primary_score":	999933,
			"second_score":	8848
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	478,
			"primary_score":	999934,
			"second_score":	8847
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	481,
			"primary_score":	999933,
			"second_score":	8803
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	486,
			"primary_score":	999933,
			"second_score":	8802
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	491,
			"primary_score":	999933,
			"second_score":	8801
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	493,
			"primary_score":	999933,
			"second_score":	8800
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	496,
			"primary_score":	999933,
			"second_score":	8754
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	501,
			"primary_score":	999933,
			"second_score":	8753
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	506,
			"primary_score":	999933,
			"second_score":	8752
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	508,
			"primary_score":	999933,
			"second_score":	8751
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	510,
			"primary_score":	999933,
			"second_score":	8750
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	519,
			"primary_score":	999933,
			"second_score":	8684
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	521,
			"primary_score":	999933,
			"second_score":	8683
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	523,
			"primary_score":	999933,
			"second_score":	8682
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	532,
			"primary_score":	999933,
			"second_score":	8625
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	537,
			"primary_score":	999933,
			"second_score":	8624
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	548,
			"primary_score":	999933,
			"second_score":	8623
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	550,
			"primary_score":	999954,
			"second_score":	8622
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	553,
			"primary_score":	999933,
			"second_score":	8535
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	558,
			"primary_score":	999933,
			"second_score":	8534
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	563,
			"primary_score":	999933,
			"second_score":	8533
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	568,
			"primary_score":	999933,
			"second_score":	8532
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	573,
			"primary_score":	999933,
			"second_score":	8531
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	578,
			"primary_score":	999933,
			"second_score":	8530
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	583,
			"primary_score":	999933,
			"second_score":	8529
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	588,
			"primary_score":	999933,
			"second_score":	8528
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	593,
			"primary_score":	999933,
			"second_score":	8527
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	598,
			"primary_score":	999933,
			"second_score":	8526
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	603,
			"primary_score":	999933,
			"second_score":	8525
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	604,
			"primary_score":	999933,
			"second_score":	8524
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	605,
			"primary_score":	999933,
			"second_score":	8523
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	606,
			"primary_score":	999933,
			"second_score":	8114
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	607,
			"primary_score":	999933,
			"second_score":	8113
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	608,
			"primary_score":	999933,
			"second_score":	8112
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	667,
			"primary_score":	999933,
			"second_score":	8111
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	740,
			"primary_score":	999933,
			"second_score":	8110
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	741,
			"primary_score":	999933,
			"second_score":	8109
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	742,
			"primary_score":	999933,
			"second_score":	9150
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	743,
			"primary_score":	999933,
			"second_score":	9148
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	748,
			"primary_score":	999933,
			"second_score":	9147
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	750,
			"primary_score":	999933,
			"second_score":	9146
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	755,
			"primary_score":	999933,
			"second_score":	9123
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	757,
			"primary_score":	999933,
			"second_score":	9122
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	758,
			"primary_score":	999933,
			"second_score":	9121
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	761,
			"primary_score":	999933,
			"second_score":	9120
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	762,
			"primary_score":	999933,
			"second_score":	9119
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	763,
			"primary_score":	999933,
			"second_score":	9118
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	764,
			"primary_score":	999933,
			"second_score":	9117
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	769,
			"primary_score":	999933,
			"second_score":	9116
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	771,
			"primary_score":	999933,
			"second_score":	9115
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	772,
			"primary_score":	999933,
			"second_score":	9114
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	774,
			"primary_score":	999933,
			"second_score":	8108
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	776,
			"primary_score":	999933,
			"second_score":	8107
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	792,
			"primary_score":	999933,
			"second_score":	8106
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	793,
			"primary_score":	999933,
			"second_score":	8104
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	798,
			"primary_score":	999933,
			"second_score":	8103
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	800,
			"primary_score":	999933,
			"second_score":	8102
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	801,
			"primary_score":	999933,
			"second_score":	8101
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	802,
			"primary_score":	999933,
			"second_score":	8100
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	803,
			"primary_score":	999933,
			"second_score":	8099
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	804,
			"primary_score":	999933,
			"second_score":	8098
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	805,
			"primary_score":	999933,
			"second_score":	8097
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	807,
			"primary_score":	999933,
			"second_score":	8096
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	808,
			"primary_score":	999933,
			"second_score":	8095
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	809,
			"primary_score":	999933,
			"second_score":	8094
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	811,
			"primary_score":	999933,
			"second_score":	7928
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	812,
			"primary_score":	999933,
			"second_score":	7927
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	814,
			"primary_score":	999933,
			"second_score":	7926
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	815,
			"primary_score":	999933,
			"second_score":	7925
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	816,
			"primary_score":	999933,
			"second_score":	7924
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	818,
			"primary_score":	999933,
			"second_score":	7923
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	819,
			"primary_score":	999933,
			"second_score":	7922
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	820,
			"primary_score":	999933,
			"second_score":	7921
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	821,
			"primary_score":	999933,
			"second_score":	7919
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	823,
			"primary_score":	999933,
			"second_score":	7918
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	826,
			"primary_score":	999933,
			"second_score":	7917
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	827,
			"primary_score":	999933,
			"second_score":	7915
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	828,
			"primary_score":	999933,
			"second_score":	7914
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	830,
			"primary_score":	999933,
			"second_score":	7913
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	831,
			"primary_score":	999933,
			"second_score":	7912
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	833,
			"primary_score":	999933,
			"second_score":	7911
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	867,
			"primary_score":	999933,
			"second_score":	7909
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	868,
			"primary_score":	999933,
			"second_score":	7907
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	869,
			"primary_score":	999933,
			"second_score":	7906
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	874,
			"primary_score":	999933,
			"second_score":	7902
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	879,
			"primary_score":	999933,
			"second_score":	7898
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	880,
			"primary_score":	999933,
			"second_score":	7896
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	882,
			"primary_score":	999933,
			"second_score":	7895
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	883,
			"primary_score":	999933,
			"second_score":	7844
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	884,
			"primary_score":	999933,
			"second_score":	7843
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	885,
			"primary_score":	999933,
			"second_score":	7842
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	890,
			"primary_score":	999933,
			"second_score":	7840
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	892,
			"primary_score":	999933,
			"second_score":	752
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1055,
			"primary_score":	999933,
			"second_score":	8799
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1057,
			"primary_score":	999933,
			"second_score":	9616
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1058,
			"primary_score":	999933,
			"second_score":	9615
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1060,
			"primary_score":	999933,
			"second_score":	8798
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1077,
			"primary_score":	999933,
			"second_score":	8621
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1078,
			"primary_score":	999933,
			"second_score":	8620
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1079,
			"primary_score":	999933,
			"second_score":	8619
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1080,
			"primary_score":	999933,
			"second_score":	8618
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1081,
			"primary_score":	999933,
			"second_score":	8617
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1082,
			"primary_score":	999933,
			"second_score":	8616
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1084,
			"primary_score":	999933,
			"second_score":	9578
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1085,
			"primary_score":	999933,
			"second_score":	9577
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1087,
			"primary_score":	999933,
			"second_score":	8615
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1088,
			"primary_score":	999933,
			"second_score":	8613
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1093,
			"primary_score":	999933,
			"second_score":	8612
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1095,
			"primary_score":	999933,
			"second_score":	8611
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1096,
			"primary_score":	999933,
			"second_score":	8538
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1097,
			"primary_score":	999933,
			"second_score":	8536
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1450,
			"primary_score":	999933,
			"second_score":	8846
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1452,
			"primary_score":	999933,
			"second_score":	9623
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1453,
			"primary_score":	999933,
			"second_score":	9622
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1455,
			"primary_score":	999933,
			"second_score":	8845
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1456,
			"primary_score":	999933,
			"second_score":	8844
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1471,
			"primary_score":	999933,
			"second_score":	8681
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1472,
			"primary_score":	999933,
			"second_score":	8680
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1473,
			"primary_score":	999933,
			"second_score":	8679
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1474,
			"primary_score":	999933,
			"second_score":	8678
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1475,
			"primary_score":	999933,
			"second_score":	8677
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1476,
			"primary_score":	999933,
			"second_score":	8676
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1479,
			"primary_score":	999933,
			"second_score":	8675
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1481,
			"primary_score":	999933,
			"second_score":	9590
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1482,
			"primary_score":	999933,
			"second_score":	9589
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1486,
			"primary_score":	999933,
			"second_score":	8674
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1495,
			"primary_score":	999933,
			"second_score":	8673
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1496,
			"primary_score":	999933,
			"second_score":	8671
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1502,
			"primary_score":	999933,
			"second_score":	8670
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1504,
			"primary_score":	999933,
			"second_score":	8669
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1511,
			"primary_score":	999933,
			"second_score":	8668
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1514,
			"primary_score":	999933,
			"second_score":	8667
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1515,
			"primary_score":	999933,
			"second_score":	8628
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1517,
			"primary_score":	999933,
			"second_score":	8626
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1826,
			"primary_score":	999933,
			"second_score":	8797
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1827,
			"primary_score":	999933,
			"second_score":	8796
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1828,
			"primary_score":	999933,
			"second_score":	8795
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1829,
			"primary_score":	999933,
			"second_score":	8794
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1831,
			"primary_score":	999933,
			"second_score":	8793
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1837,
			"primary_score":	999933,
			"second_score":	8610
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1838,
			"primary_score":	999933,
			"second_score":	8609
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1839,
			"primary_score":	999933,
			"second_score":	8608
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1841,
			"primary_score":	999933,
			"second_score":	8607
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1881,
			"primary_score":	999933,
			"second_score":	8666
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1882,
			"primary_score":	999933,
			"second_score":	8665
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1883,
			"primary_score":	999933,
			"second_score":	8664
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	1885,
			"primary_score":	999933,
			"second_score":	8663
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2177,
			"primary_score":	999933,
			"second_score":	8606
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2178,
			"primary_score":	999933,
			"second_score":	8605
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2179,
			"primary_score":	999933,
			"second_score":	8604
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2180,
			"primary_score":	999933,
			"second_score":	8603
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2182,
			"primary_score":	999933,
			"second_score":	8572
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2183,
			"primary_score":	999933,
			"second_score":	8571
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2184,
			"primary_score":	999933,
			"second_score":	8641
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2185,
			"primary_score":	999933,
			"second_score":	8570
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2187,
			"primary_score":	999933,
			"second_score":	8569
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2189,
			"primary_score":	999933,
			"second_score":	8639
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2190,
			"primary_score":	999933,
			"second_score":	8638
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2193,
			"primary_score":	999933,
			"second_score":	8568
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2194,
			"primary_score":	999933,
			"second_score":	8567
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2195,
			"primary_score":	999933,
			"second_score":	8566
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2196,
			"primary_score":	999933,
			"second_score":	8565
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2197,
			"primary_score":	999933,
			"second_score":	8564
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2198,
			"primary_score":	999933,
			"second_score":	8632
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2201,
			"primary_score":	999935,
			"second_score":	8563
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2202,
			"primary_score":	999935,
			"second_score":	8562
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2203,
			"primary_score":	999935,
			"second_score":	8561
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2204,
			"primary_score":	999935,
			"second_score":	8560
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2205,
			"primary_score":	999935,
			"second_score":	8559
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2206,
			"primary_score":	999935,
			"second_score":	8558
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2211,
			"primary_score":	999935,
			"second_score":	8557
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2216,
			"primary_score":	999935,
			"second_score":	8553
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2217,
			"primary_score":	999935,
			"second_score":	8552
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2222,
			"primary_score":	999935,
			"second_score":	8548
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2223,
			"primary_score":	999935,
			"second_score":	8547
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2225,
			"primary_score":	999935,
			"second_score":	8546
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2227,
			"primary_score":	999935,
			"second_score":	8545
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2228,
			"primary_score":	999935,
			"second_score":	8544
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2229,
			"primary_score":	999935,
			"second_score":	8543
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2231,
			"primary_score":	999935,
			"second_score":	8542
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2240,
			"primary_score":	999933,
			"second_score":	8540
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2241,
			"primary_score":	999933,
			"second_score":	8539
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2250,
			"primary_score":	999933,
			"second_score":	9145
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2252,
			"primary_score":	999933,
			"second_score":	9144
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2257,
			"primary_score":	999933,
			"second_score":	9140
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2307,
			"primary_score":	999933,
			"second_score":	9139
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2309,
			"primary_score":	999933,
			"second_score":	9138
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2310,
			"primary_score":	999933,
			"second_score":	9137
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2311,
			"primary_score":	999933,
			"second_score":	9136
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2312,
			"primary_score":	999933,
			"second_score":	9135
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2314,
			"primary_score":	999933,
			"second_score":	9134
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2318,
			"primary_score":	999933,
			"second_score":	9133
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2319,
			"primary_score":	999933,
			"second_score":	9132
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2320,
			"primary_score":	999933,
			"second_score":	9128
		}, {
			"file":	"libtiff/tif_dirwrite.c",
			"line":	2325,
			"primary_score":	999933,
			"second_score":	9124
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	47,
			"primary_score":	999962,
			"second_score":	9756
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	48,
			"primary_score":	999962,
			"second_score":	9755
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	49,
			"primary_score":	999962,
			"second_score":	9754
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	51,
			"primary_score":	999962,
			"second_score":	9753
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	52,
			"primary_score":	999962,
			"second_score":	9752
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	55,
			"primary_score":	999962,
			"second_score":	9751
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	61,
			"primary_score":	999962,
			"second_score":	9750
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	62,
			"primary_score":	999962,
			"second_score":	9749
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	63,
			"primary_score":	999962,
			"second_score":	9747
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	64,
			"primary_score":	999962,
			"second_score":	9746
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	65,
			"primary_score":	999962,
			"second_score":	9745
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	66,
			"primary_score":	999962,
			"second_score":	9744
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	67,
			"primary_score":	999962,
			"second_score":	9743
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	71,
			"primary_score":	999962,
			"second_score":	9742
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	126,
			"primary_score":	999928,
			"second_score":	796
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	127,
			"primary_score":	999928,
			"second_score":	795
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	128,
			"primary_score":	999928,
			"second_score":	794
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	129,
			"primary_score":	999928,
			"second_score":	793
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	130,
			"primary_score":	999928,
			"second_score":	792
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	131,
			"primary_score":	999928,
			"second_score":	791
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	132,
			"primary_score":	999928,
			"second_score":	790
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	133,
			"primary_score":	999928,
			"second_score":	789
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	134,
			"primary_score":	999928,
			"second_score":	788
		}, {
			"file":	"libtiff/tif_dumpmode.c",
			"line":	135,
			"primary_score":	999928,
			"second_score":	787
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	35,
			"primary_score":	999933,
			"second_score":	343
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	38,
			"primary_score":	999933,
			"second_score":	342
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	46,
			"primary_score":	999933,
			"second_score":	339
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	82,
			"primary_score":	999933,
			"second_score":	338
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	86,
			"primary_score":	999933,
			"second_score":	337
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	101,
			"primary_score":	999933,
			"second_score":	341
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	102,
			"primary_score":	999941,
			"second_score":	340
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	103,
			"primary_score":	999980,
			"second_score":	9782
		}, {
			"file":	"libtiff/tif_flush.c",
			"line":	108,
			"primary_score":	999980,
			"second_score":	9781
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	308,
			"primary_score":	999995,
			"second_score":	9965
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	309,
			"primary_score":	999995,
			"second_score":	9964
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	310,
			"primary_score":	999995,
			"second_score":	9963
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	311,
			"primary_score":	999995,
			"second_score":	9962
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	312,
			"primary_score":	999995,
			"second_score":	9961
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	313,
			"primary_score":	999995,
			"second_score":	9960
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	314,
			"primary_score":	999995,
			"second_score":	9959
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	315,
			"primary_score":	999995,
			"second_score":	9958
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	316,
			"primary_score":	999995,
			"second_score":	9957
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	317,
			"primary_score":	999995,
			"second_score":	9956
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	319,
			"primary_score":	999995,
			"second_score":	9955
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	320,
			"primary_score":	999995,
			"second_score":	9954
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	321,
			"primary_score":	999995,
			"second_score":	9953
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	323,
			"primary_score":	999995,
			"second_score":	9952
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	325,
			"primary_score":	999995,
			"second_score":	9951
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	328,
			"primary_score":	999995,
			"second_score":	9950
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	329,
			"primary_score":	999995,
			"second_score":	9949
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	331,
			"primary_score":	999995,
			"second_score":	9948
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	333,
			"primary_score":	999995,
			"second_score":	9946
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	334,
			"primary_score":	999995,
			"second_score":	9945
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	336,
			"primary_score":	999995,
			"second_score":	9944
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	337,
			"primary_score":	999995,
			"second_score":	9931
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	345,
			"primary_score":	999995,
			"second_score":	9930
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	346,
			"primary_score":	999995,
			"second_score":	9929
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	349,
			"primary_score":	999995,
			"second_score":	9928
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	366,
			"primary_score":	999995,
			"second_score":	9927
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	367,
			"primary_score":	999995,
			"second_score":	9916
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	368,
			"primary_score":	999995,
			"second_score":	9915
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	369,
			"primary_score":	999995,
			"second_score":	9914
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1121,
			"primary_score":	999996,
			"second_score":	9926
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1122,
			"primary_score":	999996,
			"second_score":	9925
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1124,
			"primary_score":	999996,
			"second_score":	9924
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1125,
			"primary_score":	999996,
			"second_score":	9923
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1127,
			"primary_score":	999996,
			"second_score":	9922
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1128,
			"primary_score":	999996,
			"second_score":	9921
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1129,
			"primary_score":	999996,
			"second_score":	9920
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1130,
			"primary_score":	999996,
			"second_score":	9919
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1131,
			"primary_score":	999996,
			"second_score":	9918
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1132,
			"primary_score":	999996,
			"second_score":	9917
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1214,
			"primary_score":	999995,
			"second_score":	9989
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1216,
			"primary_score":	999995,
			"second_score":	9988
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1219,
			"primary_score":	999995,
			"second_score":	9987
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1265,
			"primary_score":	999996,
			"second_score":	10003
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1272,
			"primary_score":	999996,
			"second_score":	10002
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1285,
			"primary_score":	999996,
			"second_score":	10001
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1298,
			"primary_score":	999996,
			"second_score":	10000
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1306,
			"primary_score":	999996,
			"second_score":	9999
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1311,
			"primary_score":	999996,
			"second_score":	9998
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1317,
			"primary_score":	999995,
			"second_score":	10011
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1318,
			"primary_score":	999995,
			"second_score":	10010
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1319,
			"primary_score":	999995,
			"second_score":	10009
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1321,
			"primary_score":	999995,
			"second_score":	10008
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1322,
			"primary_score":	999995,
			"second_score":	10007
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1325,
			"primary_score":	999995,
			"second_score":	10006
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1330,
			"primary_score":	999995,
			"second_score":	10005
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1331,
			"primary_score":	999996,
			"second_score":	10004
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1332,
			"primary_score":	999995,
			"second_score":	9997
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1338,
			"primary_score":	999996,
			"second_score":	9996
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1350,
			"primary_score":	999995,
			"second_score":	9995
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1353,
			"primary_score":	999995,
			"second_score":	9994
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1354,
			"primary_score":	999995,
			"second_score":	9990
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1359,
			"primary_score":	999995,
			"second_score":	9985
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1365,
			"primary_score":	999995,
			"second_score":	13372
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1366,
			"primary_score":	999995,
			"second_score":	13371
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1372,
			"primary_score":	999995,
			"second_score":	10016
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1373,
			"primary_score":	999995,
			"second_score":	10015
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1374,
			"primary_score":	999995,
			"second_score":	10014
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1376,
			"primary_score":	999995,
			"second_score":	10013
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1377,
			"primary_score":	999995,
			"second_score":	10012
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1381,
			"primary_score":	999995,
			"second_score":	9984
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1395,
			"primary_score":	999995,
			"second_score":	9983
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1396,
			"primary_score":	999995,
			"second_score":	9982
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1402,
			"primary_score":	999996,
			"second_score":	9981
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1408,
			"primary_score":	999995,
			"second_score":	9980
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1521,
			"primary_score":	999995,
			"second_score":	728
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1523,
			"primary_score":	999995,
			"second_score":	727
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1525,
			"primary_score":	999995,
			"second_score":	726
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1526,
			"primary_score":	999995,
			"second_score":	725
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1528,
			"primary_score":	999995,
			"second_score":	724
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1529,
			"primary_score":	999995,
			"second_score":	723
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1530,
			"primary_score":	999995,
			"second_score":	721
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1531,
			"primary_score":	999995,
			"second_score":	719
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1533,
			"primary_score":	999995,
			"second_score":	718
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1539,
			"primary_score":	999995,
			"second_score":	13426
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1540,
			"primary_score":	999995,
			"second_score":	13425
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1541,
			"primary_score":	999995,
			"second_score":	13424
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1543,
			"primary_score":	999995,
			"second_score":	13423
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1598,
			"primary_score":	999995,
			"second_score":	10087
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1600,
			"primary_score":	999995,
			"second_score":	10086
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1617,
			"primary_score":	999995,
			"second_score":	17139
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1618,
			"primary_score":	999995,
			"second_score":	17138
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1620,
			"primary_score":	999995,
			"second_score":	17137
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1625,
			"primary_score":	999995,
			"second_score":	17136
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1635,
			"primary_score":	999995,
			"second_score":	15130
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1636,
			"primary_score":	999995,
			"second_score":	15128
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1638,
			"primary_score":	999995,
			"second_score":	15127
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1639,
			"primary_score":	999995,
			"second_score":	15126
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1640,
			"primary_score":	999995,
			"second_score":	15124
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1641,
			"primary_score":	999995,
			"second_score":	15123
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1643,
			"primary_score":	999995,
			"second_score":	15122
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1650,
			"primary_score":	999995,
			"second_score":	15121
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1651,
			"primary_score":	999995,
			"second_score":	15120
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1652,
			"primary_score":	999995,
			"second_score":	15119
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1653,
			"primary_score":	999995,
			"second_score":	15118
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1654,
			"primary_score":	999995,
			"second_score":	15117
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1655,
			"primary_score":	999995,
			"second_score":	15116
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1656,
			"primary_score":	999995,
			"second_score":	15115
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1657,
			"primary_score":	999995,
			"second_score":	15114
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1658,
			"primary_score":	999995,
			"second_score":	15113
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1663,
			"primary_score":	999995,
			"second_score":	15112
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1664,
			"primary_score":	999995,
			"second_score":	15111
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1665,
			"primary_score":	999995,
			"second_score":	15110
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1666,
			"primary_score":	999995,
			"second_score":	15109
		}, {
			"file":	"libtiff/tif_luv.c",
			"line":	1668,
			"primary_score":	999995,
			"second_score":	15108
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	51,
			"primary_score":	999928,
			"second_score":	24681
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	53,
			"primary_score":	999928,
			"second_score":	24680
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	56,
			"primary_score":	999928,
			"second_score":	24679
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	58,
			"primary_score":	999928,
			"second_score":	24678
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	62,
			"primary_score":	999933,
			"second_score":	31610
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	63,
			"primary_score":	999933,
			"second_score":	31609
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	64,
			"primary_score":	999933,
			"second_score":	31608
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	69,
			"primary_score":	999928,
			"second_score":	24677
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	85,
			"primary_score":	999928,
			"second_score":	24700
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	86,
			"primary_score":	999928,
			"second_score":	24699
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	87,
			"primary_score":	999928,
			"second_score":	24698
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	88,
			"primary_score":	999928,
			"second_score":	24697
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	93,
			"primary_score":	999928,
			"second_score":	24696
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	94,
			"primary_score":	999928,
			"second_score":	24695
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	95,
			"primary_score":	999928,
			"second_score":	24694
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	96,
			"primary_score":	999928,
			"second_score":	24693
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	97,
			"primary_score":	999928,
			"second_score":	24692
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	98,
			"primary_score":	999928,
			"second_score":	24691
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	99,
			"primary_score":	999928,
			"second_score":	24690
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	100,
			"primary_score":	999928,
			"second_score":	24689
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	101,
			"primary_score":	999928,
			"second_score":	24688
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	102,
			"primary_score":	999928,
			"second_score":	24687
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	103,
			"primary_score":	999928,
			"second_score":	24686
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	107,
			"primary_score":	999928,
			"second_score":	24685
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	108,
			"primary_score":	999928,
			"second_score":	24684
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	112,
			"primary_score":	999928,
			"second_score":	24683
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	116,
			"primary_score":	999928,
			"second_score":	24682
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	117,
			"primary_score":	999928,
			"second_score":	24676
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	119,
			"primary_score":	999928,
			"second_score":	24675
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	120,
			"primary_score":	999928,
			"second_score":	24673
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	124,
			"primary_score":	999928,
			"second_score":	24672
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	125,
			"primary_score":	999928,
			"second_score":	24670
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	126,
			"primary_score":	999928,
			"second_score":	24669
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	127,
			"primary_score":	999928,
			"second_score":	24668
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	128,
			"primary_score":	999928,
			"second_score":	24667
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	129,
			"primary_score":	999928,
			"second_score":	24666
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	130,
			"primary_score":	999928,
			"second_score":	24665
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	131,
			"primary_score":	999928,
			"second_score":	24664
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	132,
			"primary_score":	999928,
			"second_score":	24663
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	133,
			"primary_score":	999928,
			"second_score":	24662
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	138,
			"primary_score":	999928,
			"second_score":	24661
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	139,
			"primary_score":	999928,
			"second_score":	24660
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	140,
			"primary_score":	999928,
			"second_score":	24659
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	141,
			"primary_score":	999928,
			"second_score":	24658
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	142,
			"primary_score":	999928,
			"second_score":	24657
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	143,
			"primary_score":	999928,
			"second_score":	24656
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	144,
			"primary_score":	999928,
			"second_score":	24655
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	147,
			"primary_score":	999928,
			"second_score":	24654
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	148,
			"primary_score":	999928,
			"second_score":	24653
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	151,
			"primary_score":	999928,
			"second_score":	24652
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	157,
			"primary_score":	999928,
			"second_score":	24631
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	158,
			"primary_score":	999928,
			"second_score":	24630
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	159,
			"primary_score":	999928,
			"second_score":	24629
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	162,
			"primary_score":	999928,
			"second_score":	24628
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	163,
			"primary_score":	999928,
			"second_score":	24627
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	218,
			"primary_score":	999928,
			"second_score":	24626
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	271,
			"primary_score":	999928,
			"second_score":	24625
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	273,
			"primary_score":	999933,
			"second_score":	31553
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	285,
			"primary_score":	999933,
			"second_score":	31552
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	288,
			"primary_score":	999933,
			"second_score":	31551
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	290,
			"primary_score":	999933,
			"second_score":	31550
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	291,
			"primary_score":	999933,
			"second_score":	31549
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	292,
			"primary_score":	999933,
			"second_score":	31548
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	294,
			"primary_score":	999933,
			"second_score":	31547
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	316,
			"primary_score":	999933,
			"second_score":	31546
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	317,
			"primary_score":	999933,
			"second_score":	31542
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	325,
			"primary_score":	999933,
			"second_score":	31538
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	337,
			"primary_score":	999933,
			"second_score":	31537
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	339,
			"primary_score":	999933,
			"second_score":	24736
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	340,
			"primary_score":	999933,
			"second_score":	24735
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	341,
			"primary_score":	999933,
			"second_score":	24734
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	342,
			"primary_score":	999933,
			"second_score":	24733
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	343,
			"primary_score":	999933,
			"second_score":	24732
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	348,
			"primary_score":	999928,
			"second_score":	24621
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	369,
			"primary_score":	999928,
			"second_score":	24620
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	378,
			"primary_score":	999928,
			"second_score":	24619
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	380,
			"primary_score":	999928,
			"second_score":	24618
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	388,
			"primary_score":	999928,
			"second_score":	24617
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	390,
			"primary_score":	999928,
			"second_score":	24616
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	392,
			"primary_score":	999928,
			"second_score":	24615
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	426,
			"primary_score":	999928,
			"second_score":	24614
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	427,
			"primary_score":	999928,
			"second_score":	24613
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	428,
			"primary_score":	999928,
			"second_score":	24612
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	430,
			"primary_score":	999928,
			"second_score":	24611
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	433,
			"primary_score":	999928,
			"second_score":	24610
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	441,
			"primary_score":	999928,
			"second_score":	24609
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	443,
			"primary_score":	999928,
			"second_score":	24608
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	444,
			"primary_score":	999928,
			"second_score":	24607
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	446,
			"primary_score":	999928,
			"second_score":	24595
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	447,
			"primary_score":	999928,
			"second_score":	24594
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	458,
			"primary_score":	999928,
			"second_score":	24593
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	464,
			"primary_score":	999928,
			"second_score":	24592
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	465,
			"primary_score":	999928,
			"second_score":	13300
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	466,
			"primary_score":	999928,
			"second_score":	13299
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	467,
			"primary_score":	999928,
			"second_score":	13298
		}, {
			"file":	"libtiff/tif_open.c",
			"line":	578,
			"primary_score":	999933,
			"second_score":	10075
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	49,
			"primary_score":	999955,
			"second_score":	10038
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	50,
			"primary_score":	999955,
			"second_score":	10037
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	52,
			"primary_score":	999955,
			"second_score":	10036
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	59,
			"primary_score":	999955,
			"second_score":	10035
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	68,
			"primary_score":	999955,
			"second_score":	10034
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	69,
			"primary_score":	999955,
			"second_score":	10033
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	70,
			"primary_score":	999955,
			"second_score":	10032
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	84,
			"primary_score":	999955,
			"second_score":	9968
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	92,
			"primary_score":	999955,
			"second_score":	9967
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	98,
			"primary_score":	999955,
			"second_score":	10044
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	100,
			"primary_score":	999955,
			"second_score":	10043
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	102,
			"primary_score":	999955,
			"second_score":	10039
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	106,
			"primary_score":	999955,
			"second_score":	9966
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	110,
			"primary_score":	999955,
			"second_score":	9913
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	112,
			"primary_score":	999955,
			"second_score":	9912
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	113,
			"primary_score":	999955,
			"second_score":	9911
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	116,
			"primary_score":	999955,
			"second_score":	9907
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	296,
			"primary_score":	999934,
			"second_score":	10031
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	297,
			"primary_score":	999934,
			"second_score":	10030
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	299,
			"primary_score":	999934,
			"second_score":	10029
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	301,
			"primary_score":	999934,
			"second_score":	10028
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	302,
			"primary_score":	999934,
			"second_score":	10027
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	316,
			"primary_score":	999934,
			"second_score":	10026
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	330,
			"primary_score":	999934,
			"second_score":	10025
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	332,
			"primary_score":	999934,
			"second_score":	10024
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	342,
			"primary_score":	999934,
			"second_score":	10023
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	369,
			"primary_score":	999934,
			"second_score":	10022
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	370,
			"primary_score":	999934,
			"second_score":	10021
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	403,
			"primary_score":	999934,
			"second_score":	10020
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	708,
			"primary_score":	999934,
			"second_score":	10019
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	710,
			"primary_score":	999934,
			"second_score":	10018
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	711,
			"primary_score":	999934,
			"second_score":	10017
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	713,
			"primary_score":	999934,
			"second_score":	9979
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	715,
			"primary_score":	999934,
			"second_score":	9978
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	716,
			"primary_score":	999934,
			"second_score":	9977
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	717,
			"primary_score":	999934,
			"second_score":	9976
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	719,
			"primary_score":	999934,
			"second_score":	9975
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	726,
			"primary_score":	999934,
			"second_score":	9974
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	727,
			"primary_score":	999934,
			"second_score":	9973
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	729,
			"primary_score":	999934,
			"second_score":	9972
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	772,
			"primary_score":	999932,
			"second_score":	10042
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	776,
			"primary_score":	999932,
			"second_score":	10041
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	782,
			"primary_score":	999932,
			"second_score":	10040
		}, {
			"file":	"libtiff/tif_read.c",
			"line":	788,
			"primary_score":	999931,
			"second_score":	9760
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	50,
			"primary_score":	999928,
			"second_score":	9811
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	52,
			"primary_score":	999928,
			"second_score":	9810
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	57,
			"primary_score":	999928,
			"second_score":	9809
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	89,
			"primary_score":	999928,
			"second_score":	9891
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	90,
			"primary_score":	999928,
			"second_score":	9890
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	92,
			"primary_score":	999928,
			"second_score":	9889
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	94,
			"primary_score":	999928,
			"second_score":	9888
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	97,
			"primary_score":	999928,
			"second_score":	9887
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	106,
			"primary_score":	999928,
			"second_score":	9831
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	107,
			"primary_score":	999928,
			"second_score":	9830
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	108,
			"primary_score":	999928,
			"second_score":	9829
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	110,
			"primary_score":	999928,
			"second_score":	9828
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	151,
			"primary_score":	999928,
			"second_score":	9827
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	229,
			"primary_score":	999928,
			"second_score":	9835
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	230,
			"primary_score":	999928,
			"second_score":	9834
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	231,
			"primary_score":	999928,
			"second_score":	9833
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	232,
			"primary_score":	999970,
			"second_score":	13329
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	233,
			"primary_score":	999928,
			"second_score":	9832
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	238,
			"primary_score":	999928,
			"second_score":	9839
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	239,
			"primary_score":	999928,
			"second_score":	9838
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	240,
			"primary_score":	999928,
			"second_score":	9837
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	241,
			"primary_score":	999928,
			"second_score":	9836
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	242,
			"primary_score":	999928,
			"second_score":	9808
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	243,
			"primary_score":	999928,
			"second_score":	9807
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	248,
			"primary_score":	999928,
			"second_score":	9806
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	300,
			"primary_score":	999928,
			"second_score":	9826
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	301,
			"primary_score":	999928,
			"second_score":	9825
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	302,
			"primary_score":	999928,
			"second_score":	9824
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	303,
			"primary_score":	999928,
			"second_score":	9823
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	305,
			"primary_score":	999928,
			"second_score":	9822
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	338,
			"primary_score":	999928,
			"second_score":	9821
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	339,
			"primary_score":	999928,
			"second_score":	9820
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	340,
			"primary_score":	999928,
			"second_score":	9816
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	345,
			"primary_score":	999928,
			"second_score":	9812
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	350,
			"primary_score":	999928,
			"second_score":	9869
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	351,
			"primary_score":	999928,
			"second_score":	9868
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	352,
			"primary_score":	999928,
			"second_score":	9867
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	353,
			"primary_score":	999928,
			"second_score":	9866
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	354,
			"primary_score":	999928,
			"second_score":	9850
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	355,
			"primary_score":	999928,
			"second_score":	9849
		}, {
			"file":	"libtiff/tif_strip.c",
			"line":	360,
			"primary_score":	999928,
			"second_score":	9848
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	61,
			"primary_score":	999928,
			"second_score":	24624
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	62,
			"primary_score":	999928,
			"second_score":	24623
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	67,
			"primary_score":	999928,
			"second_score":	24622
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	73,
			"primary_score":	999934,
			"second_score":	7901
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	74,
			"primary_score":	999934,
			"second_score":	7900
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	79,
			"primary_score":	999934,
			"second_score":	7899
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	85,
			"primary_score":	999934,
			"second_score":	7905
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	86,
			"primary_score":	999934,
			"second_score":	7904
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	91,
			"primary_score":	999934,
			"second_score":	7903
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	97,
			"primary_score":	999929,
			"second_score":	2
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	103,
			"primary_score":	999928,
			"second_score":	24605
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	104,
			"primary_score":	999928,
			"second_score":	24604
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	107,
			"primary_score":	999928,
			"second_score":	24602
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	116,
			"primary_score":	999928,
			"second_score":	24606
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	117,
			"primary_score":	999928,
			"second_score":	24601
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	118,
			"primary_score":	999928,
			"second_score":	24600
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	119,
			"primary_score":	999928,
			"second_score":	24599
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	121,
			"primary_score":	999928,
			"second_score":	24598
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	122,
			"primary_score":	999928,
			"second_score":	24597
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	123,
			"primary_score":	999928,
			"second_score":	24596
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	132,
			"primary_score":	999929,
			"second_score":	639
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	133,
			"primary_score":	999929,
			"second_score":	638
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	156,
			"primary_score":	999928,
			"second_score":	24702
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	158,
			"primary_score":	999928,
			"second_score":	24701
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	163,
			"primary_score":	999928,
			"second_score":	13297
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	164,
			"primary_score":	999928,
			"second_score":	13296
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	165,
			"primary_score":	999928,
			"second_score":	13295
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	174,
			"primary_score":	999928,
			"second_score":	24715
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	175,
			"primary_score":	999928,
			"second_score":	24714
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	176,
			"primary_score":	999928,
			"second_score":	24713
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	178,
			"primary_score":	999928,
			"second_score":	24712
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	179,
			"primary_score":	999928,
			"second_score":	24706
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	187,
			"primary_score":	999928,
			"second_score":	24705
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	188,
			"primary_score":	999928,
			"second_score":	24704
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	193,
			"primary_score":	999928,
			"second_score":	24703
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	194,
			"primary_score":	999928,
			"second_score":	13294
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	196,
			"primary_score":	999928,
			"second_score":	13293
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	256,
			"primary_score":	999927,
			"second_score":	8105
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	262,
			"primary_score":	999927,
			"second_score":	4
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	268,
			"primary_score":	999928,
			"second_score":	7539
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	274,
			"primary_score":	999928,
			"second_score":	330
		}, {
			"file":	"libtiff/tif_unix.c",
			"line":	280,
			"primary_score":	999928,
			"second_score":	7910
		}, {
			"file":	"libtiff/tif_version.c",
			"line":	32,
			"primary_score":	999990,
			"second_score":	3
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	51,
			"primary_score":	999982,
			"second_score":	9905
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	52,
			"primary_score":	999982,
			"second_score":	9904
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	53,
			"primary_score":	999982,
			"second_score":	9903
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	54,
			"primary_score":	999982,
			"second_score":	9902
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	56,
			"primary_score":	999982,
			"second_score":	9901
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	63,
			"primary_score":	999982,
			"second_score":	9844
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	65,
			"primary_score":	999982,
			"second_score":	9791
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	67,
			"primary_score":	999982,
			"second_score":	9790
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	72,
			"primary_score":	999982,
			"second_score":	9789
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	84,
			"primary_score":	999982,
			"second_score":	9788
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	93,
			"primary_score":	999982,
			"second_score":	9787
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	101,
			"primary_score":	999982,
			"second_score":	9786
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	103,
			"primary_score":	999982,
			"second_score":	9785
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	107,
			"primary_score":	999982,
			"second_score":	9784
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	109,
			"primary_score":	999982,
			"second_score":	9778
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	115,
			"primary_score":	999982,
			"second_score":	9777
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	118,
			"primary_score":	999982,
			"second_score":	9776
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	120,
			"primary_score":	999982,
			"second_score":	9775
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	121,
			"primary_score":	999984,
			"second_score":	9774
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	123,
			"primary_score":	999984,
			"second_score":	9771
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	126,
			"primary_score":	999982,
			"second_score":	9770
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	127,
			"primary_score":	999982,
			"second_score":	9769
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	129,
			"primary_score":	999982,
			"second_score":	9768
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	138,
			"primary_score":	999982,
			"second_score":	9767
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	140,
			"primary_score":	999982,
			"second_score":	9763
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	147,
			"primary_score":	999982,
			"second_score":	9762
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	167,
			"primary_score":	999982,
			"second_score":	9761
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	169,
			"primary_score":	999982,
			"second_score":	9757
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	173,
			"primary_score":	999982,
			"second_score":	9741
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	174,
			"primary_score":	999982,
			"second_score":	9740
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	451,
			"primary_score":	999933,
			"second_score":	9894
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	453,
			"primary_score":	999933,
			"second_score":	9893
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	458,
			"primary_score":	999933,
			"second_score":	9892
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	461,
			"primary_score":	999933,
			"second_score":	9886
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	462,
			"primary_score":	999933,
			"second_score":	9885
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	464,
			"primary_score":	999933,
			"second_score":	9884
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	466,
			"primary_score":	999933,
			"second_score":	9882
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	468,
			"primary_score":	999933,
			"second_score":	9880
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	474,
			"primary_score":	999933,
			"second_score":	9879
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	475,
			"primary_score":	999933,
			"second_score":	9877
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	476,
			"primary_score":	999933,
			"second_score":	9875
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	477,
			"primary_score":	999933,
			"second_score":	9874
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	478,
			"primary_score":	999933,
			"second_score":	9873
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	491,
			"primary_score":	999933,
			"second_score":	9900
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	495,
			"primary_score":	999933,
			"second_score":	9899
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	512,
			"primary_score":	999933,
			"second_score":	9898
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	517,
			"primary_score":	999933,
			"second_score":	9897
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	527,
			"primary_score":	999971,
			"second_score":	9896
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	533,
			"primary_score":	999933,
			"second_score":	9895
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	539,
			"primary_score":	999933,
			"second_score":	9872
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	546,
			"primary_score":	999933,
			"second_score":	9871
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	547,
			"primary_score":	999933,
			"second_score":	9870
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	548,
			"primary_score":	999933,
			"second_score":	9847
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	550,
			"primary_score":	999934,
			"second_score":	9846
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	551,
			"primary_score":	999934,
			"second_score":	9845
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	560,
			"primary_score":	999934,
			"second_score":	9843
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	562,
			"primary_score":	999934,
			"second_score":	9842
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	569,
			"primary_score":	999934,
			"second_score":	9841
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	570,
			"primary_score":	999934,
			"second_score":	9840
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	575,
			"primary_score":	999934,
			"second_score":	9805
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	576,
			"primary_score":	999935,
			"second_score":	9804
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	577,
			"primary_score":	999934,
			"second_score":	9803
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	579,
			"primary_score":	999934,
			"second_score":	9802
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	580,
			"primary_score":	999934,
			"second_score":	9801
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	581,
			"primary_score":	999934,
			"second_score":	9799
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	585,
			"primary_score":	999934,
			"second_score":	9798
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	588,
			"primary_score":	999934,
			"second_score":	9797
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	589,
			"primary_score":	999934,
			"second_score":	9796
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	590,
			"primary_score":	999934,
			"second_score":	9795
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	591,
			"primary_score":	999934,
			"second_score":	9794
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	592,
			"primary_score":	999934,
			"second_score":	9793
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	593,
			"primary_score":	999934,
			"second_score":	9792
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	638,
			"primary_score":	999934,
			"second_score":	9715
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	639,
			"primary_score":	999934,
			"second_score":	9714
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	640,
			"primary_score":	999934,
			"second_score":	9713
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	641,
			"primary_score":	999934,
			"second_score":	9712
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	643,
			"primary_score":	999934,
			"second_score":	9711
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	644,
			"primary_score":	999934,
			"second_score":	9710
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	646,
			"primary_score":	999934,
			"second_score":	9709
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	670,
			"primary_score":	999934,
			"second_score":	9708
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	671,
			"primary_score":	999934,
			"second_score":	9704
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	674,
			"primary_score":	999934,
			"second_score":	9703
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	679,
			"primary_score":	999934,
			"second_score":	9702
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	680,
			"primary_score":	999934,
			"second_score":	9701
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	683,
			"primary_score":	999934,
			"second_score":	9700
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	684,
			"primary_score":	999934,
			"second_score":	9699
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	685,
			"primary_score":	999934,
			"second_score":	9698
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	686,
			"primary_score":	999934,
			"second_score":	9697
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	691,
			"primary_score":	999934,
			"second_score":	9696
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	696,
			"primary_score":	999934,
			"second_score":	9692
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	697,
			"primary_score":	999934,
			"second_score":	9691
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	699,
			"primary_score":	999934,
			"second_score":	9690
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	700,
			"primary_score":	999934,
			"second_score":	9689
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	702,
			"primary_score":	999934,
			"second_score":	9688
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	713,
			"primary_score":	999976,
			"second_score":	9718
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	714,
			"primary_score":	999978,
			"second_score":	9717
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	718,
			"primary_score":	999978,
			"second_score":	9716
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	722,
			"primary_score":	999978,
			"second_score":	9687
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	723,
			"primary_score":	999978,
			"second_score":	9686
		}, {
			"file":	"libtiff/tif_write.c",
			"line":	725,
			"primary_score":	999976,
			"second_score":	9685
		}, {
			"file":	"tools/tiffcp.c",
			"line":	134,
			"primary_score":	999991,
			"second_score":	24720
		}, {
			"file":	"tools/tiffcp.c",
			"line":	135,
			"primary_score":	999991,
			"second_score":	24719
		}, {
			"file":	"tools/tiffcp.c",
			"line":	136,
			"primary_score":	999991,
			"second_score":	24718
		}, {
			"file":	"tools/tiffcp.c",
			"line":	137,
			"primary_score":	999991,
			"second_score":	24717
		}, {
			"file":	"tools/tiffcp.c",
			"line":	150,
			"primary_score":	999991,
			"second_score":	24716
		}, {
			"file":	"tools/tiffcp.c",
			"line":	151,
			"primary_score":	999991,
			"second_score":	13292
		}, {
			"file":	"tools/tiffcp.c",
			"line":	157,
			"primary_score":	999991,
			"second_score":	31671
		}, {
			"file":	"tools/tiffcp.c",
			"line":	158,
			"primary_score":	999991,
			"second_score":	31670
		}, {
			"file":	"tools/tiffcp.c",
			"line":	159,
			"primary_score":	999991,
			"second_score":	31669
		}, {
			"file":	"tools/tiffcp.c",
			"line":	160,
			"primary_score":	999991,
			"second_score":	31668
		}, {
			"file":	"tools/tiffcp.c",
			"line":	161,
			"primary_score":	999991,
			"second_score":	31667
		}, {
			"file":	"tools/tiffcp.c",
			"line":	162,
			"primary_score":	999991,
			"second_score":	31666
		}, {
			"file":	"tools/tiffcp.c",
			"line":	163,
			"primary_score":	999991,
			"second_score":	31665
		}, {
			"file":	"tools/tiffcp.c",
			"line":	164,
			"primary_score":	999991,
			"second_score":	31664
		}, {
			"file":	"tools/tiffcp.c",
			"line":	165,
			"primary_score":	999991,
			"second_score":	31663
		}, {
			"file":	"tools/tiffcp.c",
			"line":	166,
			"primary_score":	999991,
			"second_score":	31662
		}, {
			"file":	"tools/tiffcp.c",
			"line":	167,
			"primary_score":	999991,
			"second_score":	31661
		}, {
			"file":	"tools/tiffcp.c",
			"line":	168,
			"primary_score":	999991,
			"second_score":	31660
		}, {
			"file":	"tools/tiffcp.c",
			"line":	169,
			"primary_score":	999991,
			"second_score":	31659
		}, {
			"file":	"tools/tiffcp.c",
			"line":	171,
			"primary_score":	999991,
			"second_score":	31658
		}, {
			"file":	"tools/tiffcp.c",
			"line":	172,
			"primary_score":	999991,
			"second_score":	31657
		}, {
			"file":	"tools/tiffcp.c",
			"line":	173,
			"primary_score":	999991,
			"second_score":	31656
		}, {
			"file":	"tools/tiffcp.c",
			"line":	205,
			"primary_score":	1000000,
			"second_score":	8
		}, {
			"file":	"tools/tiffcp.c",
			"line":	206,
			"primary_score":	999993,
			"second_score":	31650
		}, {
			"file":	"tools/tiffcp.c",
			"line":	265,
			"primary_score":	999991,
			"second_score":	31649
		}, {
			"file":	"tools/tiffcp.c",
			"line":	267,
			"primary_score":	999991,
			"second_score":	31648
		}, {
			"file":	"tools/tiffcp.c",
			"line":	268,
			"primary_score":	999991,
			"second_score":	24726
		}, {
			"file":	"tools/tiffcp.c",
			"line":	270,
			"primary_score":	999991,
			"second_score":	24725
		}, {
			"file":	"tools/tiffcp.c",
			"line":	271,
			"primary_score":	999993,
			"second_score":	24724
		}, {
			"file":	"tools/tiffcp.c",
			"line":	272,
			"primary_score":	999991,
			"second_score":	24723
		}, {
			"file":	"tools/tiffcp.c",
			"line":	273,
			"primary_score":	999991,
			"second_score":	24722
		}, {
			"file":	"tools/tiffcp.c",
			"line":	274,
			"primary_score":	999991,
			"second_score":	24721
		}, {
			"file":	"tools/tiffcp.c",
			"line":	275,
			"primary_score":	999991,
			"second_score":	13291
		}, {
			"file":	"tools/tiffcp.c",
			"line":	277,
			"primary_score":	999991,
			"second_score":	13290
		}, {
			"file":	"tools/tiffcp.c",
			"line":	283,
			"primary_score":	999991,
			"second_score":	13289
		}, {
			"file":	"tools/tiffcp.c",
			"line":	284,
			"primary_score":	999991,
			"second_score":	13288
		}, {
			"file":	"tools/tiffcp.c",
			"line":	285,
			"primary_score":	999991,
			"second_score":	13287
		}, {
			"file":	"tools/tiffcp.c",
			"line":	286,
			"primary_score":	999991,
			"second_score":	13286
		}, {
			"file":	"tools/tiffcp.c",
			"line":	287,
			"primary_score":	999991,
			"second_score":	13285
		}, {
			"file":	"tools/tiffcp.c",
			"line":	288,
			"primary_score":	999991,
			"second_score":	13284
		}, {
			"file":	"tools/tiffcp.c",
			"line":	289,
			"primary_score":	999991,
			"second_score":	13283
		}, {
			"file":	"tools/tiffcp.c",
			"line":	290,
			"primary_score":	999991,
			"second_score":	13282
		}, {
			"file":	"tools/tiffcp.c",
			"line":	291,
			"primary_score":	999991,
			"second_score":	13281
		}, {
			"file":	"tools/tiffcp.c",
			"line":	292,
			"primary_score":	999991,
			"second_score":	13280
		}, {
			"file":	"tools/tiffcp.c",
			"line":	296,
			"primary_score":	999991,
			"second_score":	751
		}, {
			"file":	"tools/tiffcp.c",
			"line":	299,
			"primary_score":	999991,
			"second_score":	750
		}, {
			"file":	"tools/tiffcp.c",
			"line":	301,
			"primary_score":	999991,
			"second_score":	734
		}, {
			"file":	"tools/tiffcp.c",
			"line":	304,
			"primary_score":	999991,
			"second_score":	349
		}, {
			"file":	"tools/tiffcp.c",
			"line":	305,
			"primary_score":	999991,
			"second_score":	1
		}, {
			"file":	"tools/tiffcp.c",
			"line":	332,
			"primary_score":	999993,
			"second_score":	31655
		}, {
			"file":	"tools/tiffcp.c",
			"line":	333,
			"primary_score":	1000000,
			"second_score":	31652
		}, {
			"file":	"tools/tiffcp.c",
			"line":	334,
			"primary_score":	999993,
			"second_score":	24
		}, {
			"file":	"tools/tiffcp.c",
			"line":	336,
			"primary_score":	999993,
			"second_score":	21
		}, {
			"file":	"tools/tiffcp.c",
			"line":	351,
			"primary_score":	999993,
			"second_score":	20
		}, {
			"file":	"tools/tiffcp.c",
			"line":	354,
			"primary_score":	999999,
			"second_score":	19
		}, {
			"file":	"tools/tiffcp.c",
			"line":	356,
			"primary_score":	1000000,
			"second_score":	12
		}, {
			"file":	"tools/tiffcp.c",
			"line":	361,
			"primary_score":	1000000,
			"second_score":	11
		}, {
			"file":	"tools/tiffcp.c",
			"line":	366,
			"primary_score":	1000000,
			"second_score":	10
		}, {
			"file":	"tools/tiffcp.c",
			"line":	369,
			"primary_score":	1000000,
			"second_score":	9
		}, {
			"file":	"tools/tiffcp.c",
			"line":	370,
			"primary_score":	999993,
			"second_score":	31651
		}, {
			"file":	"tools/tiffcp.c",
			"line":	428,
			"primary_score":	1000000,
			"second_score":	7
		}, {
			"file":	"tools/tiffcp.c",
			"line":	429,
			"primary_score":	1000000,
			"second_score":	6
		}, {
			"file":	"tools/tiffcp.c",
			"line":	431,
			"primary_score":	1000000,
			"second_score":	5
		}, {
			"file":	"tools/tiffcp.c",
			"line":	432,
			"primary_score":	1000000,
			"second_score":	4
		}, {
			"file":	"tools/tiffcp.c",
			"line":	433,
			"primary_score":	1000000,
			"second_score":	2
		}, {
			"file":	"tools/tiffcp.c",
			"line":	435,
			"primary_score":	1000000,
			"second_score":	1
		}, {
			"file":	"tools/tiffcp.c",
			"line":	450,
			"primary_score":	999991,
			"second_score":	10328
		}, {
			"file":	"tools/tiffcp.c",
			"line":	453,
			"primary_score":	999991,
			"second_score":	10565
		}, {
			"file":	"tools/tiffcp.c",
			"line":	454,
			"primary_score":	999991,
			"second_score":	10736
		}, {
			"file":	"tools/tiffcp.c",
			"line":	455,
			"primary_score":	999991,
			"second_score":	10470
		}, {
			"file":	"tools/tiffcp.c",
			"line":	456,
			"primary_score":	999991,
			"second_score":	10614
		}, {
			"file":	"tools/tiffcp.c",
			"line":	457,
			"primary_score":	999991,
			"second_score":	10613
		}, {
			"file":	"tools/tiffcp.c",
			"line":	458,
			"primary_score":	999991,
			"second_score":	10469
		}, {
			"file":	"tools/tiffcp.c",
			"line":	459,
			"primary_score":	999991,
			"second_score":	12083
		}, {
			"file":	"tools/tiffcp.c",
			"line":	460,
			"primary_score":	999991,
			"second_score":	12082
		}, {
			"file":	"tools/tiffcp.c",
			"line":	461,
			"primary_score":	999991,
			"second_score":	10468
		}, {
			"file":	"tools/tiffcp.c",
			"line":	462,
			"primary_score":	999991,
			"second_score":	10467
		}, {
			"file":	"tools/tiffcp.c",
			"line":	463,
			"primary_score":	999991,
			"second_score":	10466
		}, {
			"file":	"tools/tiffcp.c",
			"line":	464,
			"primary_score":	999991,
			"second_score":	10465
		}, {
			"file":	"tools/tiffcp.c",
			"line":	466,
			"primary_score":	999991,
			"second_score":	10419
		}, {
			"file":	"tools/tiffcp.c",
			"line":	468,
			"primary_score":	999991,
			"second_score":	11890
		}, {
			"file":	"tools/tiffcp.c",
			"line":	469,
			"primary_score":	999991,
			"second_score":	11889
		}, {
			"file":	"tools/tiffcp.c",
			"line":	471,
			"primary_score":	999991,
			"second_score":	11839
		}, {
			"file":	"tools/tiffcp.c",
			"line":	474,
			"primary_score":	999991,
			"second_score":	11334
		}, {
			"file":	"tools/tiffcp.c",
			"line":	475,
			"primary_score":	999991,
			"second_score":	11333
		}, {
			"file":	"tools/tiffcp.c",
			"line":	476,
			"primary_score":	999991,
			"second_score":	10520
		}, {
			"file":	"tools/tiffcp.c",
			"line":	477,
			"primary_score":	999991,
			"second_score":	10519
		}, {
			"file":	"tools/tiffcp.c",
			"line":	478,
			"primary_score":	999991,
			"second_score":	10518
		}, {
			"file":	"tools/tiffcp.c",
			"line":	480,
			"primary_score":	999991,
			"second_score":	10472
		}, {
			"file":	"tools/tiffcp.c",
			"line":	482,
			"primary_score":	999991,
			"second_score":	10839
		}, {
			"file":	"tools/tiffcp.c",
			"line":	483,
			"primary_score":	999991,
			"second_score":	10838
		}, {
			"file":	"tools/tiffcp.c",
			"line":	485,
			"primary_score":	999991,
			"second_score":	10788
		}, {
			"file":	"tools/tiffcp.c",
			"line":	488,
			"primary_score":	999991,
			"second_score":	10327
		}, {
			"file":	"tools/tiffcp.c",
			"line":	489,
			"primary_score":	999991,
			"second_score":	10326
		}, {
			"file":	"tools/tiffcp.c",
			"line":	494,
			"primary_score":	999991,
			"second_score":	10296
		}, {
			"file":	"tools/tiffcp.c",
			"line":	554,
			"primary_score":	999991,
			"second_score":	13279
		}, {
			"file":	"tools/tiffcp.c",
			"line":	555,
			"primary_score":	999991,
			"second_score":	13278
		}, {
			"file":	"tools/tiffcp.c",
			"line":	556,
			"primary_score":	999991,
			"second_score":	13277
		}, {
			"file":	"tools/tiffcp.c",
			"line":	557,
			"primary_score":	999991,
			"second_score":	13276
		}, {
			"file":	"tools/tiffcp.c",
			"line":	559,
			"primary_score":	999991,
			"second_score":	13275
		}, {
			"file":	"tools/tiffcp.c",
			"line":	560,
			"primary_score":	999991,
			"second_score":	13153
		}, {
			"file":	"tools/tiffcp.c",
			"line":	561,
			"primary_score":	999991,
			"second_score":	13023
		}, {
			"file":	"tools/tiffcp.c",
			"line":	562,
			"primary_score":	999991,
			"second_score":	12908
		}, {
			"file":	"tools/tiffcp.c",
			"line":	563,
			"primary_score":	999991,
			"second_score":	12808
		}, {
			"file":	"tools/tiffcp.c",
			"line":	564,
			"primary_score":	999993,
			"second_score":	12807
		}, {
			"file":	"tools/tiffcp.c",
			"line":	567,
			"primary_score":	999991,
			"second_score":	12728
		}, {
			"file":	"tools/tiffcp.c",
			"line":	587,
			"primary_score":	999991,
			"second_score":	12727
		}, {
			"file":	"tools/tiffcp.c",
			"line":	593,
			"primary_score":	999991,
			"second_score":	12726
		}, {
			"file":	"tools/tiffcp.c",
			"line":	594,
			"primary_score":	999991,
			"second_score":	12600
		}, {
			"file":	"tools/tiffcp.c",
			"line":	597,
			"primary_score":	999991,
			"second_score":	12599
		}, {
			"file":	"tools/tiffcp.c",
			"line":	601,
			"primary_score":	999991,
			"second_score":	12549
		}, {
			"file":	"tools/tiffcp.c",
			"line":	602,
			"primary_score":	999991,
			"second_score":	12499
		}, {
			"file":	"tools/tiffcp.c",
			"line":	621,
			"primary_score":	999991,
			"second_score":	12498
		}, {
			"file":	"tools/tiffcp.c",
			"line":	627,
			"primary_score":	999991,
			"second_score":	12419
		}, {
			"file":	"tools/tiffcp.c",
			"line":	628,
			"primary_score":	999991,
			"second_score":	12418
		}, {
			"file":	"tools/tiffcp.c",
			"line":	629,
			"primary_score":	999991,
			"second_score":	12416
		}, {
			"file":	"tools/tiffcp.c",
			"line":	649,
			"primary_score":	999991,
			"second_score":	12415
		}, {
			"file":	"tools/tiffcp.c",
			"line":	650,
			"primary_score":	999991,
			"second_score":	12414
		}, {
			"file":	"tools/tiffcp.c",
			"line":	655,
			"primary_score":	999991,
			"second_score":	12357
		}, {
			"file":	"tools/tiffcp.c",
			"line":	656,
			"primary_score":	999991,
			"second_score":	12356
		}, {
			"file":	"tools/tiffcp.c",
			"line":	660,
			"primary_score":	999991,
			"second_score":	12355
		}, {
			"file":	"tools/tiffcp.c",
			"line":	662,
			"primary_score":	999991,
			"second_score":	12269
		}, {
			"file":	"tools/tiffcp.c",
			"line":	665,
			"primary_score":	999991,
			"second_score":	12268
		}, {
			"file":	"tools/tiffcp.c",
			"line":	666,
			"primary_score":	999991,
			"second_score":	12144
		}, {
			"file":	"tools/tiffcp.c",
			"line":	667,
			"primary_score":	999991,
			"second_score":	12143
		}, {
			"file":	"tools/tiffcp.c",
			"line":	668,
			"primary_score":	999991,
			"second_score":	12087
		}, {
			"file":	"tools/tiffcp.c",
			"line":	670,
			"primary_score":	999991,
			"second_score":	12035
		}, {
			"file":	"tools/tiffcp.c",
			"line":	707,
			"primary_score":	999991,
			"second_score":	12034
		}, {
			"file":	"tools/tiffcp.c",
			"line":	708,
			"primary_score":	999991,
			"second_score":	12033
		}, {
			"file":	"tools/tiffcp.c",
			"line":	709,
			"primary_score":	999991,
			"second_score":	12032
		}, {
			"file":	"tools/tiffcp.c",
			"line":	710,
			"primary_score":	999991,
			"second_score":	12031
		}, {
			"file":	"tools/tiffcp.c",
			"line":	713,
			"primary_score":	999991,
			"second_score":	11989
		}, {
			"file":	"tools/tiffcp.c",
			"line":	714,
			"primary_score":	999991,
			"second_score":	11988
		}, {
			"file":	"tools/tiffcp.c",
			"line":	715,
			"primary_score":	999991,
			"second_score":	11987
		}, {
			"file":	"tools/tiffcp.c",
			"line":	716,
			"primary_score":	999991,
			"second_score":	11986
		}, {
			"file":	"tools/tiffcp.c",
			"line":	731,
			"primary_score":	999991,
			"second_score":	11940
		}, {
			"file":	"tools/tiffcp.c",
			"line":	732,
			"primary_score":	999991,
			"second_score":	11939
		}, {
			"file":	"tools/tiffcp.c",
			"line":	733,
			"primary_score":	999991,
			"second_score":	11938
		}, {
			"file":	"tools/tiffcp.c",
			"line":	741,
			"primary_score":	999991,
			"second_score":	11892
		}, {
			"file":	"tools/tiffcp.c",
			"line":	744,
			"primary_score":	999991,
			"second_score":	10295
		}, {
			"file":	"tools/tiffcp.c",
			"line":	745,
			"primary_score":	999991,
			"second_score":	10074
		}, {
			"file":	"tools/tiffcp.c",
			"line":	770,
			"primary_score":	999991,
			"second_score":	10073
		}, {
			"file":	"tools/tiffcp.c",
			"line":	771,
			"primary_score":	999991,
			"second_score":	10049
		}, {
			"file":	"tools/tiffcp.c",
			"line":	773,
			"primary_score":	999991,
			"second_score":	10048
		}, {
			"file":	"tools/tiffcp.c",
			"line":	774,
			"primary_score":	999991,
			"second_score":	10046
		}, {
			"file":	"tools/tiffcp.c",
			"line":	775,
			"primary_score":	999991,
			"second_score":	10045
		}, {
			"file":	"tools/tiffcp.c",
			"line":	781,
			"primary_score":	999991,
			"second_score":	9906
		}, {
			"file":	"tools/tiffcp.c",
			"line":	788,
			"primary_score":	999991,
			"second_score":	9739
		}, {
			"file":	"tools/tiffcp.c",
			"line":	789,
			"primary_score":	999991,
			"second_score":	9737
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1647,
			"primary_score":	999991,
			"second_score":	10294
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1648,
			"primary_score":	999991,
			"second_score":	10293
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1649,
			"primary_score":	999991,
			"second_score":	10292
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1651,
			"primary_score":	999991,
			"second_score":	10291
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1652,
			"primary_score":	999991,
			"second_score":	10242
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1658,
			"primary_score":	999991,
			"second_score":	10241
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1659,
			"primary_score":	999991,
			"second_score":	10192
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1660,
			"primary_score":	999991,
			"second_score":	10139
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1661,
			"primary_score":	999991,
			"second_score":	10136
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1662,
			"primary_score":	999991,
			"second_score":	10135
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1664,
			"primary_score":	999991,
			"second_score":	10078
		}, {
			"file":	"tools/tiffcp.c",
			"line":	1687,
			"primary_score":	999991,
			"second_score":	10077
		}],
	"mutation_info":	[{
			"file":	"tools/tiffcp.c",
			"functions":	[]
		}],
	"rules":	[{
			"file_name":	"tools/tiffcp.c",
			"lines":	[{
					"line":	206,
					"switches":	[{
							"switch":	2,
							"types":	[[], [], [], [], [444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], [], [], [], [], [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], [], [], [], [], [], []],
							"begin_line":	207,
							"begin_column":	3,
							"end_line":	207,
							"end_column":	3,
							"patch_codes":	["(mp)++", "(optarg)++", "TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, setting subdirectory at %lu\", diroff)", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, setting subdirectory at %lu\", diroff)", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "bias = openSrcImage((argv))", "comma = (-1)", "comma = (-2)", "comma = (-3)", "comma = (-5)", "comma = (-7)", "comma = (0)", "comma = (1)", "comma = (10)", "comma = (2)", "comma = (277)", "comma = (3)", "comma = (5)", "comma = (7)", "comma = (mp)[1]", "comma = (optarg)[1]", "compression = (-1)", "compression = (-2)", "compression = (-3)", "compression = (-5)", "compression = (-7)", "compression = (0)", "compression = (1)", "compression = (10)", "compression = (2)", "compression = (277)", "compression = (3)", "compression = (5)", "compression = (7)", "compression = (defconfig)", "compression = (deffillorder)", "config = (-1)", "config = (-2)", "config = (-3)", "config = (-5)", "config = (-7)", "config = (0)", "config = (1)", "config = (10)", "config = (2)", "config = (277)", "config = (3)", "config = (5)", "config = (7)", "config = (defconfig)", "config = (deffillorder)", "defcompression = (-1)", "defcompression = (-2)", "defcompression = (-3)", "defcompression = (-5)", "defcompression = (-7)", "defcompression = (0)", "defcompression = (1)", "defcompression = (10)", "defcompression = (2)", "defcompression = (277)", "defcompression = (3)", "defcompression = (5)", "defcompression = (7)", "defcompression = (defconfig)", "defcompression = (deffillorder)", "defconfig = (-1)", "defconfig = (-2)", "defconfig = (-3)", "defconfig = (-5)", "defconfig = (-7)", "defconfig = (0)", "defconfig = (1)", "defconfig = (10)", "defconfig = (2)", "defconfig = (277)", "defconfig = (3)", "defconfig = (5)", "defconfig = (7)", "defconfig = (defconfig)", "defconfig = (deffillorder)", "deffillorder = (-1)", "deffillorder = (-2)", "deffillorder = (-3)", "deffillorder = (-5)", "deffillorder = (-7)", "deffillorder = (0)", "deffillorder = (1)", "deffillorder = (10)", "deffillorder = (2)", "deffillorder = (277)", "deffillorder = (3)", "deffillorder = (5)", "deffillorder = (7)", "deffillorder = (defconfig)", "deffillorder = (deffillorder)", "defg3opts = (-1)", "defg3opts = (-2)", "defg3opts = (-3)", "defg3opts = (-5)", "defg3opts = (-7)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (10)", "defg3opts = (2)", "defg3opts = (277)", "defg3opts = (3)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (defrowsperstrip)", "defg3opts = (deftilelength)", "defg3opts = (deftilewidth)", "defpredictor = (-1)", "defpredictor = (-2)", "defpredictor = (-3)", "defpredictor = (-5)", "defpredictor = (-7)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (10)", "defpredictor = (2)", "defpredictor = (277)", "defpredictor = (3)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (defconfig)", "defpredictor = (deffillorder)", "defpredictor = atoi((mp) + 1)", "defpredictor = atoi((optarg) + 1)", "deftilelength = (-1)", "deftilelength = (-2)", "deftilelength = (-3)", "deftilelength = (-5)", "deftilelength = (-7)", "deftilelength = (0)", "deftilelength = (1)", "deftilelength = (10)", "deftilelength = (2)", "deftilelength = (277)", "deftilelength = (3)", "deftilelength = (5)", "deftilelength = (7)", "deftilelength = (defrowsperstrip)", "deftilelength = (deftilelength)", "deftilelength = (deftilewidth)", "deftilelength = atoi((mp))", "deftilelength = atoi((optarg))", "deftilewidth = (-1)", "deftilewidth = (-2)", "deftilewidth = (-3)", "deftilewidth = (-5)", "deftilewidth = (-7)", "deftilewidth = (0)", "deftilewidth = (1)", "deftilewidth = (10)", "deftilewidth = (2)", "deftilewidth = (277)", "deftilewidth = (3)", "deftilewidth = (5)", "deftilewidth = (7)", "deftilewidth = (defrowsperstrip)", "deftilewidth = (deftilelength)", "deftilewidth = (deftilewidth)", "deftilewidth = atoi((mp))", "deftilewidth = atoi((optarg))", "fillorder = (-1)", "fillorder = (-2)", "fillorder = (-3)", "fillorder = (-5)", "fillorder = (-7)", "fillorder = (0)", "fillorder = (1)", "fillorder = (10)", "fillorder = (2)", "fillorder = (277)", "fillorder = (3)", "fillorder = (5)", "fillorder = (7)", "fillorder = (defconfig)", "fillorder = (deffillorder)", "g3opts = (-1)", "g3opts = (-2)", "g3opts = (-3)", "g3opts = (-5)", "g3opts = (-7)", "g3opts = (0)", "g3opts = (1)", "g3opts = (10)", "g3opts = (2)", "g3opts = (277)", "g3opts = (3)", "g3opts = (5)", "g3opts = (7)", "g3opts = (defrowsperstrip)", "g3opts = (deftilelength)", "g3opts = (deftilewidth)", "in = (in)", "in = (out)", "in = openSrcImage(&(mp))", "in = openSrcImage(&(optarg))", "jpegcolormode = (-1)", "jpegcolormode = (-2)", "jpegcolormode = (-3)", "jpegcolormode = (-5)", "jpegcolormode = (-7)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (10)", "jpegcolormode = (2)", "jpegcolormode = (277)", "jpegcolormode = (3)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (argc)", "jpegcolormode = (c)", "jpegcolormode = (optind)", "orientation = (-1)", "orientation = (-2)", "orientation = (-3)", "orientation = (-5)", "orientation = (-7)", "orientation = (0)", "orientation = (1)", "orientation = (10)", "orientation = (2)", "orientation = (277)", "orientation = (3)", "orientation = (5)", "orientation = (7)", "orientation = (defconfig)", "orientation = (deffillorder)", "out = (in)", "out = (out)", "out = TIFFOpen((argv)[argc - 1], mode)", "outtiled = (-1)", "outtiled = (-2)", "outtiled = (-3)", "outtiled = (-5)", "outtiled = (-7)", "outtiled = (0)", "outtiled = (1)", "outtiled = (10)", "outtiled = (2)", "outtiled = (277)", "outtiled = (3)", "outtiled = (5)", "outtiled = (7)", "outtiled = (argc)", "outtiled = (c)", "outtiled = (optind)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (-2)", "pageNum = (-3)", "pageNum = (-5)", "pageNum = (-7)", "pageNum = (0)", "pageNum = (1)", "pageNum = (10)", "pageNum = (2)", "pageNum = (277)", "pageNum = (3)", "pageNum = (5)", "pageNum = (7)", "pageNum = (argc)", "pageNum = (c)", "pageNum = (optind)", "predictor = (-1)", "predictor = (-2)", "predictor = (-3)", "predictor = (-5)", "predictor = (-7)", "predictor = (0)", "predictor = (1)", "predictor = (10)", "predictor = (2)", "predictor = (277)", "predictor = (3)", "predictor = (5)", "predictor = (7)", "predictor = (defconfig)", "predictor = (deffillorder)", "processG3Options((mp))", "processG3Options((optarg))", "quality = (-1)", "quality = (-2)", "quality = (-3)", "quality = (-5)", "quality = (-7)", "quality = (0)", "quality = (1)", "quality = (10)", "quality = (2)", "quality = (277)", "quality = (3)", "quality = (5)", "quality = (7)", "quality = (argc)", "quality = (c)", "quality = (optind)", "quality = atoi((mp) + 1)", "quality = atoi((optarg) + 1)", "rowsperstrip = (-1)", "rowsperstrip = (-2)", "rowsperstrip = (-3)", "rowsperstrip = (-5)", "rowsperstrip = (-7)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (10)", "rowsperstrip = (2)", "rowsperstrip = (277)", "rowsperstrip = (3)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (defrowsperstrip)", "rowsperstrip = (deftilelength)", "rowsperstrip = (deftilewidth)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (-2)", "tilelength = (-3)", "tilelength = (-5)", "tilelength = (-7)", "tilelength = (0)", "tilelength = (1)", "tilelength = (10)", "tilelength = (2)", "tilelength = (277)", "tilelength = (3)", "tilelength = (5)", "tilelength = (7)", "tilelength = (defrowsperstrip)", "tilelength = (deftilelength)", "tilelength = (deftilewidth)", "tilewidth = (-1)", "tilewidth = (-2)", "tilewidth = (-3)", "tilewidth = (-5)", "tilewidth = (-7)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (10)", "tilewidth = (2)", "tilewidth = (277)", "tilewidth = (3)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (defrowsperstrip)", "tilewidth = (deftilelength)", "tilewidth = (deftilewidth)", "(void)TIFFClose(out)", "TIFFClose(in)", "TIFFClose(out)", "TIFFError(TIFFFileName(in), \"Error, setting subdirectory at %lu\", diroff)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "comma = optarg[1]", "compression = defcompression", "config = defconfig", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defconfig = 1", "defconfig = 2", "deffillorder = 1", "deffillorder = 2", "defg3opts = 0", "deftilelength = atoi(optarg)", "deftilewidth = atoi(optarg)", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "fillorder = deffillorder", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "out = TIFFOpen(argv[argc - 1], mode)", "pageNum = -1", "predictor = defpredictor", "rowsperstrip = defrowsperstrip", "tilelength = deftilelength", "tilewidth = deftilewidth", "usage()", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    break;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return -1;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return -2;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return -3;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return -5;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return -7;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return 0;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return 10;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return 1;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return 277;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return 2;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return 3;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return 5;\n", "if (__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    return 7;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.74040202988087]
								}, {
									"case":	2,
									"scores":	[-6.74040202988087]
								}, {
									"case":	3,
									"scores":	[-6.74040202988087]
								}, {
									"case":	4,
									"scores":	[-6.74040202988087]
								}, {
									"case":	5,
									"scores":	[-6.74040202988087]
								}, {
									"case":	6,
									"scores":	[-6.74040202988087]
								}, {
									"case":	7,
									"scores":	[-6.74040202988087]
								}, {
									"case":	8,
									"scores":	[-6.74040202988087]
								}, {
									"case":	9,
									"scores":	[-6.74040202988087]
								}, {
									"case":	10,
									"scores":	[-6.74040202988087]
								}, {
									"case":	11,
									"scores":	[-6.74040202988087]
								}, {
									"case":	12,
									"scores":	[-6.74040202988087]
								}, {
									"case":	13,
									"scores":	[-6.74040202988087]
								}, {
									"case":	14,
									"scores":	[-6.74040202988087]
								}, {
									"case":	15,
									"scores":	[-6.74040202988087]
								}, {
									"case":	16,
									"scores":	[-6.74040202988087]
								}, {
									"case":	17,
									"scores":	[-6.74040202988087]
								}, {
									"case":	18,
									"scores":	[-6.74040202988087]
								}, {
									"case":	19,
									"scores":	[-6.74040202988087]
								}, {
									"case":	20,
									"scores":	[-6.74040202988087]
								}, {
									"case":	21,
									"scores":	[-6.74040202988087]
								}, {
									"case":	22,
									"scores":	[-6.74040202988087]
								}, {
									"case":	23,
									"scores":	[-6.74040202988087]
								}, {
									"case":	24,
									"scores":	[-6.74040202988087]
								}, {
									"case":	25,
									"scores":	[-6.74040202988087]
								}, {
									"case":	26,
									"scores":	[-6.74040202988087]
								}, {
									"case":	27,
									"scores":	[-6.74040202988087]
								}, {
									"case":	28,
									"scores":	[-6.74040202988087]
								}, {
									"case":	29,
									"scores":	[-6.74040202988087]
								}, {
									"case":	30,
									"scores":	[-6.74040202988087]
								}, {
									"case":	31,
									"scores":	[-6.74040202988087]
								}, {
									"case":	32,
									"scores":	[-6.74040202988087]
								}, {
									"case":	33,
									"scores":	[-6.74040202988087]
								}, {
									"case":	34,
									"scores":	[-6.74040202988087]
								}, {
									"case":	35,
									"scores":	[-6.74040202988087]
								}, {
									"case":	36,
									"scores":	[-6.74040202988087]
								}, {
									"case":	37,
									"scores":	[-6.74040202988087]
								}, {
									"case":	38,
									"scores":	[-6.74040202988087]
								}, {
									"case":	39,
									"scores":	[-6.74040202988087]
								}, {
									"case":	40,
									"scores":	[-6.74040202988087]
								}, {
									"case":	41,
									"scores":	[-6.74040202988087]
								}, {
									"case":	42,
									"scores":	[-6.74040202988087]
								}, {
									"case":	43,
									"scores":	[-6.74040202988087]
								}, {
									"case":	44,
									"scores":	[-6.74040202988087]
								}, {
									"case":	45,
									"scores":	[-6.74040202988087]
								}, {
									"case":	46,
									"scores":	[-6.74040202988087]
								}, {
									"case":	47,
									"scores":	[-6.74040202988087]
								}, {
									"case":	48,
									"scores":	[-6.74040202988087]
								}, {
									"case":	49,
									"scores":	[-6.74040202988087]
								}, {
									"case":	50,
									"scores":	[-6.74040202988087]
								}, {
									"case":	51,
									"scores":	[-6.74040202988087]
								}, {
									"case":	52,
									"scores":	[-6.74040202988087]
								}, {
									"case":	53,
									"scores":	[-6.74040202988087]
								}, {
									"case":	54,
									"scores":	[-6.74040202988087]
								}, {
									"case":	55,
									"scores":	[-6.74040202988087]
								}, {
									"case":	56,
									"scores":	[-6.74040202988087]
								}, {
									"case":	57,
									"scores":	[-6.74040202988087]
								}, {
									"case":	58,
									"scores":	[-6.74040202988087]
								}, {
									"case":	59,
									"scores":	[-6.74040202988087]
								}, {
									"case":	60,
									"scores":	[-6.74040202988087]
								}, {
									"case":	61,
									"scores":	[-6.74040202988087]
								}, {
									"case":	62,
									"scores":	[-6.74040202988087]
								}, {
									"case":	63,
									"scores":	[-6.74040202988087]
								}, {
									"case":	64,
									"scores":	[-6.74040202988087]
								}, {
									"case":	65,
									"scores":	[-6.74040202988087]
								}, {
									"case":	66,
									"scores":	[-6.74040202988087]
								}, {
									"case":	67,
									"scores":	[-6.74040202988087]
								}, {
									"case":	68,
									"scores":	[-6.74040202988087]
								}, {
									"case":	69,
									"scores":	[-6.74040202988087]
								}, {
									"case":	70,
									"scores":	[-6.74040202988087]
								}, {
									"case":	71,
									"scores":	[-6.74040202988087]
								}, {
									"case":	72,
									"scores":	[-6.74040202988087]
								}, {
									"case":	73,
									"scores":	[-6.74040202988087]
								}, {
									"case":	74,
									"scores":	[-6.74040202988087]
								}, {
									"case":	75,
									"scores":	[-6.74040202988087]
								}, {
									"case":	76,
									"scores":	[-6.74040202988087]
								}, {
									"case":	77,
									"scores":	[-6.74040202988087]
								}, {
									"case":	78,
									"scores":	[-6.74040202988087]
								}, {
									"case":	79,
									"scores":	[-6.74040202988087]
								}, {
									"case":	80,
									"scores":	[-6.74040202988087]
								}, {
									"case":	81,
									"scores":	[-6.74040202988087]
								}, {
									"case":	82,
									"scores":	[-6.74040202988087]
								}, {
									"case":	83,
									"scores":	[-6.74040202988087]
								}, {
									"case":	84,
									"scores":	[-6.74040202988087]
								}, {
									"case":	85,
									"scores":	[-6.74040202988087]
								}, {
									"case":	86,
									"scores":	[-6.74040202988087]
								}, {
									"case":	87,
									"scores":	[-6.74040202988087]
								}, {
									"case":	88,
									"scores":	[-6.74040202988087]
								}, {
									"case":	89,
									"scores":	[-6.74040202988087]
								}, {
									"case":	90,
									"scores":	[-6.74040202988087]
								}, {
									"case":	91,
									"scores":	[-6.74040202988087]
								}, {
									"case":	92,
									"scores":	[-6.74040202988087]
								}, {
									"case":	93,
									"scores":	[-6.74040202988087]
								}, {
									"case":	94,
									"scores":	[-6.74040202988087]
								}, {
									"case":	95,
									"scores":	[-6.74040202988087]
								}, {
									"case":	96,
									"scores":	[-6.74040202988087]
								}, {
									"case":	97,
									"scores":	[-6.74040202988087]
								}, {
									"case":	98,
									"scores":	[-6.74040202988087]
								}, {
									"case":	99,
									"scores":	[-6.74040202988087]
								}, {
									"case":	100,
									"scores":	[-6.74040202988087]
								}, {
									"case":	101,
									"scores":	[-6.74040202988087]
								}, {
									"case":	102,
									"scores":	[-6.74040202988087]
								}, {
									"case":	103,
									"scores":	[-6.74040202988087]
								}, {
									"case":	104,
									"scores":	[-6.74040202988087]
								}, {
									"case":	105,
									"scores":	[-6.74040202988087]
								}, {
									"case":	106,
									"scores":	[-6.74040202988087]
								}, {
									"case":	107,
									"scores":	[-6.74040202988087]
								}, {
									"case":	108,
									"scores":	[-6.74040202988087]
								}, {
									"case":	109,
									"scores":	[-6.74040202988087]
								}, {
									"case":	110,
									"scores":	[-6.74040202988087]
								}, {
									"case":	111,
									"scores":	[-6.74040202988087]
								}, {
									"case":	112,
									"scores":	[-6.74040202988087]
								}, {
									"case":	113,
									"scores":	[-6.74040202988087]
								}, {
									"case":	114,
									"scores":	[-6.74040202988087]
								}, {
									"case":	115,
									"scores":	[-6.74040202988087]
								}, {
									"case":	116,
									"scores":	[-6.74040202988087]
								}, {
									"case":	117,
									"scores":	[-6.74040202988087]
								}, {
									"case":	118,
									"scores":	[-6.74040202988087]
								}, {
									"case":	119,
									"scores":	[-6.74040202988087]
								}, {
									"case":	120,
									"scores":	[-6.74040202988087]
								}, {
									"case":	121,
									"scores":	[-6.74040202988087]
								}, {
									"case":	122,
									"scores":	[-6.74040202988087]
								}, {
									"case":	123,
									"scores":	[-6.74040202988087]
								}, {
									"case":	124,
									"scores":	[-6.74040202988087]
								}, {
									"case":	125,
									"scores":	[-6.74040202988087]
								}, {
									"case":	126,
									"scores":	[-6.74040202988087]
								}, {
									"case":	127,
									"scores":	[-6.74040202988087]
								}, {
									"case":	128,
									"scores":	[-6.74040202988087]
								}, {
									"case":	129,
									"scores":	[-6.74040202988087]
								}, {
									"case":	130,
									"scores":	[-6.74040202988087]
								}, {
									"case":	131,
									"scores":	[-6.74040202988087]
								}, {
									"case":	132,
									"scores":	[-6.74040202988087]
								}, {
									"case":	133,
									"scores":	[-6.74040202988087]
								}, {
									"case":	134,
									"scores":	[-6.74040202988087]
								}, {
									"case":	135,
									"scores":	[-6.74040202988087]
								}, {
									"case":	136,
									"scores":	[-6.74040202988087]
								}, {
									"case":	137,
									"scores":	[-6.74040202988087]
								}, {
									"case":	138,
									"scores":	[-6.74040202988087]
								}, {
									"case":	139,
									"scores":	[-6.74040202988087]
								}, {
									"case":	140,
									"scores":	[-6.74040202988087]
								}, {
									"case":	141,
									"scores":	[-6.74040202988087]
								}, {
									"case":	142,
									"scores":	[-6.74040202988087]
								}, {
									"case":	143,
									"scores":	[-6.74040202988087]
								}, {
									"case":	144,
									"scores":	[-6.74040202988087]
								}, {
									"case":	145,
									"scores":	[-6.74040202988087]
								}, {
									"case":	146,
									"scores":	[-6.74040202988087]
								}, {
									"case":	147,
									"scores":	[-6.74040202988087]
								}, {
									"case":	148,
									"scores":	[-6.74040202988087]
								}, {
									"case":	149,
									"scores":	[-6.74040202988087]
								}, {
									"case":	150,
									"scores":	[-6.74040202988087]
								}, {
									"case":	151,
									"scores":	[-6.74040202988087]
								}, {
									"case":	152,
									"scores":	[-6.74040202988087]
								}, {
									"case":	153,
									"scores":	[-6.74040202988087]
								}, {
									"case":	154,
									"scores":	[-6.74040202988087]
								}, {
									"case":	155,
									"scores":	[-6.74040202988087]
								}, {
									"case":	156,
									"scores":	[-6.74040202988087]
								}, {
									"case":	157,
									"scores":	[-6.74040202988087]
								}, {
									"case":	158,
									"scores":	[-6.74040202988087]
								}, {
									"case":	159,
									"scores":	[-6.74040202988087]
								}, {
									"case":	160,
									"scores":	[-6.74040202988087]
								}, {
									"case":	161,
									"scores":	[-6.74040202988087]
								}, {
									"case":	162,
									"scores":	[-6.74040202988087]
								}, {
									"case":	163,
									"scores":	[-6.74040202988087]
								}, {
									"case":	164,
									"scores":	[-6.74040202988087]
								}, {
									"case":	165,
									"scores":	[-6.74040202988087]
								}, {
									"case":	166,
									"scores":	[-6.74040202988087]
								}, {
									"case":	167,
									"scores":	[-6.74040202988087]
								}, {
									"case":	168,
									"scores":	[-6.74040202988087]
								}, {
									"case":	169,
									"scores":	[-6.74040202988087]
								}, {
									"case":	170,
									"scores":	[-6.74040202988087]
								}, {
									"case":	171,
									"scores":	[-6.74040202988087]
								}, {
									"case":	172,
									"scores":	[-6.74040202988087]
								}, {
									"case":	173,
									"scores":	[-6.74040202988087]
								}, {
									"case":	174,
									"scores":	[-6.74040202988087]
								}, {
									"case":	175,
									"scores":	[-6.74040202988087]
								}, {
									"case":	176,
									"scores":	[-6.74040202988087]
								}, {
									"case":	177,
									"scores":	[-6.74040202988087]
								}, {
									"case":	178,
									"scores":	[-6.74040202988087]
								}, {
									"case":	179,
									"scores":	[-6.74040202988087]
								}, {
									"case":	180,
									"scores":	[-6.74040202988087]
								}, {
									"case":	181,
									"scores":	[-6.74040202988087]
								}, {
									"case":	182,
									"scores":	[-6.74040202988087]
								}, {
									"case":	183,
									"scores":	[-6.74040202988087]
								}, {
									"case":	184,
									"scores":	[-6.74040202988087]
								}, {
									"case":	185,
									"scores":	[-6.74040202988087]
								}, {
									"case":	186,
									"scores":	[-6.74040202988087]
								}, {
									"case":	187,
									"scores":	[-6.74040202988087]
								}, {
									"case":	188,
									"scores":	[-6.74040202988087]
								}, {
									"case":	189,
									"scores":	[-6.74040202988087]
								}, {
									"case":	190,
									"scores":	[-6.74040202988087]
								}, {
									"case":	191,
									"scores":	[-6.74040202988087]
								}, {
									"case":	192,
									"scores":	[-6.74040202988087]
								}, {
									"case":	193,
									"scores":	[-6.74040202988087]
								}, {
									"case":	194,
									"scores":	[-6.74040202988087]
								}, {
									"case":	195,
									"scores":	[-6.74040202988087]
								}, {
									"case":	196,
									"scores":	[-6.74040202988087]
								}, {
									"case":	197,
									"scores":	[-6.74040202988087]
								}, {
									"case":	198,
									"scores":	[-6.74040202988087]
								}, {
									"case":	199,
									"scores":	[-6.74040202988087]
								}, {
									"case":	200,
									"scores":	[-6.74040202988087]
								}, {
									"case":	201,
									"scores":	[-6.74040202988087]
								}, {
									"case":	202,
									"scores":	[-6.74040202988087]
								}, {
									"case":	203,
									"scores":	[-6.74040202988087]
								}, {
									"case":	204,
									"scores":	[-6.74040202988087]
								}, {
									"case":	205,
									"scores":	[-6.74040202988087]
								}, {
									"case":	206,
									"scores":	[-6.74040202988087]
								}, {
									"case":	207,
									"scores":	[-6.74040202988087]
								}, {
									"case":	208,
									"scores":	[-6.74040202988087]
								}, {
									"case":	209,
									"scores":	[-6.74040202988087]
								}, {
									"case":	210,
									"scores":	[-6.74040202988087]
								}, {
									"case":	211,
									"scores":	[-6.74040202988087]
								}, {
									"case":	212,
									"scores":	[-6.74040202988087]
								}, {
									"case":	213,
									"scores":	[-6.74040202988087]
								}, {
									"case":	214,
									"scores":	[-6.74040202988087]
								}, {
									"case":	215,
									"scores":	[-6.74040202988087]
								}, {
									"case":	216,
									"scores":	[-6.74040202988087]
								}, {
									"case":	217,
									"scores":	[-6.74040202988087]
								}, {
									"case":	218,
									"scores":	[-6.74040202988087]
								}, {
									"case":	219,
									"scores":	[-6.74040202988087]
								}, {
									"case":	220,
									"scores":	[-6.74040202988087]
								}, {
									"case":	221,
									"scores":	[-6.74040202988087]
								}, {
									"case":	222,
									"scores":	[-6.74040202988087]
								}, {
									"case":	223,
									"scores":	[-6.74040202988087]
								}, {
									"case":	224,
									"scores":	[-6.74040202988087]
								}, {
									"case":	225,
									"scores":	[-6.74040202988087]
								}, {
									"case":	226,
									"scores":	[-6.74040202988087]
								}, {
									"case":	227,
									"scores":	[-6.74040202988087]
								}, {
									"case":	228,
									"scores":	[-6.74040202988087]
								}, {
									"case":	229,
									"scores":	[-6.74040202988087]
								}, {
									"case":	230,
									"scores":	[-6.74040202988087]
								}, {
									"case":	231,
									"scores":	[-6.74040202988087]
								}, {
									"case":	232,
									"scores":	[-6.74040202988087]
								}, {
									"case":	233,
									"scores":	[-6.74040202988087]
								}, {
									"case":	234,
									"scores":	[-6.74040202988087]
								}, {
									"case":	235,
									"scores":	[-6.74040202988087]
								}, {
									"case":	236,
									"scores":	[-6.74040202988087]
								}, {
									"case":	237,
									"scores":	[-6.74040202988087]
								}, {
									"case":	238,
									"scores":	[-6.74040202988087]
								}, {
									"case":	239,
									"scores":	[-6.74040202988087]
								}, {
									"case":	240,
									"scores":	[-6.74040202988087]
								}, {
									"case":	241,
									"scores":	[-6.74040202988087]
								}, {
									"case":	242,
									"scores":	[-6.74040202988087]
								}, {
									"case":	243,
									"scores":	[-6.74040202988087]
								}, {
									"case":	244,
									"scores":	[-6.74040202988087]
								}, {
									"case":	245,
									"scores":	[-6.74040202988087]
								}, {
									"case":	246,
									"scores":	[-6.74040202988087]
								}, {
									"case":	247,
									"scores":	[-6.74040202988087]
								}, {
									"case":	248,
									"scores":	[-6.74040202988087]
								}, {
									"case":	249,
									"scores":	[-6.74040202988087]
								}, {
									"case":	250,
									"scores":	[-6.74040202988087]
								}, {
									"case":	251,
									"scores":	[-6.74040202988087]
								}, {
									"case":	252,
									"scores":	[-6.74040202988087]
								}, {
									"case":	253,
									"scores":	[-6.74040202988087]
								}, {
									"case":	254,
									"scores":	[-6.74040202988087]
								}, {
									"case":	255,
									"scores":	[-6.74040202988087]
								}, {
									"case":	256,
									"scores":	[-6.74040202988087]
								}, {
									"case":	257,
									"scores":	[-6.74040202988087]
								}, {
									"case":	258,
									"scores":	[-6.74040202988087]
								}, {
									"case":	259,
									"scores":	[-6.74040202988087]
								}, {
									"case":	260,
									"scores":	[-6.74040202988087]
								}, {
									"case":	261,
									"scores":	[-6.74040202988087]
								}, {
									"case":	262,
									"scores":	[-6.74040202988087]
								}, {
									"case":	263,
									"scores":	[-6.74040202988087]
								}, {
									"case":	264,
									"scores":	[-6.74040202988087]
								}, {
									"case":	265,
									"scores":	[-6.74040202988087]
								}, {
									"case":	266,
									"scores":	[-6.74040202988087]
								}, {
									"case":	267,
									"scores":	[-6.74040202988087]
								}, {
									"case":	268,
									"scores":	[-6.74040202988087]
								}, {
									"case":	269,
									"scores":	[-6.74040202988087]
								}, {
									"case":	270,
									"scores":	[-6.74040202988087]
								}, {
									"case":	271,
									"scores":	[-6.74040202988087]
								}, {
									"case":	272,
									"scores":	[-6.74040202988087]
								}, {
									"case":	273,
									"scores":	[-6.74040202988087]
								}, {
									"case":	274,
									"scores":	[-6.74040202988087]
								}, {
									"case":	275,
									"scores":	[-6.74040202988087]
								}, {
									"case":	276,
									"scores":	[-6.74040202988087]
								}, {
									"case":	277,
									"scores":	[-6.74040202988087]
								}, {
									"case":	278,
									"scores":	[-6.74040202988087]
								}, {
									"case":	279,
									"scores":	[-6.74040202988087]
								}, {
									"case":	280,
									"scores":	[-6.74040202988087]
								}, {
									"case":	281,
									"scores":	[-6.74040202988087]
								}, {
									"case":	282,
									"scores":	[-6.74040202988087]
								}, {
									"case":	283,
									"scores":	[-6.74040202988087]
								}, {
									"case":	284,
									"scores":	[-6.74040202988087]
								}, {
									"case":	285,
									"scores":	[-6.74040202988087]
								}, {
									"case":	286,
									"scores":	[-6.74040202988087]
								}, {
									"case":	287,
									"scores":	[-6.74040202988087]
								}, {
									"case":	288,
									"scores":	[-6.74040202988087]
								}, {
									"case":	289,
									"scores":	[-6.74040202988087]
								}, {
									"case":	290,
									"scores":	[-6.74040202988087]
								}, {
									"case":	291,
									"scores":	[-6.74040202988087]
								}, {
									"case":	292,
									"scores":	[-6.74040202988087]
								}, {
									"case":	293,
									"scores":	[-6.74040202988087]
								}, {
									"case":	294,
									"scores":	[-6.74040202988087]
								}, {
									"case":	295,
									"scores":	[-6.74040202988087]
								}, {
									"case":	296,
									"scores":	[-6.74040202988087]
								}, {
									"case":	297,
									"scores":	[-6.74040202988087]
								}, {
									"case":	298,
									"scores":	[-6.74040202988087]
								}, {
									"case":	299,
									"scores":	[-6.74040202988087]
								}, {
									"case":	300,
									"scores":	[-6.74040202988087]
								}, {
									"case":	301,
									"scores":	[-6.74040202988087]
								}, {
									"case":	302,
									"scores":	[-6.74040202988087]
								}, {
									"case":	303,
									"scores":	[-6.74040202988087]
								}, {
									"case":	304,
									"scores":	[-6.74040202988087]
								}, {
									"case":	305,
									"scores":	[-6.74040202988087]
								}, {
									"case":	306,
									"scores":	[-6.74040202988087]
								}, {
									"case":	307,
									"scores":	[-6.74040202988087]
								}, {
									"case":	308,
									"scores":	[-6.74040202988087]
								}, {
									"case":	309,
									"scores":	[-6.74040202988087]
								}, {
									"case":	310,
									"scores":	[-6.74040202988087]
								}, {
									"case":	311,
									"scores":	[-6.74040202988087]
								}, {
									"case":	312,
									"scores":	[-6.74040202988087]
								}, {
									"case":	313,
									"scores":	[-6.74040202988087]
								}, {
									"case":	314,
									"scores":	[-6.74040202988087]
								}, {
									"case":	315,
									"scores":	[-6.74040202988087]
								}, {
									"case":	316,
									"scores":	[-6.74040202988087]
								}, {
									"case":	317,
									"scores":	[-6.74040202988087]
								}, {
									"case":	318,
									"scores":	[-6.74040202988087]
								}, {
									"case":	319,
									"scores":	[-6.74040202988087]
								}, {
									"case":	320,
									"scores":	[-6.74040202988087]
								}, {
									"case":	321,
									"scores":	[-6.74040202988087]
								}, {
									"case":	322,
									"scores":	[-6.74040202988087]
								}, {
									"case":	323,
									"scores":	[-6.74040202988087]
								}, {
									"case":	324,
									"scores":	[-6.74040202988087]
								}, {
									"case":	325,
									"scores":	[-6.74040202988087]
								}, {
									"case":	326,
									"scores":	[-6.74040202988087]
								}, {
									"case":	327,
									"scores":	[-6.74040202988087]
								}, {
									"case":	328,
									"scores":	[-6.74040202988087]
								}, {
									"case":	329,
									"scores":	[-6.74040202988087]
								}, {
									"case":	330,
									"scores":	[-6.74040202988087]
								}, {
									"case":	331,
									"scores":	[-6.74040202988087]
								}, {
									"case":	332,
									"scores":	[-6.74040202988087]
								}, {
									"case":	333,
									"scores":	[-6.74040202988087]
								}, {
									"case":	334,
									"scores":	[-6.74040202988087]
								}, {
									"case":	335,
									"scores":	[-6.74040202988087]
								}, {
									"case":	336,
									"scores":	[-6.74040202988087]
								}, {
									"case":	337,
									"scores":	[-6.74040202988087]
								}, {
									"case":	338,
									"scores":	[-6.74040202988087]
								}, {
									"case":	339,
									"scores":	[-6.74040202988087]
								}, {
									"case":	340,
									"scores":	[-6.74040202988087]
								}, {
									"case":	341,
									"scores":	[-6.74040202988087]
								}, {
									"case":	342,
									"scores":	[-6.74040202988087]
								}, {
									"case":	343,
									"scores":	[-6.74040202988087]
								}, {
									"case":	344,
									"scores":	[-6.74040202988087]
								}, {
									"case":	345,
									"scores":	[-6.74040202988087]
								}, {
									"case":	346,
									"scores":	[-6.74040202988087]
								}, {
									"case":	347,
									"scores":	[-6.74040202988087]
								}, {
									"case":	348,
									"scores":	[-6.74040202988087]
								}, {
									"case":	349,
									"scores":	[-6.74040202988087]
								}, {
									"case":	350,
									"scores":	[-6.74040202988087]
								}, {
									"case":	351,
									"scores":	[-6.74040202988087]
								}, {
									"case":	352,
									"scores":	[-6.74040202988087]
								}, {
									"case":	353,
									"scores":	[-6.74040202988087]
								}, {
									"case":	354,
									"scores":	[-6.74040202988087]
								}, {
									"case":	355,
									"scores":	[-6.74040202988087]
								}, {
									"case":	356,
									"scores":	[-6.74040202988087]
								}, {
									"case":	357,
									"scores":	[-6.74040202988087]
								}, {
									"case":	358,
									"scores":	[-6.74040202988087]
								}, {
									"case":	359,
									"scores":	[-6.74040202988087]
								}, {
									"case":	360,
									"scores":	[-6.74040202988087]
								}, {
									"case":	361,
									"scores":	[-6.74040202988087]
								}, {
									"case":	362,
									"scores":	[-6.74040202988087]
								}, {
									"case":	363,
									"scores":	[-6.74040202988087]
								}, {
									"case":	364,
									"scores":	[-6.74040202988087]
								}, {
									"case":	365,
									"scores":	[-6.74040202988087]
								}, {
									"case":	366,
									"scores":	[-6.74040202988087]
								}, {
									"case":	367,
									"scores":	[-6.74040202988087]
								}, {
									"case":	368,
									"scores":	[-6.74040202988087]
								}, {
									"case":	369,
									"scores":	[-6.74040202988087]
								}, {
									"case":	370,
									"scores":	[-6.74040202988087]
								}, {
									"case":	371,
									"scores":	[-6.74040202988087]
								}, {
									"case":	372,
									"scores":	[-6.74040202988087]
								}, {
									"case":	373,
									"scores":	[-6.74040202988087]
								}, {
									"case":	374,
									"scores":	[-6.74040202988087]
								}, {
									"case":	375,
									"scores":	[-6.74040202988087]
								}, {
									"case":	376,
									"scores":	[-6.74040202988087]
								}, {
									"case":	377,
									"scores":	[-6.74040202988087]
								}, {
									"case":	378,
									"scores":	[-6.74040202988087]
								}, {
									"case":	379,
									"scores":	[-6.74040202988087]
								}, {
									"case":	380,
									"scores":	[-6.74040202988087]
								}, {
									"case":	381,
									"scores":	[-6.74040202988087]
								}, {
									"case":	382,
									"scores":	[-6.74040202988087]
								}, {
									"case":	383,
									"scores":	[-6.74040202988087]
								}, {
									"case":	384,
									"scores":	[-6.74040202988087]
								}, {
									"case":	385,
									"scores":	[-6.74040202988087]
								}, {
									"case":	386,
									"scores":	[-6.74040202988087]
								}, {
									"case":	387,
									"scores":	[-6.74040202988087]
								}, {
									"case":	388,
									"scores":	[-6.74040202988087]
								}, {
									"case":	389,
									"scores":	[-6.74040202988087]
								}, {
									"case":	390,
									"scores":	[-6.74040202988087]
								}, {
									"case":	391,
									"scores":	[-6.74040202988087]
								}, {
									"case":	392,
									"scores":	[-6.74040202988087]
								}, {
									"case":	393,
									"scores":	[-6.74040202988087]
								}, {
									"case":	394,
									"scores":	[-6.74040202988087]
								}, {
									"case":	395,
									"scores":	[-6.74040202988087]
								}, {
									"case":	396,
									"scores":	[-6.74040202988087]
								}, {
									"case":	397,
									"scores":	[-6.74040202988087]
								}, {
									"case":	398,
									"scores":	[-6.74040202988087]
								}, {
									"case":	399,
									"scores":	[-6.74040202988087]
								}, {
									"case":	400,
									"scores":	[-6.74040202988087]
								}, {
									"case":	401,
									"scores":	[-6.74040202988087]
								}, {
									"case":	402,
									"scores":	[-6.74040202988087]
								}, {
									"case":	403,
									"scores":	[-6.74040202988087]
								}, {
									"case":	404,
									"scores":	[-6.74040202988087]
								}, {
									"case":	405,
									"scores":	[-6.74040202988087]
								}, {
									"case":	406,
									"scores":	[-6.74040202988087]
								}, {
									"case":	407,
									"scores":	[-6.74040202988087]
								}, {
									"case":	408,
									"scores":	[-6.74040202988087]
								}, {
									"case":	409,
									"scores":	[-6.74040202988087]
								}, {
									"case":	410,
									"scores":	[-6.74040202988087]
								}, {
									"case":	411,
									"scores":	[-6.74040202988087]
								}, {
									"case":	412,
									"scores":	[-6.74040202988087]
								}, {
									"case":	413,
									"scores":	[-6.74040202988087]
								}, {
									"case":	414,
									"scores":	[-6.74040202988087]
								}, {
									"case":	415,
									"scores":	[-6.74040202988087]
								}, {
									"case":	416,
									"scores":	[-6.74040202988087]
								}, {
									"case":	417,
									"scores":	[-6.74040202988087]
								}, {
									"case":	418,
									"scores":	[-6.74040202988087]
								}, {
									"case":	419,
									"scores":	[-6.74040202988087]
								}, {
									"case":	420,
									"scores":	[-6.74040202988087]
								}, {
									"case":	421,
									"scores":	[-6.74040202988087]
								}, {
									"case":	422,
									"scores":	[-6.74040202988087]
								}, {
									"case":	423,
									"scores":	[-6.74040202988087]
								}, {
									"case":	424,
									"scores":	[-6.74040202988087]
								}, {
									"case":	425,
									"scores":	[-6.74040202988087]
								}, {
									"case":	426,
									"scores":	[-6.74040202988087]
								}, {
									"case":	427,
									"scores":	[-6.74040202988087]
								}, {
									"case":	428,
									"scores":	[-6.74040202988087]
								}, {
									"case":	429,
									"scores":	[-6.74040202988087]
								}, {
									"case":	430,
									"scores":	[-6.74040202988087]
								}, {
									"case":	431,
									"scores":	[-6.74040202988087]
								}, {
									"case":	432,
									"scores":	[-6.74040202988087]
								}, {
									"case":	433,
									"scores":	[-6.74040202988087]
								}, {
									"case":	434,
									"scores":	[-6.74040202988087]
								}, {
									"case":	435,
									"scores":	[-6.74040202988087]
								}, {
									"case":	436,
									"scores":	[-6.74040202988087]
								}, {
									"case":	437,
									"scores":	[-6.74040202988087]
								}, {
									"case":	438,
									"scores":	[-6.74040202988087]
								}, {
									"case":	439,
									"scores":	[-6.74040202988087]
								}, {
									"case":	440,
									"scores":	[-6.74040202988087]
								}, {
									"case":	441,
									"scores":	[-6.74040202988087]
								}, {
									"case":	442,
									"scores":	[-6.74040202988087]
								}, {
									"case":	443,
									"scores":	[-6.74040202988087]
								}, {
									"case":	444,
									"scores":	[-8.15466884988087, -8.14796714988087, -8.65682637988087, -8.61940197988087, -8.65682637988087, -7.51289114988087, -8.14796714988087, -8.14796714988087, -8.65682637988087, -8.14796714988087, -8.14796714988087, -8.43905334988087, -8.44575504988087, -8.15466884988087, -8.14796714988087, -8.14796714988087, -8.11054274988087, -8.65682637988087, -8.11054274988087, -8.65682637988087, -8.65682637988087, -8.65682637988087, -8.65682637988087, -8.65682637988087, -8.65682637988087, -8.65682637988087, -8.65682637988087, -8.02175037988087, -8.65682637988087, -8.65682637988087]
								}, {
									"case":	445,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	446,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	447,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	448,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	449,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	450,
									"scores":	[-8.84187284988087, -8.83517114988087, -9.34403037988087, -9.30660597988087, -9.34403037988087, -8.20009514988087, -8.83517114988087, -8.83517114988087, -9.34403037988087, -8.83517114988087, -8.83517114988087, -9.12625734988087, -9.13295904988087, -8.84187284988087, -8.83517114988087, -8.83517114988087, -8.79774674988087, -9.34403037988087, -8.79774674988087, -9.34403037988087, -9.34403037988087, -9.34403037988087, -9.34403037988087, -9.34403037988087, -9.34403037988087, -9.34403037988087, -9.34403037988087, -8.70895437988087, -9.34403037988087, -9.34403037988087]
								}, {
									"case":	451,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	452,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	453,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	454,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	455,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	456,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}, {
									"case":	457,
									"scores":	[-10.860318849880871, -10.85361714988087, -11.362476379880871, -11.325051979880872, -11.362476379880871, -10.21854114988087, -10.85361714988087, -10.85361714988087, -11.362476379880871, -10.85361714988087, -10.85361714988087, -11.144703349880871, -11.151405049880871, -10.860318849880871, -10.85361714988087, -10.85361714988087, -10.816192749880869, -11.362476379880871, -10.816192749880869, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -11.362476379880871, -10.727400379880871, -11.362476379880871, -11.362476379880871]
								}]
						}, {
							"switch":	3,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	207,
							"begin_column":	5,
							"end_line":	207,
							"end_column":	11,
							"patch_codes":	["if (!__is_neg(\"\", \"L207\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    usage();\n", "{\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.52283840988087, -7.17404920988087, -7.72507018988087, -8.52802228988087, -7.72507018988087, -6.81448092488087, -7.17404920988087, -7.17404920988087, -7.72507018988087, -7.17404920988087, -7.17404920988087, -7.48466850988087, -7.83345770988087, -7.52283840988087, -7.17404920988087, -7.17404920988087, -7.97700130988087, -7.72507018988087, -7.97700130988087, -7.72507018988087, -7.72507018988087, -7.72507018988087, -7.72507018988087, -7.72507018988087, -7.72507018988087, -7.72507018988087, -7.72507018988087, -7.36550190488087, -7.72507018988087, -7.72507018988087]
								}, {
									"case":	2,
									"scores":	[-6.74040202988087]
								}]
						}]
				}, {
					"line":	205,
					"switches":	[{
							"switch":	0,
							"types":	[[], [], [], [], [], [], [], [], [], [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], [], [], [], [], [], []],
							"begin_line":	206,
							"begin_column":	2,
							"end_line":	206,
							"end_column":	2,
							"patch_codes":	["(mp)++", "(optarg)++", "TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, setting subdirectory at %lu\", diroff)", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, setting subdirectory at %lu\", diroff)", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "bias = openSrcImage((argv))", "comma = (-1)", "comma = (-2)", "comma = (-3)", "comma = (-5)", "comma = (-7)", "comma = (0)", "comma = (1)", "comma = (10)", "comma = (2)", "comma = (277)", "comma = (3)", "comma = (5)", "comma = (7)", "comma = (mp)[1]", "comma = (optarg)[1]", "compression = (-1)", "compression = (-2)", "compression = (-3)", "compression = (-5)", "compression = (-7)", "compression = (0)", "compression = (1)", "compression = (10)", "compression = (2)", "compression = (277)", "compression = (3)", "compression = (5)", "compression = (7)", "compression = (defconfig)", "compression = (deffillorder)", "config = (-1)", "config = (-2)", "config = (-3)", "config = (-5)", "config = (-7)", "config = (0)", "config = (1)", "config = (10)", "config = (2)", "config = (277)", "config = (3)", "config = (5)", "config = (7)", "config = (defconfig)", "config = (deffillorder)", "defcompression = (-1)", "defcompression = (-2)", "defcompression = (-3)", "defcompression = (-5)", "defcompression = (-7)", "defcompression = (0)", "defcompression = (1)", "defcompression = (10)", "defcompression = (2)", "defcompression = (277)", "defcompression = (3)", "defcompression = (5)", "defcompression = (7)", "defcompression = (defconfig)", "defcompression = (deffillorder)", "defconfig = (-1)", "defconfig = (-2)", "defconfig = (-3)", "defconfig = (-5)", "defconfig = (-7)", "defconfig = (0)", "defconfig = (1)", "defconfig = (10)", "defconfig = (2)", "defconfig = (277)", "defconfig = (3)", "defconfig = (5)", "defconfig = (7)", "defconfig = (defconfig)", "defconfig = (deffillorder)", "deffillorder = (-1)", "deffillorder = (-2)", "deffillorder = (-3)", "deffillorder = (-5)", "deffillorder = (-7)", "deffillorder = (0)", "deffillorder = (1)", "deffillorder = (10)", "deffillorder = (2)", "deffillorder = (277)", "deffillorder = (3)", "deffillorder = (5)", "deffillorder = (7)", "deffillorder = (defconfig)", "deffillorder = (deffillorder)", "defg3opts = (-1)", "defg3opts = (-2)", "defg3opts = (-3)", "defg3opts = (-5)", "defg3opts = (-7)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (10)", "defg3opts = (2)", "defg3opts = (277)", "defg3opts = (3)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (defrowsperstrip)", "defg3opts = (deftilelength)", "defg3opts = (deftilewidth)", "defpredictor = (-1)", "defpredictor = (-2)", "defpredictor = (-3)", "defpredictor = (-5)", "defpredictor = (-7)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (10)", "defpredictor = (2)", "defpredictor = (277)", "defpredictor = (3)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (defconfig)", "defpredictor = (deffillorder)", "defpredictor = atoi((mp) + 1)", "defpredictor = atoi((optarg) + 1)", "deftilelength = (-1)", "deftilelength = (-2)", "deftilelength = (-3)", "deftilelength = (-5)", "deftilelength = (-7)", "deftilelength = (0)", "deftilelength = (1)", "deftilelength = (10)", "deftilelength = (2)", "deftilelength = (277)", "deftilelength = (3)", "deftilelength = (5)", "deftilelength = (7)", "deftilelength = (defrowsperstrip)", "deftilelength = (deftilelength)", "deftilelength = (deftilewidth)", "deftilelength = atoi((mp))", "deftilelength = atoi((optarg))", "deftilewidth = (-1)", "deftilewidth = (-2)", "deftilewidth = (-3)", "deftilewidth = (-5)", "deftilewidth = (-7)", "deftilewidth = (0)", "deftilewidth = (1)", "deftilewidth = (10)", "deftilewidth = (2)", "deftilewidth = (277)", "deftilewidth = (3)", "deftilewidth = (5)", "deftilewidth = (7)", "deftilewidth = (defrowsperstrip)", "deftilewidth = (deftilelength)", "deftilewidth = (deftilewidth)", "deftilewidth = atoi((mp))", "deftilewidth = atoi((optarg))", "fillorder = (-1)", "fillorder = (-2)", "fillorder = (-3)", "fillorder = (-5)", "fillorder = (-7)", "fillorder = (0)", "fillorder = (1)", "fillorder = (10)", "fillorder = (2)", "fillorder = (277)", "fillorder = (3)", "fillorder = (5)", "fillorder = (7)", "fillorder = (defconfig)", "fillorder = (deffillorder)", "g3opts = (-1)", "g3opts = (-2)", "g3opts = (-3)", "g3opts = (-5)", "g3opts = (-7)", "g3opts = (0)", "g3opts = (1)", "g3opts = (10)", "g3opts = (2)", "g3opts = (277)", "g3opts = (3)", "g3opts = (5)", "g3opts = (7)", "g3opts = (defrowsperstrip)", "g3opts = (deftilelength)", "g3opts = (deftilewidth)", "in = (in)", "in = (out)", "in = openSrcImage(&(mp))", "in = openSrcImage(&(optarg))", "jpegcolormode = (-1)", "jpegcolormode = (-2)", "jpegcolormode = (-3)", "jpegcolormode = (-5)", "jpegcolormode = (-7)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (10)", "jpegcolormode = (2)", "jpegcolormode = (277)", "jpegcolormode = (3)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (argc)", "jpegcolormode = (c)", "jpegcolormode = (optind)", "orientation = (-1)", "orientation = (-2)", "orientation = (-3)", "orientation = (-5)", "orientation = (-7)", "orientation = (0)", "orientation = (1)", "orientation = (10)", "orientation = (2)", "orientation = (277)", "orientation = (3)", "orientation = (5)", "orientation = (7)", "orientation = (defconfig)", "orientation = (deffillorder)", "out = (in)", "out = (out)", "out = TIFFOpen((argv)[argc - 1], mode)", "outtiled = (-1)", "outtiled = (-2)", "outtiled = (-3)", "outtiled = (-5)", "outtiled = (-7)", "outtiled = (0)", "outtiled = (1)", "outtiled = (10)", "outtiled = (2)", "outtiled = (277)", "outtiled = (3)", "outtiled = (5)", "outtiled = (7)", "outtiled = (argc)", "outtiled = (c)", "outtiled = (optind)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (-2)", "pageNum = (-3)", "pageNum = (-5)", "pageNum = (-7)", "pageNum = (0)", "pageNum = (1)", "pageNum = (10)", "pageNum = (2)", "pageNum = (277)", "pageNum = (3)", "pageNum = (5)", "pageNum = (7)", "pageNum = (argc)", "pageNum = (c)", "pageNum = (optind)", "predictor = (-1)", "predictor = (-2)", "predictor = (-3)", "predictor = (-5)", "predictor = (-7)", "predictor = (0)", "predictor = (1)", "predictor = (10)", "predictor = (2)", "predictor = (277)", "predictor = (3)", "predictor = (5)", "predictor = (7)", "predictor = (defconfig)", "predictor = (deffillorder)", "processG3Options((mp))", "processG3Options((optarg))", "quality = (-1)", "quality = (-2)", "quality = (-3)", "quality = (-5)", "quality = (-7)", "quality = (0)", "quality = (1)", "quality = (10)", "quality = (2)", "quality = (277)", "quality = (3)", "quality = (5)", "quality = (7)", "quality = (argc)", "quality = (c)", "quality = (optind)", "quality = atoi((mp) + 1)", "quality = atoi((optarg) + 1)", "rowsperstrip = (-1)", "rowsperstrip = (-2)", "rowsperstrip = (-3)", "rowsperstrip = (-5)", "rowsperstrip = (-7)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (10)", "rowsperstrip = (2)", "rowsperstrip = (277)", "rowsperstrip = (3)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (defrowsperstrip)", "rowsperstrip = (deftilelength)", "rowsperstrip = (deftilewidth)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (-2)", "tilelength = (-3)", "tilelength = (-5)", "tilelength = (-7)", "tilelength = (0)", "tilelength = (1)", "tilelength = (10)", "tilelength = (2)", "tilelength = (277)", "tilelength = (3)", "tilelength = (5)", "tilelength = (7)", "tilelength = (defrowsperstrip)", "tilelength = (deftilelength)", "tilelength = (deftilewidth)", "tilewidth = (-1)", "tilewidth = (-2)", "tilewidth = (-3)", "tilewidth = (-5)", "tilewidth = (-7)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (10)", "tilewidth = (2)", "tilewidth = (277)", "tilewidth = (3)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (defrowsperstrip)", "tilewidth = (deftilelength)", "tilewidth = (deftilewidth)", "(void)TIFFClose(out)", "TIFFClose(in)", "TIFFClose(out)", "TIFFError(TIFFFileName(in), \"Error, setting subdirectory at %lu\", diroff)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "comma = optarg[1]", "compression = defcompression", "config = defconfig", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defconfig = 1", "defconfig = 2", "deffillorder = 1", "deffillorder = 2", "defg3opts = 0", "deftilelength = atoi(optarg)", "deftilewidth = atoi(optarg)", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "fillorder = deffillorder", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "out = TIFFOpen(argv[argc - 1], mode)", "pageNum = -1", "predictor = defpredictor", "rowsperstrip = defrowsperstrip", "tilelength = deftilelength", "tilewidth = deftilewidth", "usage()"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.74040202988087]
								}, {
									"case":	2,
									"scores":	[-6.74040202988087]
								}, {
									"case":	3,
									"scores":	[-6.74040202988087]
								}, {
									"case":	4,
									"scores":	[-6.74040202988087]
								}, {
									"case":	5,
									"scores":	[-6.74040202988087]
								}, {
									"case":	6,
									"scores":	[-6.74040202988087]
								}, {
									"case":	7,
									"scores":	[-6.74040202988087]
								}, {
									"case":	8,
									"scores":	[-6.74040202988087]
								}, {
									"case":	9,
									"scores":	[-6.74040202988087]
								}, {
									"case":	10,
									"scores":	[-6.74040202988087]
								}, {
									"case":	11,
									"scores":	[-6.74040202988087]
								}, {
									"case":	12,
									"scores":	[-6.74040202988087]
								}, {
									"case":	13,
									"scores":	[-6.74040202988087]
								}, {
									"case":	14,
									"scores":	[-6.74040202988087]
								}, {
									"case":	15,
									"scores":	[-6.74040202988087]
								}, {
									"case":	16,
									"scores":	[-6.74040202988087]
								}, {
									"case":	17,
									"scores":	[-6.74040202988087]
								}, {
									"case":	18,
									"scores":	[-6.74040202988087]
								}, {
									"case":	19,
									"scores":	[-6.74040202988087]
								}, {
									"case":	20,
									"scores":	[-6.74040202988087]
								}, {
									"case":	21,
									"scores":	[-6.74040202988087]
								}, {
									"case":	22,
									"scores":	[-6.74040202988087]
								}, {
									"case":	23,
									"scores":	[-6.74040202988087]
								}, {
									"case":	24,
									"scores":	[-6.74040202988087]
								}, {
									"case":	25,
									"scores":	[-6.74040202988087]
								}, {
									"case":	26,
									"scores":	[-6.74040202988087]
								}, {
									"case":	27,
									"scores":	[-6.74040202988087]
								}, {
									"case":	28,
									"scores":	[-6.74040202988087]
								}, {
									"case":	29,
									"scores":	[-6.74040202988087]
								}, {
									"case":	30,
									"scores":	[-6.74040202988087]
								}, {
									"case":	31,
									"scores":	[-6.74040202988087]
								}, {
									"case":	32,
									"scores":	[-6.74040202988087]
								}, {
									"case":	33,
									"scores":	[-6.74040202988087]
								}, {
									"case":	34,
									"scores":	[-6.74040202988087]
								}, {
									"case":	35,
									"scores":	[-6.74040202988087]
								}, {
									"case":	36,
									"scores":	[-6.74040202988087]
								}, {
									"case":	37,
									"scores":	[-6.74040202988087]
								}, {
									"case":	38,
									"scores":	[-6.74040202988087]
								}, {
									"case":	39,
									"scores":	[-6.74040202988087]
								}, {
									"case":	40,
									"scores":	[-6.74040202988087]
								}, {
									"case":	41,
									"scores":	[-6.74040202988087]
								}, {
									"case":	42,
									"scores":	[-6.74040202988087]
								}, {
									"case":	43,
									"scores":	[-6.74040202988087]
								}, {
									"case":	44,
									"scores":	[-6.74040202988087]
								}, {
									"case":	45,
									"scores":	[-6.74040202988087]
								}, {
									"case":	46,
									"scores":	[-6.74040202988087]
								}, {
									"case":	47,
									"scores":	[-6.74040202988087]
								}, {
									"case":	48,
									"scores":	[-6.74040202988087]
								}, {
									"case":	49,
									"scores":	[-6.74040202988087]
								}, {
									"case":	50,
									"scores":	[-6.74040202988087]
								}, {
									"case":	51,
									"scores":	[-6.74040202988087]
								}, {
									"case":	52,
									"scores":	[-6.74040202988087]
								}, {
									"case":	53,
									"scores":	[-6.74040202988087]
								}, {
									"case":	54,
									"scores":	[-6.74040202988087]
								}, {
									"case":	55,
									"scores":	[-6.74040202988087]
								}, {
									"case":	56,
									"scores":	[-6.74040202988087]
								}, {
									"case":	57,
									"scores":	[-6.74040202988087]
								}, {
									"case":	58,
									"scores":	[-6.74040202988087]
								}, {
									"case":	59,
									"scores":	[-6.74040202988087]
								}, {
									"case":	60,
									"scores":	[-6.74040202988087]
								}, {
									"case":	61,
									"scores":	[-6.74040202988087]
								}, {
									"case":	62,
									"scores":	[-6.74040202988087]
								}, {
									"case":	63,
									"scores":	[-6.74040202988087]
								}, {
									"case":	64,
									"scores":	[-6.74040202988087]
								}, {
									"case":	65,
									"scores":	[-6.74040202988087]
								}, {
									"case":	66,
									"scores":	[-6.74040202988087]
								}, {
									"case":	67,
									"scores":	[-6.74040202988087]
								}, {
									"case":	68,
									"scores":	[-6.74040202988087]
								}, {
									"case":	69,
									"scores":	[-6.74040202988087]
								}, {
									"case":	70,
									"scores":	[-6.74040202988087]
								}, {
									"case":	71,
									"scores":	[-6.74040202988087]
								}, {
									"case":	72,
									"scores":	[-6.74040202988087]
								}, {
									"case":	73,
									"scores":	[-6.74040202988087]
								}, {
									"case":	74,
									"scores":	[-6.74040202988087]
								}, {
									"case":	75,
									"scores":	[-6.74040202988087]
								}, {
									"case":	76,
									"scores":	[-6.74040202988087]
								}, {
									"case":	77,
									"scores":	[-6.74040202988087]
								}, {
									"case":	78,
									"scores":	[-6.74040202988087]
								}, {
									"case":	79,
									"scores":	[-6.74040202988087]
								}, {
									"case":	80,
									"scores":	[-6.74040202988087]
								}, {
									"case":	81,
									"scores":	[-6.74040202988087]
								}, {
									"case":	82,
									"scores":	[-6.74040202988087]
								}, {
									"case":	83,
									"scores":	[-6.74040202988087]
								}, {
									"case":	84,
									"scores":	[-6.74040202988087]
								}, {
									"case":	85,
									"scores":	[-6.74040202988087]
								}, {
									"case":	86,
									"scores":	[-6.74040202988087]
								}, {
									"case":	87,
									"scores":	[-6.74040202988087]
								}, {
									"case":	88,
									"scores":	[-6.74040202988087]
								}, {
									"case":	89,
									"scores":	[-6.74040202988087]
								}, {
									"case":	90,
									"scores":	[-6.74040202988087]
								}, {
									"case":	91,
									"scores":	[-6.74040202988087]
								}, {
									"case":	92,
									"scores":	[-6.74040202988087]
								}, {
									"case":	93,
									"scores":	[-6.74040202988087]
								}, {
									"case":	94,
									"scores":	[-6.74040202988087]
								}, {
									"case":	95,
									"scores":	[-6.74040202988087]
								}, {
									"case":	96,
									"scores":	[-6.74040202988087]
								}, {
									"case":	97,
									"scores":	[-6.74040202988087]
								}, {
									"case":	98,
									"scores":	[-6.74040202988087]
								}, {
									"case":	99,
									"scores":	[-6.74040202988087]
								}, {
									"case":	100,
									"scores":	[-6.74040202988087]
								}, {
									"case":	101,
									"scores":	[-6.74040202988087]
								}, {
									"case":	102,
									"scores":	[-6.74040202988087]
								}, {
									"case":	103,
									"scores":	[-6.74040202988087]
								}, {
									"case":	104,
									"scores":	[-6.74040202988087]
								}, {
									"case":	105,
									"scores":	[-6.74040202988087]
								}, {
									"case":	106,
									"scores":	[-6.74040202988087]
								}, {
									"case":	107,
									"scores":	[-6.74040202988087]
								}, {
									"case":	108,
									"scores":	[-6.74040202988087]
								}, {
									"case":	109,
									"scores":	[-6.74040202988087]
								}, {
									"case":	110,
									"scores":	[-6.74040202988087]
								}, {
									"case":	111,
									"scores":	[-6.74040202988087]
								}, {
									"case":	112,
									"scores":	[-6.74040202988087]
								}, {
									"case":	113,
									"scores":	[-6.74040202988087]
								}, {
									"case":	114,
									"scores":	[-6.74040202988087]
								}, {
									"case":	115,
									"scores":	[-6.74040202988087]
								}, {
									"case":	116,
									"scores":	[-6.74040202988087]
								}, {
									"case":	117,
									"scores":	[-6.74040202988087]
								}, {
									"case":	118,
									"scores":	[-6.74040202988087]
								}, {
									"case":	119,
									"scores":	[-6.74040202988087]
								}, {
									"case":	120,
									"scores":	[-6.74040202988087]
								}, {
									"case":	121,
									"scores":	[-6.74040202988087]
								}, {
									"case":	122,
									"scores":	[-6.74040202988087]
								}, {
									"case":	123,
									"scores":	[-6.74040202988087]
								}, {
									"case":	124,
									"scores":	[-6.74040202988087]
								}, {
									"case":	125,
									"scores":	[-6.74040202988087]
								}, {
									"case":	126,
									"scores":	[-6.74040202988087]
								}, {
									"case":	127,
									"scores":	[-6.74040202988087]
								}, {
									"case":	128,
									"scores":	[-6.74040202988087]
								}, {
									"case":	129,
									"scores":	[-6.74040202988087]
								}, {
									"case":	130,
									"scores":	[-6.74040202988087]
								}, {
									"case":	131,
									"scores":	[-6.74040202988087]
								}, {
									"case":	132,
									"scores":	[-6.74040202988087]
								}, {
									"case":	133,
									"scores":	[-6.74040202988087]
								}, {
									"case":	134,
									"scores":	[-6.74040202988087]
								}, {
									"case":	135,
									"scores":	[-6.74040202988087]
								}, {
									"case":	136,
									"scores":	[-6.74040202988087]
								}, {
									"case":	137,
									"scores":	[-6.74040202988087]
								}, {
									"case":	138,
									"scores":	[-6.74040202988087]
								}, {
									"case":	139,
									"scores":	[-6.74040202988087]
								}, {
									"case":	140,
									"scores":	[-6.74040202988087]
								}, {
									"case":	141,
									"scores":	[-6.74040202988087]
								}, {
									"case":	142,
									"scores":	[-6.74040202988087]
								}, {
									"case":	143,
									"scores":	[-6.74040202988087]
								}, {
									"case":	144,
									"scores":	[-6.74040202988087]
								}, {
									"case":	145,
									"scores":	[-6.74040202988087]
								}, {
									"case":	146,
									"scores":	[-6.74040202988087]
								}, {
									"case":	147,
									"scores":	[-6.74040202988087]
								}, {
									"case":	148,
									"scores":	[-6.74040202988087]
								}, {
									"case":	149,
									"scores":	[-6.74040202988087]
								}, {
									"case":	150,
									"scores":	[-6.74040202988087]
								}, {
									"case":	151,
									"scores":	[-6.74040202988087]
								}, {
									"case":	152,
									"scores":	[-6.74040202988087]
								}, {
									"case":	153,
									"scores":	[-6.74040202988087]
								}, {
									"case":	154,
									"scores":	[-6.74040202988087]
								}, {
									"case":	155,
									"scores":	[-6.74040202988087]
								}, {
									"case":	156,
									"scores":	[-6.74040202988087]
								}, {
									"case":	157,
									"scores":	[-6.74040202988087]
								}, {
									"case":	158,
									"scores":	[-6.74040202988087]
								}, {
									"case":	159,
									"scores":	[-6.74040202988087]
								}, {
									"case":	160,
									"scores":	[-6.74040202988087]
								}, {
									"case":	161,
									"scores":	[-6.74040202988087]
								}, {
									"case":	162,
									"scores":	[-6.74040202988087]
								}, {
									"case":	163,
									"scores":	[-6.74040202988087]
								}, {
									"case":	164,
									"scores":	[-6.74040202988087]
								}, {
									"case":	165,
									"scores":	[-6.74040202988087]
								}, {
									"case":	166,
									"scores":	[-6.74040202988087]
								}, {
									"case":	167,
									"scores":	[-6.74040202988087]
								}, {
									"case":	168,
									"scores":	[-6.74040202988087]
								}, {
									"case":	169,
									"scores":	[-6.74040202988087]
								}, {
									"case":	170,
									"scores":	[-6.74040202988087]
								}, {
									"case":	171,
									"scores":	[-6.74040202988087]
								}, {
									"case":	172,
									"scores":	[-6.74040202988087]
								}, {
									"case":	173,
									"scores":	[-6.74040202988087]
								}, {
									"case":	174,
									"scores":	[-6.74040202988087]
								}, {
									"case":	175,
									"scores":	[-6.74040202988087]
								}, {
									"case":	176,
									"scores":	[-6.74040202988087]
								}, {
									"case":	177,
									"scores":	[-6.74040202988087]
								}, {
									"case":	178,
									"scores":	[-6.74040202988087]
								}, {
									"case":	179,
									"scores":	[-6.74040202988087]
								}, {
									"case":	180,
									"scores":	[-6.74040202988087]
								}, {
									"case":	181,
									"scores":	[-6.74040202988087]
								}, {
									"case":	182,
									"scores":	[-6.74040202988087]
								}, {
									"case":	183,
									"scores":	[-6.74040202988087]
								}, {
									"case":	184,
									"scores":	[-6.74040202988087]
								}, {
									"case":	185,
									"scores":	[-6.74040202988087]
								}, {
									"case":	186,
									"scores":	[-6.74040202988087]
								}, {
									"case":	187,
									"scores":	[-6.74040202988087]
								}, {
									"case":	188,
									"scores":	[-6.74040202988087]
								}, {
									"case":	189,
									"scores":	[-6.74040202988087]
								}, {
									"case":	190,
									"scores":	[-6.74040202988087]
								}, {
									"case":	191,
									"scores":	[-6.74040202988087]
								}, {
									"case":	192,
									"scores":	[-6.74040202988087]
								}, {
									"case":	193,
									"scores":	[-6.74040202988087]
								}, {
									"case":	194,
									"scores":	[-6.74040202988087]
								}, {
									"case":	195,
									"scores":	[-6.74040202988087]
								}, {
									"case":	196,
									"scores":	[-6.74040202988087]
								}, {
									"case":	197,
									"scores":	[-6.74040202988087]
								}, {
									"case":	198,
									"scores":	[-6.74040202988087]
								}, {
									"case":	199,
									"scores":	[-6.74040202988087]
								}, {
									"case":	200,
									"scores":	[-6.74040202988087]
								}, {
									"case":	201,
									"scores":	[-6.74040202988087]
								}, {
									"case":	202,
									"scores":	[-6.74040202988087]
								}, {
									"case":	203,
									"scores":	[-6.74040202988087]
								}, {
									"case":	204,
									"scores":	[-6.74040202988087]
								}, {
									"case":	205,
									"scores":	[-6.74040202988087]
								}, {
									"case":	206,
									"scores":	[-6.74040202988087]
								}, {
									"case":	207,
									"scores":	[-6.74040202988087]
								}, {
									"case":	208,
									"scores":	[-6.74040202988087]
								}, {
									"case":	209,
									"scores":	[-6.74040202988087]
								}, {
									"case":	210,
									"scores":	[-6.74040202988087]
								}, {
									"case":	211,
									"scores":	[-6.74040202988087]
								}, {
									"case":	212,
									"scores":	[-6.74040202988087]
								}, {
									"case":	213,
									"scores":	[-6.74040202988087]
								}, {
									"case":	214,
									"scores":	[-6.74040202988087]
								}, {
									"case":	215,
									"scores":	[-6.74040202988087]
								}, {
									"case":	216,
									"scores":	[-6.74040202988087]
								}, {
									"case":	217,
									"scores":	[-6.74040202988087]
								}, {
									"case":	218,
									"scores":	[-6.74040202988087]
								}, {
									"case":	219,
									"scores":	[-6.74040202988087]
								}, {
									"case":	220,
									"scores":	[-6.74040202988087]
								}, {
									"case":	221,
									"scores":	[-6.74040202988087]
								}, {
									"case":	222,
									"scores":	[-6.74040202988087]
								}, {
									"case":	223,
									"scores":	[-6.74040202988087]
								}, {
									"case":	224,
									"scores":	[-6.74040202988087]
								}, {
									"case":	225,
									"scores":	[-6.74040202988087]
								}, {
									"case":	226,
									"scores":	[-6.74040202988087]
								}, {
									"case":	227,
									"scores":	[-6.74040202988087]
								}, {
									"case":	228,
									"scores":	[-6.74040202988087]
								}, {
									"case":	229,
									"scores":	[-6.74040202988087]
								}, {
									"case":	230,
									"scores":	[-6.74040202988087]
								}, {
									"case":	231,
									"scores":	[-6.74040202988087]
								}, {
									"case":	232,
									"scores":	[-6.74040202988087]
								}, {
									"case":	233,
									"scores":	[-6.74040202988087]
								}, {
									"case":	234,
									"scores":	[-6.74040202988087]
								}, {
									"case":	235,
									"scores":	[-6.74040202988087]
								}, {
									"case":	236,
									"scores":	[-6.74040202988087]
								}, {
									"case":	237,
									"scores":	[-6.74040202988087]
								}, {
									"case":	238,
									"scores":	[-6.74040202988087]
								}, {
									"case":	239,
									"scores":	[-6.74040202988087]
								}, {
									"case":	240,
									"scores":	[-6.74040202988087]
								}, {
									"case":	241,
									"scores":	[-6.74040202988087]
								}, {
									"case":	242,
									"scores":	[-6.74040202988087]
								}, {
									"case":	243,
									"scores":	[-6.74040202988087]
								}, {
									"case":	244,
									"scores":	[-6.74040202988087]
								}, {
									"case":	245,
									"scores":	[-6.74040202988087]
								}, {
									"case":	246,
									"scores":	[-6.74040202988087]
								}, {
									"case":	247,
									"scores":	[-6.74040202988087]
								}, {
									"case":	248,
									"scores":	[-6.74040202988087]
								}, {
									"case":	249,
									"scores":	[-6.74040202988087]
								}, {
									"case":	250,
									"scores":	[-6.74040202988087]
								}, {
									"case":	251,
									"scores":	[-6.74040202988087]
								}, {
									"case":	252,
									"scores":	[-6.74040202988087]
								}, {
									"case":	253,
									"scores":	[-6.74040202988087]
								}, {
									"case":	254,
									"scores":	[-6.74040202988087]
								}, {
									"case":	255,
									"scores":	[-6.74040202988087]
								}, {
									"case":	256,
									"scores":	[-6.74040202988087]
								}, {
									"case":	257,
									"scores":	[-6.74040202988087]
								}, {
									"case":	258,
									"scores":	[-6.74040202988087]
								}, {
									"case":	259,
									"scores":	[-6.74040202988087]
								}, {
									"case":	260,
									"scores":	[-6.74040202988087]
								}, {
									"case":	261,
									"scores":	[-6.74040202988087]
								}, {
									"case":	262,
									"scores":	[-6.74040202988087]
								}, {
									"case":	263,
									"scores":	[-6.74040202988087]
								}, {
									"case":	264,
									"scores":	[-6.74040202988087]
								}, {
									"case":	265,
									"scores":	[-6.74040202988087]
								}, {
									"case":	266,
									"scores":	[-6.74040202988087]
								}, {
									"case":	267,
									"scores":	[-6.74040202988087]
								}, {
									"case":	268,
									"scores":	[-6.74040202988087]
								}, {
									"case":	269,
									"scores":	[-6.74040202988087]
								}, {
									"case":	270,
									"scores":	[-6.74040202988087]
								}, {
									"case":	271,
									"scores":	[-6.74040202988087]
								}, {
									"case":	272,
									"scores":	[-6.74040202988087]
								}, {
									"case":	273,
									"scores":	[-6.74040202988087]
								}, {
									"case":	274,
									"scores":	[-6.74040202988087]
								}, {
									"case":	275,
									"scores":	[-6.74040202988087]
								}, {
									"case":	276,
									"scores":	[-6.74040202988087]
								}, {
									"case":	277,
									"scores":	[-6.74040202988087]
								}, {
									"case":	278,
									"scores":	[-6.74040202988087]
								}, {
									"case":	279,
									"scores":	[-6.74040202988087]
								}, {
									"case":	280,
									"scores":	[-6.74040202988087]
								}, {
									"case":	281,
									"scores":	[-6.74040202988087]
								}, {
									"case":	282,
									"scores":	[-6.74040202988087]
								}, {
									"case":	283,
									"scores":	[-6.74040202988087]
								}, {
									"case":	284,
									"scores":	[-6.74040202988087]
								}, {
									"case":	285,
									"scores":	[-6.74040202988087]
								}, {
									"case":	286,
									"scores":	[-6.74040202988087]
								}, {
									"case":	287,
									"scores":	[-6.74040202988087]
								}, {
									"case":	288,
									"scores":	[-6.74040202988087]
								}, {
									"case":	289,
									"scores":	[-6.74040202988087]
								}, {
									"case":	290,
									"scores":	[-6.74040202988087]
								}, {
									"case":	291,
									"scores":	[-6.74040202988087]
								}, {
									"case":	292,
									"scores":	[-6.74040202988087]
								}, {
									"case":	293,
									"scores":	[-6.74040202988087]
								}, {
									"case":	294,
									"scores":	[-6.74040202988087]
								}, {
									"case":	295,
									"scores":	[-6.74040202988087]
								}, {
									"case":	296,
									"scores":	[-6.74040202988087]
								}, {
									"case":	297,
									"scores":	[-6.74040202988087]
								}, {
									"case":	298,
									"scores":	[-6.74040202988087]
								}, {
									"case":	299,
									"scores":	[-6.74040202988087]
								}, {
									"case":	300,
									"scores":	[-6.74040202988087]
								}, {
									"case":	301,
									"scores":	[-6.74040202988087]
								}, {
									"case":	302,
									"scores":	[-6.74040202988087]
								}, {
									"case":	303,
									"scores":	[-6.74040202988087]
								}, {
									"case":	304,
									"scores":	[-6.74040202988087]
								}, {
									"case":	305,
									"scores":	[-6.74040202988087]
								}, {
									"case":	306,
									"scores":	[-6.74040202988087]
								}, {
									"case":	307,
									"scores":	[-6.74040202988087]
								}, {
									"case":	308,
									"scores":	[-6.74040202988087]
								}, {
									"case":	309,
									"scores":	[-6.74040202988087]
								}, {
									"case":	310,
									"scores":	[-6.74040202988087]
								}, {
									"case":	311,
									"scores":	[-6.74040202988087]
								}, {
									"case":	312,
									"scores":	[-6.74040202988087]
								}, {
									"case":	313,
									"scores":	[-6.74040202988087]
								}, {
									"case":	314,
									"scores":	[-6.74040202988087]
								}, {
									"case":	315,
									"scores":	[-6.74040202988087]
								}, {
									"case":	316,
									"scores":	[-6.74040202988087]
								}, {
									"case":	317,
									"scores":	[-6.74040202988087]
								}, {
									"case":	318,
									"scores":	[-6.74040202988087]
								}, {
									"case":	319,
									"scores":	[-6.74040202988087]
								}, {
									"case":	320,
									"scores":	[-6.74040202988087]
								}, {
									"case":	321,
									"scores":	[-6.74040202988087]
								}, {
									"case":	322,
									"scores":	[-6.74040202988087]
								}, {
									"case":	323,
									"scores":	[-6.74040202988087]
								}, {
									"case":	324,
									"scores":	[-6.74040202988087]
								}, {
									"case":	325,
									"scores":	[-6.74040202988087]
								}, {
									"case":	326,
									"scores":	[-6.74040202988087]
								}, {
									"case":	327,
									"scores":	[-6.74040202988087]
								}, {
									"case":	328,
									"scores":	[-6.74040202988087]
								}, {
									"case":	329,
									"scores":	[-6.74040202988087]
								}, {
									"case":	330,
									"scores":	[-6.74040202988087]
								}, {
									"case":	331,
									"scores":	[-6.74040202988087]
								}, {
									"case":	332,
									"scores":	[-6.74040202988087]
								}, {
									"case":	333,
									"scores":	[-6.74040202988087]
								}, {
									"case":	334,
									"scores":	[-6.74040202988087]
								}, {
									"case":	335,
									"scores":	[-6.74040202988087]
								}, {
									"case":	336,
									"scores":	[-6.74040202988087]
								}, {
									"case":	337,
									"scores":	[-6.74040202988087]
								}, {
									"case":	338,
									"scores":	[-6.74040202988087]
								}, {
									"case":	339,
									"scores":	[-6.74040202988087]
								}, {
									"case":	340,
									"scores":	[-6.74040202988087]
								}, {
									"case":	341,
									"scores":	[-6.74040202988087]
								}, {
									"case":	342,
									"scores":	[-6.74040202988087]
								}, {
									"case":	343,
									"scores":	[-6.74040202988087]
								}, {
									"case":	344,
									"scores":	[-6.74040202988087]
								}, {
									"case":	345,
									"scores":	[-6.74040202988087]
								}, {
									"case":	346,
									"scores":	[-6.74040202988087]
								}, {
									"case":	347,
									"scores":	[-6.74040202988087]
								}, {
									"case":	348,
									"scores":	[-6.74040202988087]
								}, {
									"case":	349,
									"scores":	[-6.74040202988087]
								}, {
									"case":	350,
									"scores":	[-6.74040202988087]
								}, {
									"case":	351,
									"scores":	[-6.74040202988087]
								}, {
									"case":	352,
									"scores":	[-6.74040202988087]
								}, {
									"case":	353,
									"scores":	[-6.74040202988087]
								}, {
									"case":	354,
									"scores":	[-6.74040202988087]
								}, {
									"case":	355,
									"scores":	[-6.74040202988087]
								}, {
									"case":	356,
									"scores":	[-6.74040202988087]
								}, {
									"case":	357,
									"scores":	[-6.74040202988087]
								}, {
									"case":	358,
									"scores":	[-6.74040202988087]
								}, {
									"case":	359,
									"scores":	[-6.74040202988087]
								}, {
									"case":	360,
									"scores":	[-6.74040202988087]
								}, {
									"case":	361,
									"scores":	[-6.74040202988087]
								}, {
									"case":	362,
									"scores":	[-6.74040202988087]
								}, {
									"case":	363,
									"scores":	[-6.74040202988087]
								}, {
									"case":	364,
									"scores":	[-6.74040202988087]
								}, {
									"case":	365,
									"scores":	[-6.74040202988087]
								}, {
									"case":	366,
									"scores":	[-6.74040202988087]
								}, {
									"case":	367,
									"scores":	[-6.74040202988087]
								}, {
									"case":	368,
									"scores":	[-6.74040202988087]
								}, {
									"case":	369,
									"scores":	[-6.74040202988087]
								}, {
									"case":	370,
									"scores":	[-6.74040202988087]
								}, {
									"case":	371,
									"scores":	[-6.74040202988087]
								}, {
									"case":	372,
									"scores":	[-6.74040202988087]
								}, {
									"case":	373,
									"scores":	[-6.74040202988087]
								}, {
									"case":	374,
									"scores":	[-6.74040202988087]
								}, {
									"case":	375,
									"scores":	[-6.74040202988087]
								}, {
									"case":	376,
									"scores":	[-6.74040202988087]
								}, {
									"case":	377,
									"scores":	[-6.74040202988087]
								}, {
									"case":	378,
									"scores":	[-6.74040202988087]
								}, {
									"case":	379,
									"scores":	[-6.74040202988087]
								}, {
									"case":	380,
									"scores":	[-6.74040202988087]
								}, {
									"case":	381,
									"scores":	[-6.74040202988087]
								}, {
									"case":	382,
									"scores":	[-6.74040202988087]
								}, {
									"case":	383,
									"scores":	[-6.74040202988087]
								}, {
									"case":	384,
									"scores":	[-6.74040202988087]
								}, {
									"case":	385,
									"scores":	[-6.74040202988087]
								}, {
									"case":	386,
									"scores":	[-6.74040202988087]
								}, {
									"case":	387,
									"scores":	[-6.74040202988087]
								}, {
									"case":	388,
									"scores":	[-6.74040202988087]
								}, {
									"case":	389,
									"scores":	[-6.74040202988087]
								}, {
									"case":	390,
									"scores":	[-6.74040202988087]
								}, {
									"case":	391,
									"scores":	[-6.74040202988087]
								}, {
									"case":	392,
									"scores":	[-6.74040202988087]
								}, {
									"case":	393,
									"scores":	[-6.74040202988087]
								}, {
									"case":	394,
									"scores":	[-6.74040202988087]
								}, {
									"case":	395,
									"scores":	[-6.74040202988087]
								}, {
									"case":	396,
									"scores":	[-6.74040202988087]
								}, {
									"case":	397,
									"scores":	[-6.74040202988087]
								}, {
									"case":	398,
									"scores":	[-6.74040202988087]
								}, {
									"case":	399,
									"scores":	[-6.74040202988087]
								}, {
									"case":	400,
									"scores":	[-6.74040202988087]
								}, {
									"case":	401,
									"scores":	[-6.74040202988087]
								}, {
									"case":	402,
									"scores":	[-6.74040202988087]
								}, {
									"case":	403,
									"scores":	[-6.74040202988087]
								}, {
									"case":	404,
									"scores":	[-6.74040202988087]
								}, {
									"case":	405,
									"scores":	[-6.74040202988087]
								}, {
									"case":	406,
									"scores":	[-6.74040202988087]
								}, {
									"case":	407,
									"scores":	[-6.74040202988087]
								}, {
									"case":	408,
									"scores":	[-6.74040202988087]
								}, {
									"case":	409,
									"scores":	[-6.74040202988087]
								}, {
									"case":	410,
									"scores":	[-6.74040202988087]
								}, {
									"case":	411,
									"scores":	[-6.74040202988087]
								}, {
									"case":	412,
									"scores":	[-6.74040202988087]
								}, {
									"case":	413,
									"scores":	[-6.74040202988087]
								}, {
									"case":	414,
									"scores":	[-6.74040202988087]
								}, {
									"case":	415,
									"scores":	[-6.74040202988087]
								}, {
									"case":	416,
									"scores":	[-6.74040202988087]
								}, {
									"case":	417,
									"scores":	[-6.74040202988087]
								}, {
									"case":	418,
									"scores":	[-6.74040202988087]
								}, {
									"case":	419,
									"scores":	[-6.74040202988087]
								}, {
									"case":	420,
									"scores":	[-6.74040202988087]
								}, {
									"case":	421,
									"scores":	[-6.74040202988087]
								}, {
									"case":	422,
									"scores":	[-6.74040202988087]
								}, {
									"case":	423,
									"scores":	[-6.74040202988087]
								}, {
									"case":	424,
									"scores":	[-6.74040202988087]
								}, {
									"case":	425,
									"scores":	[-6.74040202988087]
								}, {
									"case":	426,
									"scores":	[-6.74040202988087]
								}, {
									"case":	427,
									"scores":	[-6.74040202988087]
								}, {
									"case":	428,
									"scores":	[-6.74040202988087]
								}, {
									"case":	429,
									"scores":	[-6.74040202988087]
								}, {
									"case":	430,
									"scores":	[-6.74040202988087]
								}, {
									"case":	431,
									"scores":	[-6.74040202988087]
								}, {
									"case":	432,
									"scores":	[-6.74040202988087]
								}, {
									"case":	433,
									"scores":	[-6.74040202988087]
								}, {
									"case":	434,
									"scores":	[-6.74040202988087]
								}, {
									"case":	435,
									"scores":	[-6.74040202988087]
								}, {
									"case":	436,
									"scores":	[-6.74040202988087]
								}, {
									"case":	437,
									"scores":	[-6.74040202988087]
								}, {
									"case":	438,
									"scores":	[-6.74040202988087]
								}, {
									"case":	439,
									"scores":	[-6.74040202988087]
								}, {
									"case":	440,
									"scores":	[-6.74040202988087]
								}, {
									"case":	441,
									"scores":	[-6.74040202988087]
								}, {
									"case":	442,
									"scores":	[-6.74040202988087]
								}, {
									"case":	443,
									"scores":	[-6.74040202988087]
								}]
						}, {
							"switch":	1,
							"types":	[[5], [], [], [], [], [], [], [], [], [], [], [], [1], [], [], [2, 3, 4], []],
							"begin_line":	206,
							"begin_column":	4,
							"end_line":	207,
							"end_column":	11,
							"patch_codes":	["if (__is_neg(\"\", \"L206\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(bias), sizeof (bias), &(ignore), sizeof (ignore), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    usage();\n", "if (!mkstemp(optarg))\n    usage();\n", "if (!processCompressOptions(optarg))\n    usage();\n", "if (!putenv(optarg))\n    usage();\n", "if ((!processCompressOptions(optarg)) && !__is_neg(\"\", \"L206\", 30, &(optarg), sizeof (optarg), &(deffillorder), sizeof (deffillorder), &(bias), sizeof (bias), &(ignore), sizeof (ignore), &(outtiled), sizeof (outtiled), &(deftilelength), sizeof (deftilelength), &(diroff), sizeof (diroff), &(defconfig), sizeof (defconfig), &(comma), sizeof (comma), &(defrowsperstrip), sizeof (defrowsperstrip), &(c), sizeof (c), &(argc), sizeof (argc), &(argv), sizeof (argv), &(mp), sizeof (mp), &(deftilewidth), sizeof (deftilewidth), &(optind), sizeof (optind), &(out), sizeof (out), &(pageNum), sizeof (pageNum), &(in), sizeof (in), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(fillorder), sizeof (fillorder), &(rowsperstrip), sizeof (rowsperstrip), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts)))\n    usage();\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.5378912654281458, -3.9095310654281459, -5.2635041454281462, -4.4605520454281455, -4.4605520454281455, -3.5499627804281459, -3.9095310654281459, -3.9095310654281459, -4.4605520454281455, -3.9095310654281459, -3.9095310654281459, -4.2201503654281458, -4.5689395654281455, -4.2583202654281456, -3.9095310654281459, -3.9095310654281459, -4.7124831654281456, -4.4605520454281455, -4.7124831654281456, -4.4605520454281455, -4.4605520454281455, -4.4605520454281455, -4.4605520454281455, -4.4605520454281455, -4.4605520454281455, -4.4605520454281455, -4.4605520454281455, -4.1009837604281456, -4.4605520454281455, -4.4605520454281455]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-2.925979082428146, -3.2976188824281456, -4.6515919624281459, -3.8486398624281457, -3.8486398624281457, -2.9380505974281457, -3.2976188824281456, -3.2976188824281456, -3.8486398624281457, -3.2976188824281456, -3.2976188824281456, -3.6082381824281455, -3.9570273824281457, -3.6464080824281457, -3.2976188824281456, -3.2976188824281456, -4.1005709824281462, -3.8486398624281457, -4.1005709824281462, -3.8486398624281457, -3.8486398624281457, -3.8486398624281457, -3.8486398624281457, -3.8486398624281457, -3.8486398624281457, -3.8486398624281457, -3.8486398624281457, -3.4890715774281458, -3.8486398624281457, -3.8486398624281457]
								}]
						}]
				}, {
					"line":	271,
					"switches":	[{
							"switch":	4,
							"types":	[[], [], [], [], [444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], [], [], [], [], [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], [], [], [], [], [], []],
							"begin_line":	272,
							"begin_column":	0,
							"end_line":	272,
							"end_column":	0,
							"patch_codes":	["(mp)++", "(optarg)++", "TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, setting subdirectory at %lu\", diroff)", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, setting subdirectory at %lu\", diroff)", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "bias = openSrcImage((argv))", "comma = (-1)", "comma = (-2)", "comma = (-3)", "comma = (-5)", "comma = (-7)", "comma = (0)", "comma = (1)", "comma = (10)", "comma = (2)", "comma = (277)", "comma = (3)", "comma = (5)", "comma = (7)", "comma = (mp)[1]", "comma = (optarg)[1]", "compression = (-1)", "compression = (-2)", "compression = (-3)", "compression = (-5)", "compression = (-7)", "compression = (0)", "compression = (1)", "compression = (10)", "compression = (2)", "compression = (277)", "compression = (3)", "compression = (5)", "compression = (7)", "compression = (defconfig)", "compression = (deffillorder)", "config = (-1)", "config = (-2)", "config = (-3)", "config = (-5)", "config = (-7)", "config = (0)", "config = (1)", "config = (10)", "config = (2)", "config = (277)", "config = (3)", "config = (5)", "config = (7)", "config = (defconfig)", "config = (deffillorder)", "defcompression = (-1)", "defcompression = (-2)", "defcompression = (-3)", "defcompression = (-5)", "defcompression = (-7)", "defcompression = (0)", "defcompression = (1)", "defcompression = (10)", "defcompression = (2)", "defcompression = (277)", "defcompression = (3)", "defcompression = (5)", "defcompression = (7)", "defcompression = (defconfig)", "defcompression = (deffillorder)", "defconfig = (-1)", "defconfig = (-2)", "defconfig = (-3)", "defconfig = (-5)", "defconfig = (-7)", "defconfig = (0)", "defconfig = (1)", "defconfig = (10)", "defconfig = (2)", "defconfig = (277)", "defconfig = (3)", "defconfig = (5)", "defconfig = (7)", "defconfig = (defconfig)", "defconfig = (deffillorder)", "deffillorder = (-1)", "deffillorder = (-2)", "deffillorder = (-3)", "deffillorder = (-5)", "deffillorder = (-7)", "deffillorder = (0)", "deffillorder = (1)", "deffillorder = (10)", "deffillorder = (2)", "deffillorder = (277)", "deffillorder = (3)", "deffillorder = (5)", "deffillorder = (7)", "deffillorder = (defconfig)", "deffillorder = (deffillorder)", "defg3opts = (-1)", "defg3opts = (-2)", "defg3opts = (-3)", "defg3opts = (-5)", "defg3opts = (-7)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (10)", "defg3opts = (2)", "defg3opts = (277)", "defg3opts = (3)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (defrowsperstrip)", "defg3opts = (deftilelength)", "defg3opts = (deftilewidth)", "defpredictor = (-1)", "defpredictor = (-2)", "defpredictor = (-3)", "defpredictor = (-5)", "defpredictor = (-7)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (10)", "defpredictor = (2)", "defpredictor = (277)", "defpredictor = (3)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (defconfig)", "defpredictor = (deffillorder)", "defpredictor = atoi((mp) + 1)", "defpredictor = atoi((optarg) + 1)", "deftilelength = (-1)", "deftilelength = (-2)", "deftilelength = (-3)", "deftilelength = (-5)", "deftilelength = (-7)", "deftilelength = (0)", "deftilelength = (1)", "deftilelength = (10)", "deftilelength = (2)", "deftilelength = (277)", "deftilelength = (3)", "deftilelength = (5)", "deftilelength = (7)", "deftilelength = (defrowsperstrip)", "deftilelength = (deftilelength)", "deftilelength = (deftilewidth)", "deftilelength = atoi((mp))", "deftilelength = atoi((optarg))", "deftilewidth = (-1)", "deftilewidth = (-2)", "deftilewidth = (-3)", "deftilewidth = (-5)", "deftilewidth = (-7)", "deftilewidth = (0)", "deftilewidth = (1)", "deftilewidth = (10)", "deftilewidth = (2)", "deftilewidth = (277)", "deftilewidth = (3)", "deftilewidth = (5)", "deftilewidth = (7)", "deftilewidth = (defrowsperstrip)", "deftilewidth = (deftilelength)", "deftilewidth = (deftilewidth)", "deftilewidth = atoi((mp))", "deftilewidth = atoi((optarg))", "fillorder = (-1)", "fillorder = (-2)", "fillorder = (-3)", "fillorder = (-5)", "fillorder = (-7)", "fillorder = (0)", "fillorder = (1)", "fillorder = (10)", "fillorder = (2)", "fillorder = (277)", "fillorder = (3)", "fillorder = (5)", "fillorder = (7)", "fillorder = (defconfig)", "fillorder = (deffillorder)", "g3opts = (-1)", "g3opts = (-2)", "g3opts = (-3)", "g3opts = (-5)", "g3opts = (-7)", "g3opts = (0)", "g3opts = (1)", "g3opts = (10)", "g3opts = (2)", "g3opts = (277)", "g3opts = (3)", "g3opts = (5)", "g3opts = (7)", "g3opts = (defrowsperstrip)", "g3opts = (deftilelength)", "g3opts = (deftilewidth)", "in = (in)", "in = (out)", "in = openSrcImage(&(mp))", "in = openSrcImage(&(optarg))", "jpegcolormode = (-1)", "jpegcolormode = (-2)", "jpegcolormode = (-3)", "jpegcolormode = (-5)", "jpegcolormode = (-7)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (10)", "jpegcolormode = (2)", "jpegcolormode = (277)", "jpegcolormode = (3)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (argc)", "jpegcolormode = (c)", "jpegcolormode = (optind)", "orientation = (-1)", "orientation = (-2)", "orientation = (-3)", "orientation = (-5)", "orientation = (-7)", "orientation = (0)", "orientation = (1)", "orientation = (10)", "orientation = (2)", "orientation = (277)", "orientation = (3)", "orientation = (5)", "orientation = (7)", "orientation = (defconfig)", "orientation = (deffillorder)", "out = (in)", "out = (out)", "out = TIFFOpen((argv)[argc - 1], mode)", "outtiled = (-1)", "outtiled = (-2)", "outtiled = (-3)", "outtiled = (-5)", "outtiled = (-7)", "outtiled = (0)", "outtiled = (1)", "outtiled = (10)", "outtiled = (2)", "outtiled = (277)", "outtiled = (3)", "outtiled = (5)", "outtiled = (7)", "outtiled = (argc)", "outtiled = (c)", "outtiled = (optind)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (-2)", "pageNum = (-3)", "pageNum = (-5)", "pageNum = (-7)", "pageNum = (0)", "pageNum = (1)", "pageNum = (10)", "pageNum = (2)", "pageNum = (277)", "pageNum = (3)", "pageNum = (5)", "pageNum = (7)", "pageNum = (argc)", "pageNum = (c)", "pageNum = (optind)", "predictor = (-1)", "predictor = (-2)", "predictor = (-3)", "predictor = (-5)", "predictor = (-7)", "predictor = (0)", "predictor = (1)", "predictor = (10)", "predictor = (2)", "predictor = (277)", "predictor = (3)", "predictor = (5)", "predictor = (7)", "predictor = (defconfig)", "predictor = (deffillorder)", "processG3Options((mp))", "processG3Options((optarg))", "quality = (-1)", "quality = (-2)", "quality = (-3)", "quality = (-5)", "quality = (-7)", "quality = (0)", "quality = (1)", "quality = (10)", "quality = (2)", "quality = (277)", "quality = (3)", "quality = (5)", "quality = (7)", "quality = (argc)", "quality = (c)", "quality = (optind)", "quality = atoi((mp) + 1)", "quality = atoi((optarg) + 1)", "rowsperstrip = (-1)", "rowsperstrip = (-2)", "rowsperstrip = (-3)", "rowsperstrip = (-5)", "rowsperstrip = (-7)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (10)", "rowsperstrip = (2)", "rowsperstrip = (277)", "rowsperstrip = (3)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (defrowsperstrip)", "rowsperstrip = (deftilelength)", "rowsperstrip = (deftilewidth)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (-2)", "tilelength = (-3)", "tilelength = (-5)", "tilelength = (-7)", "tilelength = (0)", "tilelength = (1)", "tilelength = (10)", "tilelength = (2)", "tilelength = (277)", "tilelength = (3)", "tilelength = (5)", "tilelength = (7)", "tilelength = (defrowsperstrip)", "tilelength = (deftilelength)", "tilelength = (deftilewidth)", "tilewidth = (-1)", "tilewidth = (-2)", "tilewidth = (-3)", "tilewidth = (-5)", "tilewidth = (-7)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (10)", "tilewidth = (2)", "tilewidth = (277)", "tilewidth = (3)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (defrowsperstrip)", "tilewidth = (deftilelength)", "tilewidth = (deftilewidth)", "(void)TIFFClose(out)", "TIFFClose(in)", "TIFFClose(out)", "TIFFError(TIFFFileName(in), \"Error, setting subdirectory at %lu\", diroff)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "comma = optarg[1]", "compression = defcompression", "config = defconfig", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defconfig = 1", "defconfig = 2", "deffillorder = 1", "deffillorder = 2", "defg3opts = 0", "deftilelength = atoi(optarg)", "deftilewidth = atoi(optarg)", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "fillorder = deffillorder", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "out = TIFFOpen(argv[argc - 1], mode)", "pageNum = -1", "predictor = defpredictor", "rowsperstrip = defrowsperstrip", "tilelength = deftilelength", "tilewidth = deftilewidth", "usage()", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return -1;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return -2;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return -3;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return -5;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return -7;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 0;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 10;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 1;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 277;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 2;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 3;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 5;\n", "if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 7;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.72019932256335]
								}, {
									"case":	2,
									"scores":	[-6.72019932256335]
								}, {
									"case":	3,
									"scores":	[-6.72019932256335]
								}, {
									"case":	4,
									"scores":	[-6.72019932256335]
								}, {
									"case":	5,
									"scores":	[-6.72019932256335]
								}, {
									"case":	6,
									"scores":	[-6.72019932256335]
								}, {
									"case":	7,
									"scores":	[-6.72019932256335]
								}, {
									"case":	8,
									"scores":	[-6.72019932256335]
								}, {
									"case":	9,
									"scores":	[-6.72019932256335]
								}, {
									"case":	10,
									"scores":	[-6.72019932256335]
								}, {
									"case":	11,
									"scores":	[-6.72019932256335]
								}, {
									"case":	12,
									"scores":	[-6.72019932256335]
								}, {
									"case":	13,
									"scores":	[-6.72019932256335]
								}, {
									"case":	14,
									"scores":	[-6.72019932256335]
								}, {
									"case":	15,
									"scores":	[-6.72019932256335]
								}, {
									"case":	16,
									"scores":	[-6.72019932256335]
								}, {
									"case":	17,
									"scores":	[-6.72019932256335]
								}, {
									"case":	18,
									"scores":	[-6.72019932256335]
								}, {
									"case":	19,
									"scores":	[-6.72019932256335]
								}, {
									"case":	20,
									"scores":	[-6.72019932256335]
								}, {
									"case":	21,
									"scores":	[-6.72019932256335]
								}, {
									"case":	22,
									"scores":	[-6.72019932256335]
								}, {
									"case":	23,
									"scores":	[-6.72019932256335]
								}, {
									"case":	24,
									"scores":	[-6.72019932256335]
								}, {
									"case":	25,
									"scores":	[-6.72019932256335]
								}, {
									"case":	26,
									"scores":	[-6.72019932256335]
								}, {
									"case":	27,
									"scores":	[-6.72019932256335]
								}, {
									"case":	28,
									"scores":	[-6.72019932256335]
								}, {
									"case":	29,
									"scores":	[-6.72019932256335]
								}, {
									"case":	30,
									"scores":	[-6.72019932256335]
								}, {
									"case":	31,
									"scores":	[-6.72019932256335]
								}, {
									"case":	32,
									"scores":	[-6.72019932256335]
								}, {
									"case":	33,
									"scores":	[-6.72019932256335]
								}, {
									"case":	34,
									"scores":	[-6.72019932256335]
								}, {
									"case":	35,
									"scores":	[-6.72019932256335]
								}, {
									"case":	36,
									"scores":	[-6.72019932256335]
								}, {
									"case":	37,
									"scores":	[-6.72019932256335]
								}, {
									"case":	38,
									"scores":	[-6.72019932256335]
								}, {
									"case":	39,
									"scores":	[-6.72019932256335]
								}, {
									"case":	40,
									"scores":	[-6.72019932256335]
								}, {
									"case":	41,
									"scores":	[-6.72019932256335]
								}, {
									"case":	42,
									"scores":	[-6.72019932256335]
								}, {
									"case":	43,
									"scores":	[-6.72019932256335]
								}, {
									"case":	44,
									"scores":	[-6.72019932256335]
								}, {
									"case":	45,
									"scores":	[-6.72019932256335]
								}, {
									"case":	46,
									"scores":	[-6.72019932256335]
								}, {
									"case":	47,
									"scores":	[-6.72019932256335]
								}, {
									"case":	48,
									"scores":	[-6.72019932256335]
								}, {
									"case":	49,
									"scores":	[-6.72019932256335]
								}, {
									"case":	50,
									"scores":	[-6.72019932256335]
								}, {
									"case":	51,
									"scores":	[-6.72019932256335]
								}, {
									"case":	52,
									"scores":	[-6.72019932256335]
								}, {
									"case":	53,
									"scores":	[-6.72019932256335]
								}, {
									"case":	54,
									"scores":	[-6.72019932256335]
								}, {
									"case":	55,
									"scores":	[-6.72019932256335]
								}, {
									"case":	56,
									"scores":	[-6.72019932256335]
								}, {
									"case":	57,
									"scores":	[-6.72019932256335]
								}, {
									"case":	58,
									"scores":	[-6.72019932256335]
								}, {
									"case":	59,
									"scores":	[-6.72019932256335]
								}, {
									"case":	60,
									"scores":	[-6.72019932256335]
								}, {
									"case":	61,
									"scores":	[-6.72019932256335]
								}, {
									"case":	62,
									"scores":	[-6.72019932256335]
								}, {
									"case":	63,
									"scores":	[-6.72019932256335]
								}, {
									"case":	64,
									"scores":	[-6.72019932256335]
								}, {
									"case":	65,
									"scores":	[-6.72019932256335]
								}, {
									"case":	66,
									"scores":	[-6.72019932256335]
								}, {
									"case":	67,
									"scores":	[-6.72019932256335]
								}, {
									"case":	68,
									"scores":	[-6.72019932256335]
								}, {
									"case":	69,
									"scores":	[-6.72019932256335]
								}, {
									"case":	70,
									"scores":	[-6.72019932256335]
								}, {
									"case":	71,
									"scores":	[-6.72019932256335]
								}, {
									"case":	72,
									"scores":	[-6.72019932256335]
								}, {
									"case":	73,
									"scores":	[-6.72019932256335]
								}, {
									"case":	74,
									"scores":	[-6.72019932256335]
								}, {
									"case":	75,
									"scores":	[-6.72019932256335]
								}, {
									"case":	76,
									"scores":	[-6.72019932256335]
								}, {
									"case":	77,
									"scores":	[-6.72019932256335]
								}, {
									"case":	78,
									"scores":	[-6.72019932256335]
								}, {
									"case":	79,
									"scores":	[-6.72019932256335]
								}, {
									"case":	80,
									"scores":	[-6.72019932256335]
								}, {
									"case":	81,
									"scores":	[-6.72019932256335]
								}, {
									"case":	82,
									"scores":	[-6.72019932256335]
								}, {
									"case":	83,
									"scores":	[-6.72019932256335]
								}, {
									"case":	84,
									"scores":	[-6.72019932256335]
								}, {
									"case":	85,
									"scores":	[-6.72019932256335]
								}, {
									"case":	86,
									"scores":	[-6.72019932256335]
								}, {
									"case":	87,
									"scores":	[-6.72019932256335]
								}, {
									"case":	88,
									"scores":	[-6.72019932256335]
								}, {
									"case":	89,
									"scores":	[-6.72019932256335]
								}, {
									"case":	90,
									"scores":	[-6.72019932256335]
								}, {
									"case":	91,
									"scores":	[-6.72019932256335]
								}, {
									"case":	92,
									"scores":	[-6.72019932256335]
								}, {
									"case":	93,
									"scores":	[-6.72019932256335]
								}, {
									"case":	94,
									"scores":	[-6.72019932256335]
								}, {
									"case":	95,
									"scores":	[-6.72019932256335]
								}, {
									"case":	96,
									"scores":	[-6.72019932256335]
								}, {
									"case":	97,
									"scores":	[-6.72019932256335]
								}, {
									"case":	98,
									"scores":	[-6.72019932256335]
								}, {
									"case":	99,
									"scores":	[-6.72019932256335]
								}, {
									"case":	100,
									"scores":	[-6.72019932256335]
								}, {
									"case":	101,
									"scores":	[-6.72019932256335]
								}, {
									"case":	102,
									"scores":	[-6.72019932256335]
								}, {
									"case":	103,
									"scores":	[-6.72019932256335]
								}, {
									"case":	104,
									"scores":	[-6.72019932256335]
								}, {
									"case":	105,
									"scores":	[-6.72019932256335]
								}, {
									"case":	106,
									"scores":	[-6.72019932256335]
								}, {
									"case":	107,
									"scores":	[-6.72019932256335]
								}, {
									"case":	108,
									"scores":	[-6.72019932256335]
								}, {
									"case":	109,
									"scores":	[-6.72019932256335]
								}, {
									"case":	110,
									"scores":	[-6.72019932256335]
								}, {
									"case":	111,
									"scores":	[-6.72019932256335]
								}, {
									"case":	112,
									"scores":	[-6.72019932256335]
								}, {
									"case":	113,
									"scores":	[-6.72019932256335]
								}, {
									"case":	114,
									"scores":	[-6.72019932256335]
								}, {
									"case":	115,
									"scores":	[-6.72019932256335]
								}, {
									"case":	116,
									"scores":	[-6.72019932256335]
								}, {
									"case":	117,
									"scores":	[-6.72019932256335]
								}, {
									"case":	118,
									"scores":	[-6.72019932256335]
								}, {
									"case":	119,
									"scores":	[-6.72019932256335]
								}, {
									"case":	120,
									"scores":	[-6.72019932256335]
								}, {
									"case":	121,
									"scores":	[-6.72019932256335]
								}, {
									"case":	122,
									"scores":	[-6.72019932256335]
								}, {
									"case":	123,
									"scores":	[-6.72019932256335]
								}, {
									"case":	124,
									"scores":	[-6.72019932256335]
								}, {
									"case":	125,
									"scores":	[-6.72019932256335]
								}, {
									"case":	126,
									"scores":	[-6.72019932256335]
								}, {
									"case":	127,
									"scores":	[-6.72019932256335]
								}, {
									"case":	128,
									"scores":	[-6.72019932256335]
								}, {
									"case":	129,
									"scores":	[-6.72019932256335]
								}, {
									"case":	130,
									"scores":	[-6.72019932256335]
								}, {
									"case":	131,
									"scores":	[-6.72019932256335]
								}, {
									"case":	132,
									"scores":	[-6.72019932256335]
								}, {
									"case":	133,
									"scores":	[-6.72019932256335]
								}, {
									"case":	134,
									"scores":	[-6.72019932256335]
								}, {
									"case":	135,
									"scores":	[-6.72019932256335]
								}, {
									"case":	136,
									"scores":	[-6.72019932256335]
								}, {
									"case":	137,
									"scores":	[-6.72019932256335]
								}, {
									"case":	138,
									"scores":	[-6.72019932256335]
								}, {
									"case":	139,
									"scores":	[-6.72019932256335]
								}, {
									"case":	140,
									"scores":	[-6.72019932256335]
								}, {
									"case":	141,
									"scores":	[-6.72019932256335]
								}, {
									"case":	142,
									"scores":	[-6.72019932256335]
								}, {
									"case":	143,
									"scores":	[-6.72019932256335]
								}, {
									"case":	144,
									"scores":	[-6.72019932256335]
								}, {
									"case":	145,
									"scores":	[-6.72019932256335]
								}, {
									"case":	146,
									"scores":	[-6.72019932256335]
								}, {
									"case":	147,
									"scores":	[-6.72019932256335]
								}, {
									"case":	148,
									"scores":	[-6.72019932256335]
								}, {
									"case":	149,
									"scores":	[-6.72019932256335]
								}, {
									"case":	150,
									"scores":	[-6.72019932256335]
								}, {
									"case":	151,
									"scores":	[-6.72019932256335]
								}, {
									"case":	152,
									"scores":	[-6.72019932256335]
								}, {
									"case":	153,
									"scores":	[-6.72019932256335]
								}, {
									"case":	154,
									"scores":	[-6.72019932256335]
								}, {
									"case":	155,
									"scores":	[-6.72019932256335]
								}, {
									"case":	156,
									"scores":	[-6.72019932256335]
								}, {
									"case":	157,
									"scores":	[-6.72019932256335]
								}, {
									"case":	158,
									"scores":	[-6.72019932256335]
								}, {
									"case":	159,
									"scores":	[-6.72019932256335]
								}, {
									"case":	160,
									"scores":	[-6.72019932256335]
								}, {
									"case":	161,
									"scores":	[-6.72019932256335]
								}, {
									"case":	162,
									"scores":	[-6.72019932256335]
								}, {
									"case":	163,
									"scores":	[-6.72019932256335]
								}, {
									"case":	164,
									"scores":	[-6.72019932256335]
								}, {
									"case":	165,
									"scores":	[-6.72019932256335]
								}, {
									"case":	166,
									"scores":	[-6.72019932256335]
								}, {
									"case":	167,
									"scores":	[-6.72019932256335]
								}, {
									"case":	168,
									"scores":	[-6.72019932256335]
								}, {
									"case":	169,
									"scores":	[-6.72019932256335]
								}, {
									"case":	170,
									"scores":	[-6.72019932256335]
								}, {
									"case":	171,
									"scores":	[-6.72019932256335]
								}, {
									"case":	172,
									"scores":	[-6.72019932256335]
								}, {
									"case":	173,
									"scores":	[-6.72019932256335]
								}, {
									"case":	174,
									"scores":	[-6.72019932256335]
								}, {
									"case":	175,
									"scores":	[-6.72019932256335]
								}, {
									"case":	176,
									"scores":	[-6.72019932256335]
								}, {
									"case":	177,
									"scores":	[-6.72019932256335]
								}, {
									"case":	178,
									"scores":	[-6.72019932256335]
								}, {
									"case":	179,
									"scores":	[-6.72019932256335]
								}, {
									"case":	180,
									"scores":	[-6.72019932256335]
								}, {
									"case":	181,
									"scores":	[-6.72019932256335]
								}, {
									"case":	182,
									"scores":	[-6.72019932256335]
								}, {
									"case":	183,
									"scores":	[-6.72019932256335]
								}, {
									"case":	184,
									"scores":	[-6.72019932256335]
								}, {
									"case":	185,
									"scores":	[-6.72019932256335]
								}, {
									"case":	186,
									"scores":	[-6.72019932256335]
								}, {
									"case":	187,
									"scores":	[-6.72019932256335]
								}, {
									"case":	188,
									"scores":	[-6.72019932256335]
								}, {
									"case":	189,
									"scores":	[-6.72019932256335]
								}, {
									"case":	190,
									"scores":	[-6.72019932256335]
								}, {
									"case":	191,
									"scores":	[-6.72019932256335]
								}, {
									"case":	192,
									"scores":	[-6.72019932256335]
								}, {
									"case":	193,
									"scores":	[-6.72019932256335]
								}, {
									"case":	194,
									"scores":	[-6.72019932256335]
								}, {
									"case":	195,
									"scores":	[-6.72019932256335]
								}, {
									"case":	196,
									"scores":	[-6.72019932256335]
								}, {
									"case":	197,
									"scores":	[-6.72019932256335]
								}, {
									"case":	198,
									"scores":	[-6.72019932256335]
								}, {
									"case":	199,
									"scores":	[-6.72019932256335]
								}, {
									"case":	200,
									"scores":	[-6.72019932256335]
								}, {
									"case":	201,
									"scores":	[-6.72019932256335]
								}, {
									"case":	202,
									"scores":	[-6.72019932256335]
								}, {
									"case":	203,
									"scores":	[-6.72019932256335]
								}, {
									"case":	204,
									"scores":	[-6.72019932256335]
								}, {
									"case":	205,
									"scores":	[-6.72019932256335]
								}, {
									"case":	206,
									"scores":	[-6.72019932256335]
								}, {
									"case":	207,
									"scores":	[-6.72019932256335]
								}, {
									"case":	208,
									"scores":	[-6.72019932256335]
								}, {
									"case":	209,
									"scores":	[-6.72019932256335]
								}, {
									"case":	210,
									"scores":	[-6.72019932256335]
								}, {
									"case":	211,
									"scores":	[-6.72019932256335]
								}, {
									"case":	212,
									"scores":	[-6.72019932256335]
								}, {
									"case":	213,
									"scores":	[-6.72019932256335]
								}, {
									"case":	214,
									"scores":	[-6.72019932256335]
								}, {
									"case":	215,
									"scores":	[-6.72019932256335]
								}, {
									"case":	216,
									"scores":	[-6.72019932256335]
								}, {
									"case":	217,
									"scores":	[-6.72019932256335]
								}, {
									"case":	218,
									"scores":	[-6.72019932256335]
								}, {
									"case":	219,
									"scores":	[-6.72019932256335]
								}, {
									"case":	220,
									"scores":	[-6.72019932256335]
								}, {
									"case":	221,
									"scores":	[-6.72019932256335]
								}, {
									"case":	222,
									"scores":	[-6.72019932256335]
								}, {
									"case":	223,
									"scores":	[-6.72019932256335]
								}, {
									"case":	224,
									"scores":	[-6.72019932256335]
								}, {
									"case":	225,
									"scores":	[-6.72019932256335]
								}, {
									"case":	226,
									"scores":	[-6.72019932256335]
								}, {
									"case":	227,
									"scores":	[-6.72019932256335]
								}, {
									"case":	228,
									"scores":	[-6.72019932256335]
								}, {
									"case":	229,
									"scores":	[-6.72019932256335]
								}, {
									"case":	230,
									"scores":	[-6.72019932256335]
								}, {
									"case":	231,
									"scores":	[-6.72019932256335]
								}, {
									"case":	232,
									"scores":	[-6.72019932256335]
								}, {
									"case":	233,
									"scores":	[-6.72019932256335]
								}, {
									"case":	234,
									"scores":	[-6.72019932256335]
								}, {
									"case":	235,
									"scores":	[-6.72019932256335]
								}, {
									"case":	236,
									"scores":	[-6.72019932256335]
								}, {
									"case":	237,
									"scores":	[-6.72019932256335]
								}, {
									"case":	238,
									"scores":	[-6.72019932256335]
								}, {
									"case":	239,
									"scores":	[-6.72019932256335]
								}, {
									"case":	240,
									"scores":	[-6.72019932256335]
								}, {
									"case":	241,
									"scores":	[-6.72019932256335]
								}, {
									"case":	242,
									"scores":	[-6.72019932256335]
								}, {
									"case":	243,
									"scores":	[-6.72019932256335]
								}, {
									"case":	244,
									"scores":	[-6.72019932256335]
								}, {
									"case":	245,
									"scores":	[-6.72019932256335]
								}, {
									"case":	246,
									"scores":	[-6.72019932256335]
								}, {
									"case":	247,
									"scores":	[-6.72019932256335]
								}, {
									"case":	248,
									"scores":	[-6.72019932256335]
								}, {
									"case":	249,
									"scores":	[-6.72019932256335]
								}, {
									"case":	250,
									"scores":	[-6.72019932256335]
								}, {
									"case":	251,
									"scores":	[-6.72019932256335]
								}, {
									"case":	252,
									"scores":	[-6.72019932256335]
								}, {
									"case":	253,
									"scores":	[-6.72019932256335]
								}, {
									"case":	254,
									"scores":	[-6.72019932256335]
								}, {
									"case":	255,
									"scores":	[-6.72019932256335]
								}, {
									"case":	256,
									"scores":	[-6.72019932256335]
								}, {
									"case":	257,
									"scores":	[-6.72019932256335]
								}, {
									"case":	258,
									"scores":	[-6.72019932256335]
								}, {
									"case":	259,
									"scores":	[-6.72019932256335]
								}, {
									"case":	260,
									"scores":	[-6.72019932256335]
								}, {
									"case":	261,
									"scores":	[-6.72019932256335]
								}, {
									"case":	262,
									"scores":	[-6.72019932256335]
								}, {
									"case":	263,
									"scores":	[-6.72019932256335]
								}, {
									"case":	264,
									"scores":	[-6.72019932256335]
								}, {
									"case":	265,
									"scores":	[-6.72019932256335]
								}, {
									"case":	266,
									"scores":	[-6.72019932256335]
								}, {
									"case":	267,
									"scores":	[-6.72019932256335]
								}, {
									"case":	268,
									"scores":	[-6.72019932256335]
								}, {
									"case":	269,
									"scores":	[-6.72019932256335]
								}, {
									"case":	270,
									"scores":	[-6.72019932256335]
								}, {
									"case":	271,
									"scores":	[-6.72019932256335]
								}, {
									"case":	272,
									"scores":	[-6.72019932256335]
								}, {
									"case":	273,
									"scores":	[-6.72019932256335]
								}, {
									"case":	274,
									"scores":	[-6.72019932256335]
								}, {
									"case":	275,
									"scores":	[-6.72019932256335]
								}, {
									"case":	276,
									"scores":	[-6.72019932256335]
								}, {
									"case":	277,
									"scores":	[-6.72019932256335]
								}, {
									"case":	278,
									"scores":	[-6.72019932256335]
								}, {
									"case":	279,
									"scores":	[-6.72019932256335]
								}, {
									"case":	280,
									"scores":	[-6.72019932256335]
								}, {
									"case":	281,
									"scores":	[-6.72019932256335]
								}, {
									"case":	282,
									"scores":	[-6.72019932256335]
								}, {
									"case":	283,
									"scores":	[-6.72019932256335]
								}, {
									"case":	284,
									"scores":	[-6.72019932256335]
								}, {
									"case":	285,
									"scores":	[-6.72019932256335]
								}, {
									"case":	286,
									"scores":	[-6.72019932256335]
								}, {
									"case":	287,
									"scores":	[-6.72019932256335]
								}, {
									"case":	288,
									"scores":	[-6.72019932256335]
								}, {
									"case":	289,
									"scores":	[-6.72019932256335]
								}, {
									"case":	290,
									"scores":	[-6.72019932256335]
								}, {
									"case":	291,
									"scores":	[-6.72019932256335]
								}, {
									"case":	292,
									"scores":	[-6.72019932256335]
								}, {
									"case":	293,
									"scores":	[-6.72019932256335]
								}, {
									"case":	294,
									"scores":	[-6.72019932256335]
								}, {
									"case":	295,
									"scores":	[-6.72019932256335]
								}, {
									"case":	296,
									"scores":	[-6.72019932256335]
								}, {
									"case":	297,
									"scores":	[-6.72019932256335]
								}, {
									"case":	298,
									"scores":	[-6.72019932256335]
								}, {
									"case":	299,
									"scores":	[-6.72019932256335]
								}, {
									"case":	300,
									"scores":	[-6.72019932256335]
								}, {
									"case":	301,
									"scores":	[-6.72019932256335]
								}, {
									"case":	302,
									"scores":	[-6.72019932256335]
								}, {
									"case":	303,
									"scores":	[-6.72019932256335]
								}, {
									"case":	304,
									"scores":	[-6.72019932256335]
								}, {
									"case":	305,
									"scores":	[-6.72019932256335]
								}, {
									"case":	306,
									"scores":	[-6.72019932256335]
								}, {
									"case":	307,
									"scores":	[-6.72019932256335]
								}, {
									"case":	308,
									"scores":	[-6.72019932256335]
								}, {
									"case":	309,
									"scores":	[-6.72019932256335]
								}, {
									"case":	310,
									"scores":	[-6.72019932256335]
								}, {
									"case":	311,
									"scores":	[-6.72019932256335]
								}, {
									"case":	312,
									"scores":	[-6.72019932256335]
								}, {
									"case":	313,
									"scores":	[-6.72019932256335]
								}, {
									"case":	314,
									"scores":	[-6.72019932256335]
								}, {
									"case":	315,
									"scores":	[-6.72019932256335]
								}, {
									"case":	316,
									"scores":	[-6.72019932256335]
								}, {
									"case":	317,
									"scores":	[-6.72019932256335]
								}, {
									"case":	318,
									"scores":	[-6.72019932256335]
								}, {
									"case":	319,
									"scores":	[-6.72019932256335]
								}, {
									"case":	320,
									"scores":	[-6.72019932256335]
								}, {
									"case":	321,
									"scores":	[-6.72019932256335]
								}, {
									"case":	322,
									"scores":	[-6.72019932256335]
								}, {
									"case":	323,
									"scores":	[-6.72019932256335]
								}, {
									"case":	324,
									"scores":	[-6.72019932256335]
								}, {
									"case":	325,
									"scores":	[-6.72019932256335]
								}, {
									"case":	326,
									"scores":	[-6.72019932256335]
								}, {
									"case":	327,
									"scores":	[-6.72019932256335]
								}, {
									"case":	328,
									"scores":	[-6.72019932256335]
								}, {
									"case":	329,
									"scores":	[-6.72019932256335]
								}, {
									"case":	330,
									"scores":	[-6.72019932256335]
								}, {
									"case":	331,
									"scores":	[-6.72019932256335]
								}, {
									"case":	332,
									"scores":	[-6.72019932256335]
								}, {
									"case":	333,
									"scores":	[-6.72019932256335]
								}, {
									"case":	334,
									"scores":	[-6.72019932256335]
								}, {
									"case":	335,
									"scores":	[-6.72019932256335]
								}, {
									"case":	336,
									"scores":	[-6.72019932256335]
								}, {
									"case":	337,
									"scores":	[-6.72019932256335]
								}, {
									"case":	338,
									"scores":	[-6.72019932256335]
								}, {
									"case":	339,
									"scores":	[-6.72019932256335]
								}, {
									"case":	340,
									"scores":	[-6.72019932256335]
								}, {
									"case":	341,
									"scores":	[-6.72019932256335]
								}, {
									"case":	342,
									"scores":	[-6.72019932256335]
								}, {
									"case":	343,
									"scores":	[-6.72019932256335]
								}, {
									"case":	344,
									"scores":	[-6.72019932256335]
								}, {
									"case":	345,
									"scores":	[-6.72019932256335]
								}, {
									"case":	346,
									"scores":	[-6.72019932256335]
								}, {
									"case":	347,
									"scores":	[-6.72019932256335]
								}, {
									"case":	348,
									"scores":	[-6.72019932256335]
								}, {
									"case":	349,
									"scores":	[-6.72019932256335]
								}, {
									"case":	350,
									"scores":	[-6.72019932256335]
								}, {
									"case":	351,
									"scores":	[-6.72019932256335]
								}, {
									"case":	352,
									"scores":	[-6.72019932256335]
								}, {
									"case":	353,
									"scores":	[-6.72019932256335]
								}, {
									"case":	354,
									"scores":	[-6.72019932256335]
								}, {
									"case":	355,
									"scores":	[-6.72019932256335]
								}, {
									"case":	356,
									"scores":	[-6.72019932256335]
								}, {
									"case":	357,
									"scores":	[-6.72019932256335]
								}, {
									"case":	358,
									"scores":	[-6.72019932256335]
								}, {
									"case":	359,
									"scores":	[-6.72019932256335]
								}, {
									"case":	360,
									"scores":	[-6.72019932256335]
								}, {
									"case":	361,
									"scores":	[-6.72019932256335]
								}, {
									"case":	362,
									"scores":	[-6.72019932256335]
								}, {
									"case":	363,
									"scores":	[-6.72019932256335]
								}, {
									"case":	364,
									"scores":	[-6.72019932256335]
								}, {
									"case":	365,
									"scores":	[-6.72019932256335]
								}, {
									"case":	366,
									"scores":	[-6.72019932256335]
								}, {
									"case":	367,
									"scores":	[-6.72019932256335]
								}, {
									"case":	368,
									"scores":	[-6.72019932256335]
								}, {
									"case":	369,
									"scores":	[-6.72019932256335]
								}, {
									"case":	370,
									"scores":	[-6.72019932256335]
								}, {
									"case":	371,
									"scores":	[-6.72019932256335]
								}, {
									"case":	372,
									"scores":	[-6.72019932256335]
								}, {
									"case":	373,
									"scores":	[-6.72019932256335]
								}, {
									"case":	374,
									"scores":	[-6.72019932256335]
								}, {
									"case":	375,
									"scores":	[-6.72019932256335]
								}, {
									"case":	376,
									"scores":	[-6.72019932256335]
								}, {
									"case":	377,
									"scores":	[-6.72019932256335]
								}, {
									"case":	378,
									"scores":	[-6.72019932256335]
								}, {
									"case":	379,
									"scores":	[-6.72019932256335]
								}, {
									"case":	380,
									"scores":	[-6.72019932256335]
								}, {
									"case":	381,
									"scores":	[-6.72019932256335]
								}, {
									"case":	382,
									"scores":	[-6.72019932256335]
								}, {
									"case":	383,
									"scores":	[-6.72019932256335]
								}, {
									"case":	384,
									"scores":	[-6.72019932256335]
								}, {
									"case":	385,
									"scores":	[-6.72019932256335]
								}, {
									"case":	386,
									"scores":	[-6.72019932256335]
								}, {
									"case":	387,
									"scores":	[-6.72019932256335]
								}, {
									"case":	388,
									"scores":	[-6.72019932256335]
								}, {
									"case":	389,
									"scores":	[-6.72019932256335]
								}, {
									"case":	390,
									"scores":	[-6.72019932256335]
								}, {
									"case":	391,
									"scores":	[-6.72019932256335]
								}, {
									"case":	392,
									"scores":	[-6.72019932256335]
								}, {
									"case":	393,
									"scores":	[-6.72019932256335]
								}, {
									"case":	394,
									"scores":	[-6.72019932256335]
								}, {
									"case":	395,
									"scores":	[-6.72019932256335]
								}, {
									"case":	396,
									"scores":	[-6.72019932256335]
								}, {
									"case":	397,
									"scores":	[-6.72019932256335]
								}, {
									"case":	398,
									"scores":	[-6.72019932256335]
								}, {
									"case":	399,
									"scores":	[-6.72019932256335]
								}, {
									"case":	400,
									"scores":	[-6.72019932256335]
								}, {
									"case":	401,
									"scores":	[-6.72019932256335]
								}, {
									"case":	402,
									"scores":	[-6.72019932256335]
								}, {
									"case":	403,
									"scores":	[-6.72019932256335]
								}, {
									"case":	404,
									"scores":	[-6.72019932256335]
								}, {
									"case":	405,
									"scores":	[-6.72019932256335]
								}, {
									"case":	406,
									"scores":	[-6.72019932256335]
								}, {
									"case":	407,
									"scores":	[-6.72019932256335]
								}, {
									"case":	408,
									"scores":	[-6.72019932256335]
								}, {
									"case":	409,
									"scores":	[-6.72019932256335]
								}, {
									"case":	410,
									"scores":	[-6.72019932256335]
								}, {
									"case":	411,
									"scores":	[-6.72019932256335]
								}, {
									"case":	412,
									"scores":	[-6.72019932256335]
								}, {
									"case":	413,
									"scores":	[-6.72019932256335]
								}, {
									"case":	414,
									"scores":	[-6.72019932256335]
								}, {
									"case":	415,
									"scores":	[-6.72019932256335]
								}, {
									"case":	416,
									"scores":	[-6.72019932256335]
								}, {
									"case":	417,
									"scores":	[-6.72019932256335]
								}, {
									"case":	418,
									"scores":	[-6.72019932256335]
								}, {
									"case":	419,
									"scores":	[-6.72019932256335]
								}, {
									"case":	420,
									"scores":	[-6.72019932256335]
								}, {
									"case":	421,
									"scores":	[-6.72019932256335]
								}, {
									"case":	422,
									"scores":	[-6.72019932256335]
								}, {
									"case":	423,
									"scores":	[-6.72019932256335]
								}, {
									"case":	424,
									"scores":	[-6.72019932256335]
								}, {
									"case":	425,
									"scores":	[-6.72019932256335]
								}, {
									"case":	426,
									"scores":	[-6.72019932256335]
								}, {
									"case":	427,
									"scores":	[-6.72019932256335]
								}, {
									"case":	428,
									"scores":	[-6.72019932256335]
								}, {
									"case":	429,
									"scores":	[-6.72019932256335]
								}, {
									"case":	430,
									"scores":	[-6.72019932256335]
								}, {
									"case":	431,
									"scores":	[-6.72019932256335]
								}, {
									"case":	432,
									"scores":	[-6.72019932256335]
								}, {
									"case":	433,
									"scores":	[-6.72019932256335]
								}, {
									"case":	434,
									"scores":	[-6.72019932256335]
								}, {
									"case":	435,
									"scores":	[-6.72019932256335]
								}, {
									"case":	436,
									"scores":	[-6.72019932256335]
								}, {
									"case":	437,
									"scores":	[-6.72019932256335]
								}, {
									"case":	438,
									"scores":	[-6.72019932256335]
								}, {
									"case":	439,
									"scores":	[-6.72019932256335]
								}, {
									"case":	440,
									"scores":	[-6.72019932256335]
								}, {
									"case":	441,
									"scores":	[-6.72019932256335]
								}, {
									"case":	442,
									"scores":	[-6.72019932256335]
								}, {
									"case":	443,
									"scores":	[-6.72019932256335]
								}, {
									"case":	444,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	445,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	446,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	447,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	448,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	449,
									"scores":	[-12.057458698563352, -11.697803647363351, -12.667216196807351, -9.11300241956335, -12.319260931563353, -12.801355578563353, -12.328022631563352, -11.677248331563352, -11.823521591563352, -12.690163208563352, -12.690163208563352, -12.332380821563351, -12.690163208563352, -12.332380821563351, -11.823521591563352, -12.690163208563352, -11.823521591563352, -12.690163208563352, -11.823521591563352, -12.690163208563352, -11.188445591563351, -12.05508720856335, -12.690163208563352, -12.332380821563351, -11.677248331563352, -12.179405861563351, -12.179405861563351, -12.141981461563352, -12.179405861563351, -11.670546631563351]
								}, {
									"case":	450,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	451,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	452,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	453,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	454,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	455,
									"scores":	[-14.075904698563352, -13.716249647363352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -13.841967591563352, -14.708609208563351, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}, {
									"case":	456,
									"scores":	[-13.716249647363352, -14.075904698563352, -14.68566219680735, -11.131448419563352, -14.337706931563352, -14.819801578563352, -14.346468631563351, -13.695694331563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -14.35082682156335, -14.708609208563351, -14.35082682156335, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.841967591563352, -14.708609208563351, -13.206891591563352, -14.073533208563351, -14.708609208563351, -14.35082682156335, -13.695694331563352, -14.19785186156335, -14.19785186156335, -14.160427461563351, -14.19785186156335, -13.688992631563352]
								}]
						}, {
							"switch":	5,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	272,
							"begin_column":	2,
							"end_line":	273,
							"end_column":	14,
							"patch_codes":	["if (__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    pageNum = -1;\n", "if (((argc - optind) == 2) || __is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    pageNum = -1;\n", "if (((argc - optind) == 2) && !__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    pageNum = -1;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.1134816830281462, -5.5826939118281462, -7.3737418130281469, -5.4025155260281466, -6.2591885160281464, -4.9996759050281456, -4.1304691330281456, -6.4075480330281458, -5.5446871930281461, -6.6760344850281461, -6.6760344850281461, -6.0957081730281466, -6.6760344850281461, -6.0957081730281466, -5.5446871930281461, -6.6760344850281461, -5.5446871930281461, -6.6760344850281461, -5.5446871930281461, -6.6760344850281461, -5.1851189080281461, -6.3164662000281462, -6.6760344850281461, -6.0957081730281466, -6.4075480330281458, -6.6097798130281458, -6.6097798130281458, -7.4127319130281464, -6.6097798130281458, -6.0587588330281461]
								}, {
									"case":	2,
									"scores":	[-5.349780446928146, -3.818992675728146, -5.6100405769281458, -3.6388142899281455, -4.4954872799281453, -3.2359746689281454, -2.3667678969281454, -4.6438467969281465, -3.7809859569281463, -4.9123332489281459, -4.9123332489281459, -4.3320069369281464, -4.9123332489281459, -4.3320069369281464, -3.7809859569281463, -4.9123332489281459, -3.7809859569281463, -4.9123332489281459, -3.7809859569281463, -4.9123332489281459, -3.4214176719281464, -4.552764963928146, -4.9123332489281459, -4.3320069369281464, -4.6438467969281465, -4.8460785769281465, -4.8460785769281465, -5.6490306769281462, -4.8460785769281465, -4.2950575969281459]
								}, {
									"case":	3,
									"scores":	[-5.349780446928146, -3.818992675728146, -5.6100405769281458, -3.6388142899281455, -4.4954872799281453, -3.2359746689281454, -2.3667678969281454, -4.6438467969281465, -3.7809859569281463, -4.9123332489281459, -4.9123332489281459, -4.3320069369281464, -4.9123332489281459, -4.3320069369281464, -3.7809859569281463, -4.9123332489281459, -3.7809859569281463, -4.9123332489281459, -3.7809859569281463, -4.9123332489281459, -3.4214176719281464, -4.552764963928146, -4.9123332489281459, -4.3320069369281464, -4.6438467969281465, -4.8460785769281465, -4.8460785769281465, -5.6490306769281462, -4.8460785769281465, -4.2950575969281459]
								}]
						}, {
							"switch":	6,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	272,
							"begin_column":	2,
							"end_line":	273,
							"end_column":	14,
							"patch_codes":	["if (!__is_neg(\"\", \"L272\", 30, &(argc), sizeof (argc), &(optind), sizeof (optind), &(pageNum), sizeof (pageNum), &(out), sizeof (out), &(argv), sizeof (argv), &(in), sizeof (in), &(diroff), sizeof (diroff), &(mp), sizeof (mp), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    if ((argc - optind) == 2)\n        pageNum = -1;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-9.43058325256335, -7.899795481363352, -9.69084338256335, -7.7196170955633514, -8.57629008556335, -7.31677747456335, -6.44757070256335, -8.72464960256335, -7.8617887625633518, -8.99313605456335, -8.99313605456335, -8.41280974256335, -8.99313605456335, -8.41280974256335, -7.8617887625633518, -8.99313605456335, -7.8617887625633518, -8.99313605456335, -7.8617887625633518, -8.99313605456335, -7.50222047756335, -8.63356776956335, -8.99313605456335, -8.41280974256335, -8.72464960256335, -8.92688138256335, -8.92688138256335, -9.72983348256335, -8.92688138256335, -8.37586040256335]
								}]
						}]
				}, {
					"line":	305,
					"switches":	[{
							"switch":	7,
							"types":	[[], [], [], [], [444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], [], [], [], [], [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], [], [], [], [], [], []],
							"begin_line":	306,
							"begin_column":	0,
							"end_line":	306,
							"end_column":	0,
							"patch_codes":	["(mp)++", "(optarg)++", "TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, setting subdirectory at %lu\", diroff)", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, setting subdirectory at %lu\", diroff)", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "bias = openSrcImage((argv))", "comma = (-1)", "comma = (-2)", "comma = (-3)", "comma = (-5)", "comma = (-7)", "comma = (0)", "comma = (1)", "comma = (10)", "comma = (2)", "comma = (277)", "comma = (3)", "comma = (5)", "comma = (7)", "comma = (mp)[1]", "comma = (optarg)[1]", "compression = (-1)", "compression = (-2)", "compression = (-3)", "compression = (-5)", "compression = (-7)", "compression = (0)", "compression = (1)", "compression = (10)", "compression = (2)", "compression = (277)", "compression = (3)", "compression = (5)", "compression = (7)", "compression = (defconfig)", "compression = (deffillorder)", "config = (-1)", "config = (-2)", "config = (-3)", "config = (-5)", "config = (-7)", "config = (0)", "config = (1)", "config = (10)", "config = (2)", "config = (277)", "config = (3)", "config = (5)", "config = (7)", "config = (defconfig)", "config = (deffillorder)", "defcompression = (-1)", "defcompression = (-2)", "defcompression = (-3)", "defcompression = (-5)", "defcompression = (-7)", "defcompression = (0)", "defcompression = (1)", "defcompression = (10)", "defcompression = (2)", "defcompression = (277)", "defcompression = (3)", "defcompression = (5)", "defcompression = (7)", "defcompression = (defconfig)", "defcompression = (deffillorder)", "defconfig = (-1)", "defconfig = (-2)", "defconfig = (-3)", "defconfig = (-5)", "defconfig = (-7)", "defconfig = (0)", "defconfig = (1)", "defconfig = (10)", "defconfig = (2)", "defconfig = (277)", "defconfig = (3)", "defconfig = (5)", "defconfig = (7)", "defconfig = (defconfig)", "defconfig = (deffillorder)", "deffillorder = (-1)", "deffillorder = (-2)", "deffillorder = (-3)", "deffillorder = (-5)", "deffillorder = (-7)", "deffillorder = (0)", "deffillorder = (1)", "deffillorder = (10)", "deffillorder = (2)", "deffillorder = (277)", "deffillorder = (3)", "deffillorder = (5)", "deffillorder = (7)", "deffillorder = (defconfig)", "deffillorder = (deffillorder)", "defg3opts = (-1)", "defg3opts = (-2)", "defg3opts = (-3)", "defg3opts = (-5)", "defg3opts = (-7)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (10)", "defg3opts = (2)", "defg3opts = (277)", "defg3opts = (3)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (defrowsperstrip)", "defg3opts = (deftilelength)", "defg3opts = (deftilewidth)", "defpredictor = (-1)", "defpredictor = (-2)", "defpredictor = (-3)", "defpredictor = (-5)", "defpredictor = (-7)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (10)", "defpredictor = (2)", "defpredictor = (277)", "defpredictor = (3)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (defconfig)", "defpredictor = (deffillorder)", "defpredictor = atoi((mp) + 1)", "defpredictor = atoi((optarg) + 1)", "deftilelength = (-1)", "deftilelength = (-2)", "deftilelength = (-3)", "deftilelength = (-5)", "deftilelength = (-7)", "deftilelength = (0)", "deftilelength = (1)", "deftilelength = (10)", "deftilelength = (2)", "deftilelength = (277)", "deftilelength = (3)", "deftilelength = (5)", "deftilelength = (7)", "deftilelength = (defrowsperstrip)", "deftilelength = (deftilelength)", "deftilelength = (deftilewidth)", "deftilelength = atoi((mp))", "deftilelength = atoi((optarg))", "deftilewidth = (-1)", "deftilewidth = (-2)", "deftilewidth = (-3)", "deftilewidth = (-5)", "deftilewidth = (-7)", "deftilewidth = (0)", "deftilewidth = (1)", "deftilewidth = (10)", "deftilewidth = (2)", "deftilewidth = (277)", "deftilewidth = (3)", "deftilewidth = (5)", "deftilewidth = (7)", "deftilewidth = (defrowsperstrip)", "deftilewidth = (deftilelength)", "deftilewidth = (deftilewidth)", "deftilewidth = atoi((mp))", "deftilewidth = atoi((optarg))", "fillorder = (-1)", "fillorder = (-2)", "fillorder = (-3)", "fillorder = (-5)", "fillorder = (-7)", "fillorder = (0)", "fillorder = (1)", "fillorder = (10)", "fillorder = (2)", "fillorder = (277)", "fillorder = (3)", "fillorder = (5)", "fillorder = (7)", "fillorder = (defconfig)", "fillorder = (deffillorder)", "g3opts = (-1)", "g3opts = (-2)", "g3opts = (-3)", "g3opts = (-5)", "g3opts = (-7)", "g3opts = (0)", "g3opts = (1)", "g3opts = (10)", "g3opts = (2)", "g3opts = (277)", "g3opts = (3)", "g3opts = (5)", "g3opts = (7)", "g3opts = (defrowsperstrip)", "g3opts = (deftilelength)", "g3opts = (deftilewidth)", "in = (in)", "in = (out)", "in = openSrcImage(&(mp))", "in = openSrcImage(&(optarg))", "jpegcolormode = (-1)", "jpegcolormode = (-2)", "jpegcolormode = (-3)", "jpegcolormode = (-5)", "jpegcolormode = (-7)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (10)", "jpegcolormode = (2)", "jpegcolormode = (277)", "jpegcolormode = (3)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (argc)", "jpegcolormode = (c)", "jpegcolormode = (optind)", "orientation = (-1)", "orientation = (-2)", "orientation = (-3)", "orientation = (-5)", "orientation = (-7)", "orientation = (0)", "orientation = (1)", "orientation = (10)", "orientation = (2)", "orientation = (277)", "orientation = (3)", "orientation = (5)", "orientation = (7)", "orientation = (defconfig)", "orientation = (deffillorder)", "out = (in)", "out = (out)", "out = TIFFOpen((argv)[argc - 1], mode)", "outtiled = (-1)", "outtiled = (-2)", "outtiled = (-3)", "outtiled = (-5)", "outtiled = (-7)", "outtiled = (0)", "outtiled = (1)", "outtiled = (10)", "outtiled = (2)", "outtiled = (277)", "outtiled = (3)", "outtiled = (5)", "outtiled = (7)", "outtiled = (argc)", "outtiled = (c)", "outtiled = (optind)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (-2)", "pageNum = (-3)", "pageNum = (-5)", "pageNum = (-7)", "pageNum = (0)", "pageNum = (1)", "pageNum = (10)", "pageNum = (2)", "pageNum = (277)", "pageNum = (3)", "pageNum = (5)", "pageNum = (7)", "pageNum = (argc)", "pageNum = (c)", "pageNum = (optind)", "predictor = (-1)", "predictor = (-2)", "predictor = (-3)", "predictor = (-5)", "predictor = (-7)", "predictor = (0)", "predictor = (1)", "predictor = (10)", "predictor = (2)", "predictor = (277)", "predictor = (3)", "predictor = (5)", "predictor = (7)", "predictor = (defconfig)", "predictor = (deffillorder)", "processG3Options((mp))", "processG3Options((optarg))", "quality = (-1)", "quality = (-2)", "quality = (-3)", "quality = (-5)", "quality = (-7)", "quality = (0)", "quality = (1)", "quality = (10)", "quality = (2)", "quality = (277)", "quality = (3)", "quality = (5)", "quality = (7)", "quality = (argc)", "quality = (c)", "quality = (optind)", "quality = atoi((mp) + 1)", "quality = atoi((optarg) + 1)", "rowsperstrip = (-1)", "rowsperstrip = (-2)", "rowsperstrip = (-3)", "rowsperstrip = (-5)", "rowsperstrip = (-7)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (10)", "rowsperstrip = (2)", "rowsperstrip = (277)", "rowsperstrip = (3)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (defrowsperstrip)", "rowsperstrip = (deftilelength)", "rowsperstrip = (deftilewidth)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (-2)", "tilelength = (-3)", "tilelength = (-5)", "tilelength = (-7)", "tilelength = (0)", "tilelength = (1)", "tilelength = (10)", "tilelength = (2)", "tilelength = (277)", "tilelength = (3)", "tilelength = (5)", "tilelength = (7)", "tilelength = (defrowsperstrip)", "tilelength = (deftilelength)", "tilelength = (deftilewidth)", "tilewidth = (-1)", "tilewidth = (-2)", "tilewidth = (-3)", "tilewidth = (-5)", "tilewidth = (-7)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (10)", "tilewidth = (2)", "tilewidth = (277)", "tilewidth = (3)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (defrowsperstrip)", "tilewidth = (deftilelength)", "tilewidth = (deftilewidth)", "(void)TIFFClose(out)", "TIFFClose(in)", "TIFFClose(out)", "TIFFError(TIFFFileName(in), \"Error, setting subdirectory at %lu\", diroff)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "comma = optarg[1]", "compression = defcompression", "config = defconfig", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defconfig = 1", "defconfig = 2", "deffillorder = 1", "deffillorder = 2", "defg3opts = 0", "deftilelength = atoi(optarg)", "deftilewidth = atoi(optarg)", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "fillorder = deffillorder", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "out = TIFFOpen(argv[argc - 1], mode)", "pageNum = -1", "predictor = defpredictor", "rowsperstrip = defrowsperstrip", "tilelength = deftilelength", "tilewidth = deftilewidth", "usage()", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return -1;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return -2;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return -3;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return -5;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return -7;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 0;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 10;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 1;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 277;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 2;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 3;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 5;\n", "if (__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    return 7;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	2,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	3,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	4,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	5,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	6,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	7,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	8,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	9,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	10,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	11,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	12,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	13,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	14,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	15,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	16,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	17,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	18,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	19,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	20,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	21,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	22,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	23,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	24,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	25,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	26,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	27,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	28,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	29,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	30,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	31,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	32,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	33,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	34,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	35,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	36,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	37,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	38,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	39,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	40,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	41,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	42,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	43,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	44,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	45,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	46,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	47,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	48,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	49,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	50,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	51,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	52,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	53,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	54,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	55,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	56,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	57,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	58,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	59,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	60,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	61,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	62,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	63,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	64,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	65,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	66,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	67,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	68,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	69,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	70,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	71,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	72,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	73,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	74,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	75,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	76,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	77,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	78,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	79,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	80,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	81,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	82,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	83,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	84,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	85,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	86,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	87,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	88,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	89,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	90,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	91,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	92,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	93,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	94,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	95,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	96,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	97,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	98,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	99,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	100,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	101,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	102,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	103,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	104,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	105,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	106,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	107,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	108,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	109,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	110,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	111,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	112,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	113,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	114,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	115,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	116,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	117,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	118,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	119,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	120,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	121,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	122,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	123,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	124,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	125,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	126,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	127,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	128,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	129,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	130,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	131,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	132,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	133,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	134,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	135,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	136,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	137,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	138,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	139,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	140,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	141,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	142,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	143,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	144,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	145,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	146,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	147,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	148,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	149,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	150,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	151,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	152,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	153,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	154,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	155,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	156,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	157,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	158,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	159,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	160,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	161,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	162,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	163,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	164,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	165,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	166,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	167,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	168,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	169,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	170,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	171,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	172,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	173,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	174,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	175,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	176,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	177,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	178,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	179,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	180,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	181,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	182,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	183,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	184,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	185,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	186,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	187,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	188,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	189,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	190,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	191,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	192,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	193,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	194,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	195,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	196,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	197,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	198,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	199,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	200,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	201,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	202,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	203,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	204,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	205,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	206,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	207,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	208,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	209,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	210,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	211,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	212,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	213,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	214,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	215,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	216,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	217,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	218,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	219,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	220,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	221,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	222,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	223,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	224,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	225,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	226,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	227,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	228,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	229,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	230,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	231,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	232,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	233,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	234,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	235,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	236,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	237,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	238,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	239,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	240,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	241,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	242,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	243,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	244,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	245,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	246,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	247,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	248,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	249,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	250,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	251,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	252,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	253,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	254,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	255,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	256,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	257,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	258,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	259,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	260,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	261,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	262,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	263,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	264,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	265,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	266,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	267,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	268,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	269,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	270,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	271,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	272,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	273,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	274,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	275,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	276,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	277,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	278,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	279,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	280,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	281,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	282,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	283,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	284,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	285,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	286,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	287,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	288,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	289,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	290,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	291,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	292,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	293,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	294,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	295,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	296,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	297,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	298,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	299,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	300,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	301,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	302,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	303,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	304,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	305,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	306,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	307,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	308,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	309,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	310,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	311,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	312,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	313,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	314,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	315,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	316,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	317,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	318,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	319,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	320,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	321,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	322,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	323,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	324,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	325,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	326,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	327,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	328,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	329,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	330,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	331,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	332,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	333,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	334,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	335,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	336,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	337,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	338,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	339,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	340,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	341,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	342,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	343,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	344,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	345,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	346,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	347,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	348,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	349,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	350,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	351,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	352,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	353,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	354,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	355,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	356,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	357,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	358,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	359,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	360,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	361,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	362,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	363,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	364,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	365,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	366,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	367,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	368,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	369,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	370,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	371,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	372,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	373,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	374,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	375,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	376,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	377,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	378,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	379,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	380,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	381,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	382,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	383,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	384,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	385,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	386,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	387,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	388,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	389,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	390,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	391,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	392,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	393,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	394,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	395,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	396,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	397,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	398,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	399,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	400,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	401,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	402,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	403,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	404,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	405,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	406,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	407,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	408,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	409,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	410,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	411,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	412,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	413,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	414,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	415,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	416,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	417,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	418,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	419,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	420,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	421,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	422,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	423,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	424,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	425,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	426,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	427,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	428,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	429,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	430,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	431,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	432,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	433,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	434,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	435,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	436,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	437,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	438,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	439,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	440,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	441,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	442,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	443,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	444,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	445,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -10.155708916468468, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	446,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	447,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	448,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	449,
									"scores":	[-8.85574277446847, -7.988576074468468, -8.13726291646847, -10.074960916468468, -8.93102568646847, -7.5021869164684682, -9.56610168646847, -8.13726291646847, -9.56610168646847, -8.13726291646847, -9.56610168646847, -8.13726291646847, -8.13726291646847, -10.074960916468468, -8.13726291646847, -10.074960916468468, -9.56610168646847, -8.13726291646847, -10.386823474468468, -10.683162586468468, -10.207690331468468, -11.127057602468469, -8.95771941646847, -9.9959283864684672, -9.9959283864684672, -10.498085916468469, -10.498085916468469, -10.460661516468468, -10.498085916468469, -9.98922668646847]
								}, {
									"case":	450,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	451,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	452,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	453,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	454,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	455,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}, {
									"case":	456,
									"scores":	[-10.874188774468468, -10.007022074468468, -10.155708916468468, -12.093406916468467, -10.949471686468467, -9.52063291646847, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -11.584547686468468, -10.155708916468468, -10.155708916468468, -12.093406916468467, -10.155708916468468, -12.093406916468467, -11.584547686468468, -10.155708916468468, -12.405269474468469, -12.701608586468467, -12.226136331468469, -13.145503602468469, -10.976165416468469, -12.014374386468468, -12.014374386468468, -12.516531916468468, -12.516531916468468, -12.479107516468467, -12.516531916468468, -12.007672686468467]
								}]
						}, {
							"switch":	8,
							"types":	[[], [], [1], [], [], [], [401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], [], [354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], [], [], [353]],
							"begin_line":	306,
							"begin_column":	2,
							"end_line":	306,
							"end_column":	15,
							"patch_codes":	["if (!__is_neg(\"\", \"L306\", 30, &(out), sizeof (out), &(in), sizeof (in), &(g3opts), sizeof (g3opts), &(defg3opts), sizeof (defg3opts), &(deftilelength), sizeof (deftilelength), &(tilelength), sizeof (tilelength), &(deftilewidth), sizeof (deftilewidth), &(tilewidth), sizeof (tilewidth), &(defrowsperstrip), sizeof (defrowsperstrip), &(rowsperstrip), sizeof (rowsperstrip), &(deffillorder), sizeof (deffillorder), &(fillorder), sizeof (fillorder), &(predictor), sizeof (predictor), &(defpredictor), sizeof (defpredictor), &(compression), sizeof (compression), &(defcompression), sizeof (defcompression), &(defconfig), sizeof (defconfig), &(config), sizeof (config), &(diroff), sizeof (diroff), &(argv), sizeof (argv), &(optind), sizeof (optind), &(argc), sizeof (argc), &(pageNum), sizeof (pageNum), &(mp), sizeof (mp), &(optarg), sizeof (optarg), &(outtiled), sizeof (outtiled), &(ignore), sizeof (ignore), &(bias), sizeof (bias), &(comma), sizeof (comma), &(c), sizeof (c)))\n    TIFFClose(out);\n", "TIFFDefaultStripSize(out, -1)", "TIFFDefaultStripSize(out, -2)", "TIFFDefaultStripSize(out, -3)", "TIFFDefaultStripSize(out, -5)", "TIFFDefaultStripSize(out, -7)", "TIFFDefaultStripSize(out, 0)", "TIFFDefaultStripSize(out, 1)", "TIFFDefaultStripSize(out, 10)", "TIFFDefaultStripSize(out, 2)", "TIFFDefaultStripSize(out, 277)", "TIFFDefaultStripSize(out, 3)", "TIFFDefaultStripSize(out, 5)", "TIFFDefaultStripSize(out, 7)", "TIFFDefaultStripSize(out, defg3opts)", "TIFFDefaultStripSize(out, defrowsperstrip)", "TIFFDefaultStripSize(out, deftilelength)", "TIFFDefaultStripSize(out, deftilewidth)", "TIFFDefaultStripSize(out, g3opts)", "TIFFDefaultStripSize(out, rowsperstrip)", "TIFFDefaultStripSize(out, tilelength)", "TIFFDefaultStripSize(out, tilewidth)", "TIFFFieldWithName(out, 0)", "TIFFFieldWithTag(out, -1)", "TIFFFieldWithTag(out, -2)", "TIFFFieldWithTag(out, -3)", "TIFFFieldWithTag(out, -5)", "TIFFFieldWithTag(out, -7)", "TIFFFieldWithTag(out, 0)", "TIFFFieldWithTag(out, 1)", "TIFFFieldWithTag(out, 10)", "TIFFFieldWithTag(out, 2)", "TIFFFieldWithTag(out, 277)", "TIFFFieldWithTag(out, 3)", "TIFFFieldWithTag(out, 5)", "TIFFFieldWithTag(out, 7)", "TIFFFieldWithTag(out, defg3opts)", "TIFFFieldWithTag(out, defrowsperstrip)", "TIFFFieldWithTag(out, deftilelength)", "TIFFFieldWithTag(out, deftilewidth)", "TIFFFieldWithTag(out, g3opts)", "TIFFFieldWithTag(out, rowsperstrip)", "TIFFFieldWithTag(out, tilelength)", "TIFFFieldWithTag(out, tilewidth)", "TIFFGetClientInfo(out, 0)", "TIFFGetTagListEntry(out, -1)", "TIFFGetTagListEntry(out, -2)", "TIFFGetTagListEntry(out, -3)", "TIFFGetTagListEntry(out, -5)", "TIFFGetTagListEntry(out, -7)", "TIFFGetTagListEntry(out, 0)", "TIFFGetTagListEntry(out, 1)", "TIFFGetTagListEntry(out, 10)", "TIFFGetTagListEntry(out, 2)", "TIFFGetTagListEntry(out, 277)", "TIFFGetTagListEntry(out, 3)", "TIFFGetTagListEntry(out, 5)", "TIFFGetTagListEntry(out, 7)", "TIFFGetTagListEntry(out, argc)", "TIFFGetTagListEntry(out, c)", "TIFFGetTagListEntry(out, ignore)", "TIFFGetTagListEntry(out, jpegcolormode)", "TIFFGetTagListEntry(out, optind)", "TIFFGetTagListEntry(out, outtiled)", "TIFFGetTagListEntry(out, pageNum)", "TIFFGetTagListEntry(out, quality)", "TIFFRGBAImageOK(out, 0)", "TIFFRGBAImageOK(out, mp)", "TIFFRGBAImageOK(out, optarg)", "TIFFRawStripSize(out, -1)", "TIFFRawStripSize(out, -2)", "TIFFRawStripSize(out, -3)", "TIFFRawStripSize(out, -5)", "TIFFRawStripSize(out, -7)", "TIFFRawStripSize(out, 0)", "TIFFRawStripSize(out, 1)", "TIFFRawStripSize(out, 10)", "TIFFRawStripSize(out, 2)", "TIFFRawStripSize(out, 277)", "TIFFRawStripSize(out, 3)", "TIFFRawStripSize(out, 5)", "TIFFRawStripSize(out, 7)", "TIFFRawStripSize(out, defg3opts)", "TIFFRawStripSize(out, defrowsperstrip)", "TIFFRawStripSize(out, deftilelength)", "TIFFRawStripSize(out, deftilewidth)", "TIFFRawStripSize(out, g3opts)", "TIFFRawStripSize(out, rowsperstrip)", "TIFFRawStripSize(out, tilelength)", "TIFFRawStripSize(out, tilewidth)", "TIFFRawStripSize64(out, -1)", "TIFFRawStripSize64(out, -2)", "TIFFRawStripSize64(out, -3)", "TIFFRawStripSize64(out, -5)", "TIFFRawStripSize64(out, -7)", "TIFFRawStripSize64(out, 0)", "TIFFRawStripSize64(out, 1)", "TIFFRawStripSize64(out, 10)", "TIFFRawStripSize64(out, 2)", "TIFFRawStripSize64(out, 277)", "TIFFRawStripSize64(out, 3)", "TIFFRawStripSize64(out, 5)", "TIFFRawStripSize64(out, 7)", "TIFFRawStripSize64(out, defg3opts)", "TIFFRawStripSize64(out, defrowsperstrip)", "TIFFRawStripSize64(out, deftilelength)", "TIFFRawStripSize64(out, deftilewidth)", "TIFFRawStripSize64(out, g3opts)", "TIFFRawStripSize64(out, rowsperstrip)", "TIFFRawStripSize64(out, tilelength)", "TIFFRawStripSize64(out, tilewidth)", "TIFFReadEXIFDirectory(out, -1)", "TIFFReadEXIFDirectory(out, -2)", "TIFFReadEXIFDirectory(out, -3)", "TIFFReadEXIFDirectory(out, -5)", "TIFFReadEXIFDirectory(out, -7)", "TIFFReadEXIFDirectory(out, 0)", "TIFFReadEXIFDirectory(out, 1)", "TIFFReadEXIFDirectory(out, 10)", "TIFFReadEXIFDirectory(out, 2)", "TIFFReadEXIFDirectory(out, 277)", "TIFFReadEXIFDirectory(out, 3)", "TIFFReadEXIFDirectory(out, 5)", "TIFFReadEXIFDirectory(out, 7)", "TIFFReadEXIFDirectory(out, diroff)", "TIFFSetClientdata(out, 0)", "TIFFSetDirectory(out, -1)", "TIFFSetDirectory(out, -2)", "TIFFSetDirectory(out, -3)", "TIFFSetDirectory(out, -5)", "TIFFSetDirectory(out, -7)", "TIFFSetDirectory(out, 0)", "TIFFSetDirectory(out, 1)", "TIFFSetDirectory(out, 10)", "TIFFSetDirectory(out, 2)", "TIFFSetDirectory(out, 277)", "TIFFSetDirectory(out, 3)", "TIFFSetDirectory(out, 5)", "TIFFSetDirectory(out, 7)", "TIFFSetDirectory(out, compression)", "TIFFSetDirectory(out, config)", "TIFFSetDirectory(out, defcompression)", "TIFFSetDirectory(out, defconfig)", "TIFFSetDirectory(out, deffillorder)", "TIFFSetDirectory(out, defpredictor)", "TIFFSetDirectory(out, fillorder)", "TIFFSetDirectory(out, orientation)", "TIFFSetDirectory(out, predictor)", "TIFFSetFileName(out, 0)", "TIFFSetFileno(out, -1)", "TIFFSetFileno(out, -2)", "TIFFSetFileno(out, -3)", "TIFFSetFileno(out, -5)", "TIFFSetFileno(out, -7)", "TIFFSetFileno(out, 0)", "TIFFSetFileno(out, 1)", "TIFFSetFileno(out, 10)", "TIFFSetFileno(out, 2)", "TIFFSetFileno(out, 277)", "TIFFSetFileno(out, 3)", "TIFFSetFileno(out, 5)", "TIFFSetFileno(out, 7)", "TIFFSetFileno(out, argc)", "TIFFSetFileno(out, c)", "TIFFSetFileno(out, ignore)", "TIFFSetFileno(out, jpegcolormode)", "TIFFSetFileno(out, optind)", "TIFFSetFileno(out, outtiled)", "TIFFSetFileno(out, pageNum)", "TIFFSetFileno(out, quality)", "TIFFSetMode(out, -1)", "TIFFSetMode(out, -2)", "TIFFSetMode(out, -3)", "TIFFSetMode(out, -5)", "TIFFSetMode(out, -7)", "TIFFSetMode(out, 0)", "TIFFSetMode(out, 1)", "TIFFSetMode(out, 10)", "TIFFSetMode(out, 2)", "TIFFSetMode(out, 277)", "TIFFSetMode(out, 3)", "TIFFSetMode(out, 5)", "TIFFSetMode(out, 7)", "TIFFSetMode(out, argc)", "TIFFSetMode(out, c)", "TIFFSetMode(out, ignore)", "TIFFSetMode(out, jpegcolormode)", "TIFFSetMode(out, optind)", "TIFFSetMode(out, outtiled)", "TIFFSetMode(out, pageNum)", "TIFFSetMode(out, quality)", "TIFFSetSubDirectory(out, -1)", "TIFFSetSubDirectory(out, -2)", "TIFFSetSubDirectory(out, -3)", "TIFFSetSubDirectory(out, -5)", "TIFFSetSubDirectory(out, -7)", "TIFFSetSubDirectory(out, 0)", "TIFFSetSubDirectory(out, 1)", "TIFFSetSubDirectory(out, 10)", "TIFFSetSubDirectory(out, 2)", "TIFFSetSubDirectory(out, 277)", "TIFFSetSubDirectory(out, 3)", "TIFFSetSubDirectory(out, 5)", "TIFFSetSubDirectory(out, 7)", "TIFFSetSubDirectory(out, diroff)", "TIFFSetWriteOffset(out, -1)", "TIFFSetWriteOffset(out, -2)", "TIFFSetWriteOffset(out, -3)", "TIFFSetWriteOffset(out, -5)", "TIFFSetWriteOffset(out, -7)", "TIFFSetWriteOffset(out, 0)", "TIFFSetWriteOffset(out, 1)", "TIFFSetWriteOffset(out, 10)", "TIFFSetWriteOffset(out, 2)", "TIFFSetWriteOffset(out, 277)", "TIFFSetWriteOffset(out, 3)", "TIFFSetWriteOffset(out, 5)", "TIFFSetWriteOffset(out, 7)", "TIFFSetWriteOffset(out, diroff)", "TIFFUnlinkDirectory(out, -1)", "TIFFUnlinkDirectory(out, -2)", "TIFFUnlinkDirectory(out, -3)", "TIFFUnlinkDirectory(out, -5)", "TIFFUnlinkDirectory(out, -7)", "TIFFUnlinkDirectory(out, 0)", "TIFFUnlinkDirectory(out, 1)", "TIFFUnlinkDirectory(out, 10)", "TIFFUnlinkDirectory(out, 2)", "TIFFUnlinkDirectory(out, 277)", "TIFFUnlinkDirectory(out, 3)", "TIFFUnlinkDirectory(out, 5)", "TIFFUnlinkDirectory(out, 7)", "TIFFUnlinkDirectory(out, compression)", "TIFFUnlinkDirectory(out, config)", "TIFFUnlinkDirectory(out, defcompression)", "TIFFUnlinkDirectory(out, defconfig)", "TIFFUnlinkDirectory(out, deffillorder)", "TIFFUnlinkDirectory(out, defpredictor)", "TIFFUnlinkDirectory(out, fillorder)", "TIFFUnlinkDirectory(out, orientation)", "TIFFUnlinkDirectory(out, predictor)", "TIFFUnsetField(out, -1)", "TIFFUnsetField(out, -2)", "TIFFUnsetField(out, -3)", "TIFFUnsetField(out, -5)", "TIFFUnsetField(out, -7)", "TIFFUnsetField(out, 0)", "TIFFUnsetField(out, 1)", "TIFFUnsetField(out, 10)", "TIFFUnsetField(out, 2)", "TIFFUnsetField(out, 277)", "TIFFUnsetField(out, 3)", "TIFFUnsetField(out, 5)", "TIFFUnsetField(out, 7)", "TIFFUnsetField(out, defg3opts)", "TIFFUnsetField(out, defrowsperstrip)", "TIFFUnsetField(out, deftilelength)", "TIFFUnsetField(out, deftilewidth)", "TIFFUnsetField(out, g3opts)", "TIFFUnsetField(out, rowsperstrip)", "TIFFUnsetField(out, tilelength)", "TIFFUnsetField(out, tilewidth)", "TIFFVStripSize(out, -1)", "TIFFVStripSize(out, -2)", "TIFFVStripSize(out, -3)", "TIFFVStripSize(out, -5)", "TIFFVStripSize(out, -7)", "TIFFVStripSize(out, 0)", "TIFFVStripSize(out, 1)", "TIFFVStripSize(out, 10)", "TIFFVStripSize(out, 2)", "TIFFVStripSize(out, 277)", "TIFFVStripSize(out, 3)", "TIFFVStripSize(out, 5)", "TIFFVStripSize(out, 7)", "TIFFVStripSize(out, defg3opts)", "TIFFVStripSize(out, defrowsperstrip)", "TIFFVStripSize(out, deftilelength)", "TIFFVStripSize(out, deftilewidth)", "TIFFVStripSize(out, g3opts)", "TIFFVStripSize(out, rowsperstrip)", "TIFFVStripSize(out, tilelength)", "TIFFVStripSize(out, tilewidth)", "TIFFVStripSize64(out, -1)", "TIFFVStripSize64(out, -2)", "TIFFVStripSize64(out, -3)", "TIFFVStripSize64(out, -5)", "TIFFVStripSize64(out, -7)", "TIFFVStripSize64(out, 0)", "TIFFVStripSize64(out, 1)", "TIFFVStripSize64(out, 10)", "TIFFVStripSize64(out, 2)", "TIFFVStripSize64(out, 277)", "TIFFVStripSize64(out, 3)", "TIFFVStripSize64(out, 5)", "TIFFVStripSize64(out, 7)", "TIFFVStripSize64(out, defg3opts)", "TIFFVStripSize64(out, defrowsperstrip)", "TIFFVStripSize64(out, deftilelength)", "TIFFVStripSize64(out, deftilewidth)", "TIFFVStripSize64(out, g3opts)", "TIFFVStripSize64(out, rowsperstrip)", "TIFFVStripSize64(out, tilelength)", "TIFFVStripSize64(out, tilewidth)", "TIFFVTileSize(out, -1)", "TIFFVTileSize(out, -2)", "TIFFVTileSize(out, -3)", "TIFFVTileSize(out, -5)", "TIFFVTileSize(out, -7)", "TIFFVTileSize(out, 0)", "TIFFVTileSize(out, 1)", "TIFFVTileSize(out, 10)", "TIFFVTileSize(out, 2)", "TIFFVTileSize(out, 277)", "TIFFVTileSize(out, 3)", "TIFFVTileSize(out, 5)", "TIFFVTileSize(out, 7)", "TIFFVTileSize(out, defg3opts)", "TIFFVTileSize(out, defrowsperstrip)", "TIFFVTileSize(out, deftilelength)", "TIFFVTileSize(out, deftilewidth)", "TIFFVTileSize(out, g3opts)", "TIFFVTileSize(out, rowsperstrip)", "TIFFVTileSize(out, tilelength)", "TIFFVTileSize(out, tilewidth)", "TIFFVTileSize64(out, -1)", "TIFFVTileSize64(out, -2)", "TIFFVTileSize64(out, -3)", "TIFFVTileSize64(out, -5)", "TIFFVTileSize64(out, -7)", "TIFFVTileSize64(out, 0)", "TIFFVTileSize64(out, 1)", "TIFFVTileSize64(out, 10)", "TIFFVTileSize64(out, 2)", "TIFFVTileSize64(out, 277)", "TIFFVTileSize64(out, 3)", "TIFFVTileSize64(out, 5)", "TIFFVTileSize64(out, 7)", "TIFFVTileSize64(out, defg3opts)", "TIFFVTileSize64(out, defrowsperstrip)", "TIFFVTileSize64(out, deftilelength)", "TIFFVTileSize64(out, deftilewidth)", "TIFFVTileSize64(out, g3opts)", "TIFFVTileSize64(out, rowsperstrip)", "TIFFVTileSize64(out, tilelength)", "TIFFVTileSize64(out, tilewidth)", "nextSrcImage(out, 0)", "nextSrcImage(out, argv)", "tiffcp(out, 0)", "tiffcp(out, bias)", "tiffcp(out, in)", "tiffcp(out, out)", "{\n}\n", "TIFFAccessTagMethods(out)", "TIFFCheckpointDirectory(out)", "TIFFCleanup(out)", "TIFFClientdata(out)", "TIFFCreateDirectory(out)", "TIFFCurrentDirOffset(out)", "TIFFCurrentDirectory(out)", "TIFFCurrentRow(out)", "TIFFCurrentStrip(out)", "TIFFCurrentTile(out)", "TIFFFileName(out)", "TIFFFileno(out)", "TIFFFlush(out)", "TIFFFlushData(out)", "TIFFFreeDirectory(out)", "TIFFGetCloseProc(out)", "TIFFGetMapFileProc(out)", "TIFFGetMode(out)", "TIFFGetReadProc(out)", "TIFFGetSeekProc(out)", "TIFFGetSizeProc(out)", "TIFFGetTagListCount(out)", "TIFFGetUnmapFileProc(out)", "TIFFGetWriteProc(out)", "TIFFIsBigEndian(out)", "TIFFIsByteSwapped(out)", "TIFFIsMSB2LSB(out)", "TIFFIsTiled(out)", "TIFFIsUpSampled(out)", "TIFFLastDirectory(out)", "TIFFNumberOfDirectories(out)", "TIFFNumberOfStrips(out)", "TIFFNumberOfTiles(out)", "TIFFRasterScanlineSize(out)", "TIFFRasterScanlineSize64(out)", "TIFFReadDirectory(out)", "TIFFRewriteDirectory(out)", "TIFFScanlineSize(out)", "TIFFScanlineSize64(out)", "TIFFSetupStrips(out)", "TIFFStripSize(out)", "TIFFStripSize64(out)", "TIFFTileRowSize(out)", "TIFFTileRowSize64(out)", "TIFFTileSize(out)", "TIFFTileSize64(out)", "TIFFWriteDirectory(out)", "TIFFClose((&argc))", "TIFFClose((&argv))", "TIFFClose((&c))", "TIFFClose((&defconfig))", "TIFFClose((&deffillorder))", "TIFFClose((&defrowsperstrip))", "TIFFClose((&deftilelength))", "TIFFClose((&deftilewidth))", "TIFFClose((&diroff))", "TIFFClose((&in))", "TIFFClose((&mode))", "TIFFClose((&mp))", "TIFFClose((&optarg))", "TIFFClose((&optind))", "TIFFClose((&out))", "TIFFClose((in))", "TIFFClose((out))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.2918858834684679, -7.1997159884684683, -6.9074375314684682, -7.3154993264684682, -6.4049100614684678, -6.5478692464684682, -6.7644783464684677, -6.9074375314684682, -6.7644783464684677, -6.9074375314684682, -6.7644783464684677, -6.9074375314684682, -6.9074375314684682, -7.3154993264684682, -6.9074375314684682, -7.3154993264684682, -6.7644783464684677, -6.9074375314684682, -7.2093627834684684, -8.03829558046847, -8.40738854646847, -8.76815774646847, -8.09945153146847, -7.517804646468468, -7.517804646468468, -7.720036426468468, -7.720036426468468, -8.52298852646847, -7.720036426468468, -7.1690154464684683]
								}, {
									"case":	2,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	3,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	4,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	5,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	6,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	7,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	8,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	9,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	10,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	11,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	12,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	13,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	14,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	15,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	16,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	17,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	18,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	19,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	20,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	21,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	22,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	23,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	24,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	25,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	26,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	27,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	28,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	29,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	30,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	31,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	32,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	33,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	34,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	35,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	36,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	37,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	38,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	39,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	40,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	41,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	42,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	43,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	44,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	45,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	46,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	47,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	48,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	49,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	50,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	51,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	52,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	53,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	54,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	55,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	56,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	57,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	58,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	59,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	60,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	61,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	62,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	63,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	64,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	65,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	66,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	67,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	68,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	69,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	70,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	71,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	72,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	73,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	74,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	75,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	76,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	77,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	78,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	79,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	80,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	81,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	82,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	83,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	84,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	85,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	86,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	87,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	88,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	89,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	90,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	91,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	92,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	93,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	94,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	95,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	96,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	97,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	98,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	99,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	100,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	101,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	102,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	103,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	104,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	105,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	106,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	107,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	108,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	109,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	110,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	111,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	112,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	113,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	114,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	115,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	116,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	117,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	118,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	119,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	120,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	121,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	122,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	123,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	124,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	125,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	126,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	127,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	128,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	129,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	130,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	131,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	132,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	133,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	134,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	135,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	136,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	137,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	138,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	139,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	140,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	141,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	142,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	143,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	144,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	145,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	146,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	147,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	148,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	149,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	150,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	151,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	152,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	153,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	154,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	155,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	156,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	157,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	158,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	159,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	160,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	161,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	162,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	163,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	164,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	165,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	166,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	167,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	168,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	169,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	170,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	171,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	172,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	173,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	174,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	175,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	176,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	177,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	178,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	179,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	180,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	181,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	182,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	183,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	184,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	185,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	186,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	187,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	188,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	189,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	190,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	191,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	192,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	193,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	194,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	195,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	196,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	197,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	198,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	199,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	200,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	201,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	202,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	203,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	204,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	205,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	206,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	207,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	208,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	209,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	210,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	211,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	212,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	213,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	214,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	215,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	216,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	217,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	218,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	219,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	220,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	221,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	222,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	223,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	224,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	225,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	226,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	227,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	228,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	229,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	230,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	231,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	232,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	233,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	234,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	235,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	236,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	237,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	238,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	239,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	240,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	241,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	242,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	243,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	244,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	245,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	246,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	247,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	248,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	249,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	250,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	251,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	252,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	253,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	254,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	255,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	256,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	257,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	258,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	259,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	260,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	261,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	262,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	263,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	264,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	265,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	266,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	267,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	268,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	269,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	270,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	271,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	272,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	273,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	274,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	275,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	276,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	277,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	278,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	279,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	280,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	281,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	282,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	283,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	284,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	285,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	286,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	287,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	288,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	289,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	290,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	291,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	292,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	293,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	294,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	295,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	296,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	297,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	298,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	299,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	300,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	301,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	302,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	303,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	304,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	305,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	306,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	307,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	308,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	309,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	310,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	311,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	312,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	313,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	314,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	315,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	316,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	317,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	318,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	319,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	320,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	321,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	322,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	323,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	324,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	325,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	326,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	327,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	328,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	329,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	330,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	331,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	332,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	333,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	334,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	335,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	336,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	337,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	338,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	339,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	340,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	341,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	342,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	343,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	344,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	345,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	346,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	347,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	348,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	349,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	350,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	351,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	352,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	353,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	354,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	355,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	356,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	357,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	358,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	359,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	360,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	361,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	362,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	363,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	364,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	365,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	366,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	367,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	368,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	369,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	370,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	371,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	372,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	373,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	374,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	375,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	376,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	377,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	378,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	379,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	380,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	381,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	382,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	383,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	384,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	385,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	386,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	387,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	388,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	389,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	390,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	391,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	392,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	393,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	394,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	395,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	396,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	397,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	398,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	399,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	400,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	401,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	402,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	403,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	404,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	405,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	406,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	407,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	408,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	409,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	410,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	411,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	412,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	413,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	414,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	415,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	416,
									"scores":	[-6.8414155664684682]
								}, {
									"case":	417,
									"scores":	[-6.8414155664684682]
								}]
						}]
				}, {
					"line":	334,
					"switches":	[{
							"switch":	11,
							"types":	[[], [], [], [], [203, 204, 205, 206, 207, 208, 209, 210, 211, 212], [], [], [], [], [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], [], [], [], [], [], []],
							"begin_line":	335,
							"begin_column":	1,
							"end_line":	335,
							"end_column":	1,
							"patch_codes":	["(opt)++", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (3)", "comma = (32773)", "comma = (34661)", "comma = (4)", "comma = (5)", "comma = (7)", "comma = (8)", "comma = (opt)[1]", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (3)", "compression = (32773)", "compression = (34661)", "compression = (4)", "compression = (5)", "compression = (7)", "compression = (8)", "config = (0)", "config = (1)", "config = (2)", "config = (3)", "config = (32773)", "config = (34661)", "config = (4)", "config = (5)", "config = (7)", "config = (8)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (3)", "defg3opts = (32773)", "defg3opts = (34661)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (8)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (3)", "defpredictor = (32773)", "defpredictor = (34661)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = atoi((opt) + 1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (3)", "fillorder = (32773)", "fillorder = (34661)", "fillorder = (4)", "fillorder = (5)", "fillorder = (7)", "fillorder = (8)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (3)", "g3opts = (32773)", "g3opts = (34661)", "g3opts = (4)", "g3opts = (5)", "g3opts = (7)", "g3opts = (8)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (3)", "jpegcolormode = (32773)", "jpegcolormode = (34661)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (3)", "orientation = (32773)", "orientation = (34661)", "orientation = (4)", "orientation = (5)", "orientation = (7)", "orientation = (8)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (3)", "outtiled = (32773)", "outtiled = (34661)", "outtiled = (4)", "outtiled = (5)", "outtiled = (7)", "outtiled = (8)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (3)", "pageNum = (32773)", "pageNum = (34661)", "pageNum = (4)", "pageNum = (5)", "pageNum = (7)", "pageNum = (8)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (3)", "predictor = (32773)", "predictor = (34661)", "predictor = (4)", "predictor = (5)", "predictor = (7)", "predictor = (8)", "processG3Options((opt))", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (3)", "quality = (32773)", "quality = (34661)", "quality = (4)", "quality = (5)", "quality = (7)", "quality = (8)", "quality = atoi((opt) + 1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (3)", "rowsperstrip = (32773)", "rowsperstrip = (34661)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (8)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (3)", "tilelength = (32773)", "tilelength = (34661)", "tilelength = (4)", "tilelength = (5)", "tilelength = (7)", "tilelength = (8)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (3)", "tilewidth = (32773)", "tilewidth = (34661)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (8)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "processG3Options(opt)", "usage()", "if (__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 0;\n", "if (__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 1;\n", "if (__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 2;\n", "if (__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 32773;\n", "if (__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 34661;\n", "if (__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 3;\n", "if (__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 4;\n", "if (__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 5;\n", "if (__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 7;\n", "if (__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 8;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	2,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	3,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	4,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	5,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	6,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	7,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	8,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	9,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	10,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	11,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	12,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	13,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	14,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	15,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	16,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	17,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	18,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	19,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	20,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	21,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	22,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	23,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	24,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	25,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	26,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	27,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	28,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	29,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	30,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	31,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	32,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	33,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	34,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	35,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	36,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	37,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	38,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	39,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	40,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	41,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	42,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	43,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	44,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	45,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	46,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	47,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	48,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	49,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	50,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	51,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	52,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	53,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	54,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	55,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	56,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	57,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	58,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	59,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	60,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	61,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	62,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	63,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	64,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	65,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	66,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	67,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	68,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	69,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	70,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	71,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	72,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	73,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	74,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	75,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	76,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	77,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	78,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	79,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	80,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	81,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	82,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	83,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	84,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	85,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	86,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	87,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	88,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	89,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	90,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	91,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	92,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	93,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	94,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	95,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	96,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	97,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	98,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	99,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	100,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	101,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	102,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	103,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	104,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	105,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	106,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	107,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	108,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	109,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	110,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	111,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	112,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	113,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	114,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	115,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	116,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	117,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	118,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	119,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	120,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	121,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	122,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	123,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	124,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	125,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	126,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	127,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	128,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	129,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	130,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	131,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	132,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	133,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	134,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	135,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	136,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	137,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	138,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	139,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	140,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	141,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	142,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	143,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	144,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	145,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	146,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	147,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	148,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	149,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	150,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	151,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	152,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	153,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	154,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	155,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	156,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	157,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	158,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	159,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	160,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	161,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	162,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	163,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	164,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	165,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	166,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	167,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	168,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	169,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	170,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	171,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	172,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	173,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	174,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	175,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	176,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	177,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	178,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	179,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	180,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	181,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	182,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	183,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	184,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	185,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	186,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	187,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	188,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	189,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	190,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	191,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	192,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	193,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	194,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	195,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	196,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	197,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	198,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	199,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	200,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	201,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	202,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	203,
									"scores":	[-8.8903891931723127, -8.19150752792831, -8.40257885792831, -8.40257885792831, -8.40257885792831]
								}, {
									"case":	204,
									"scores":	[-10.908835193172312, -10.209953527928313, -10.421024857928312, -10.421024857928312, -10.421024857928312]
								}, {
									"case":	205,
									"scores":	[-10.908835193172312, -10.209953527928313, -10.421024857928312, -10.421024857928312, -10.421024857928312]
								}, {
									"case":	206,
									"scores":	[-10.908835193172312, -10.209953527928313, -10.421024857928312, -10.421024857928312, -10.421024857928312]
								}, {
									"case":	207,
									"scores":	[-10.908835193172312, -10.209953527928313, -10.421024857928312, -10.421024857928312, -10.421024857928312]
								}, {
									"case":	208,
									"scores":	[-10.908835193172312, -10.209953527928313, -10.421024857928312, -10.421024857928312, -10.421024857928312]
								}, {
									"case":	209,
									"scores":	[-10.908835193172312, -10.209953527928313, -10.421024857928312, -10.421024857928312, -10.421024857928312]
								}, {
									"case":	210,
									"scores":	[-10.908835193172312, -10.209953527928313, -10.421024857928312, -10.421024857928312, -10.421024857928312]
								}, {
									"case":	211,
									"scores":	[-10.908835193172312, -10.209953527928313, -10.421024857928312, -10.421024857928312, -10.421024857928312]
								}, {
									"case":	212,
									"scores":	[-10.908835193172312, -10.209953527928313, -10.421024857928312, -10.421024857928312, -10.421024857928312]
								}]
						}, {
							"switch":	12,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	335,
							"begin_column":	3,
							"end_line":	335,
							"end_column":	20,
							"patch_codes":	["if (!__is_neg(\"\", \"L335\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    defcompression = 1;\n", "{\n}\n", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defcompression = (opt != 0)", "defcompression = (opt == 0)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.02192330792831, -7.366348827928312, -7.2579613079283121, -7.2579613079283121, -7.2579613079283121]
								}, {
									"case":	2,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	3,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	4,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	5,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	6,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	7,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	8,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	9,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	10,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	11,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	12,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	13,
									"scores":	[-6.6797939079283122]
								}, {
									"case":	14,
									"scores":	[-6.6797939079283122]
								}]
						}]
				}, {
					"line":	336,
					"switches":	[{
							"switch":	15,
							"types":	[[], [], [], [], [203, 204, 205, 206, 207, 208, 209, 210, 211, 212], [], [], [], [], [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], [], [], [], [], [], []],
							"begin_line":	337,
							"begin_column":	1,
							"end_line":	337,
							"end_column":	1,
							"patch_codes":	["(opt)++", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (3)", "comma = (32773)", "comma = (34661)", "comma = (4)", "comma = (5)", "comma = (7)", "comma = (8)", "comma = (opt)[1]", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (3)", "compression = (32773)", "compression = (34661)", "compression = (4)", "compression = (5)", "compression = (7)", "compression = (8)", "config = (0)", "config = (1)", "config = (2)", "config = (3)", "config = (32773)", "config = (34661)", "config = (4)", "config = (5)", "config = (7)", "config = (8)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (3)", "defg3opts = (32773)", "defg3opts = (34661)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (8)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (3)", "defpredictor = (32773)", "defpredictor = (34661)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = atoi((opt) + 1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (3)", "fillorder = (32773)", "fillorder = (34661)", "fillorder = (4)", "fillorder = (5)", "fillorder = (7)", "fillorder = (8)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (3)", "g3opts = (32773)", "g3opts = (34661)", "g3opts = (4)", "g3opts = (5)", "g3opts = (7)", "g3opts = (8)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (3)", "jpegcolormode = (32773)", "jpegcolormode = (34661)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (3)", "orientation = (32773)", "orientation = (34661)", "orientation = (4)", "orientation = (5)", "orientation = (7)", "orientation = (8)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (3)", "outtiled = (32773)", "outtiled = (34661)", "outtiled = (4)", "outtiled = (5)", "outtiled = (7)", "outtiled = (8)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (3)", "pageNum = (32773)", "pageNum = (34661)", "pageNum = (4)", "pageNum = (5)", "pageNum = (7)", "pageNum = (8)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (3)", "predictor = (32773)", "predictor = (34661)", "predictor = (4)", "predictor = (5)", "predictor = (7)", "predictor = (8)", "processG3Options((opt))", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (3)", "quality = (32773)", "quality = (34661)", "quality = (4)", "quality = (5)", "quality = (7)", "quality = (8)", "quality = atoi((opt) + 1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (3)", "rowsperstrip = (32773)", "rowsperstrip = (34661)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (8)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (3)", "tilelength = (32773)", "tilelength = (34661)", "tilelength = (4)", "tilelength = (5)", "tilelength = (7)", "tilelength = (8)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (3)", "tilewidth = (32773)", "tilewidth = (34661)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (8)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "processG3Options(opt)", "usage()", "if (__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 0;\n", "if (__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 1;\n", "if (__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 2;\n", "if (__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 32773;\n", "if (__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 34661;\n", "if (__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 3;\n", "if (__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 4;\n", "if (__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 5;\n", "if (__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 7;\n", "if (__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 8;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	2,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	3,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	4,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	5,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	6,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	7,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	8,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	9,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	10,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	11,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	12,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	13,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	14,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	15,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	16,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	17,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	18,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	19,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	20,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	21,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	22,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	23,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	24,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	25,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	26,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	27,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	28,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	29,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	30,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	31,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	32,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	33,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	34,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	35,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	36,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	37,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	38,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	39,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	40,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	41,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	42,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	43,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	44,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	45,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	46,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	47,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	48,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	49,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	50,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	51,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	52,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	53,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	54,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	55,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	56,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	57,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	58,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	59,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	60,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	61,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	62,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	63,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	64,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	65,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	66,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	67,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	68,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	69,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	70,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	71,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	72,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	73,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	74,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	75,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	76,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	77,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	78,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	79,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	80,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	81,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	82,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	83,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	84,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	85,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	86,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	87,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	88,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	89,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	90,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	91,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	92,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	93,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	94,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	95,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	96,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	97,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	98,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	99,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	100,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	101,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	102,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	103,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	104,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	105,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	106,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	107,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	108,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	109,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	110,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	111,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	112,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	113,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	114,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	115,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	116,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	117,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	118,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	119,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	120,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	121,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	122,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	123,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	124,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	125,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	126,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	127,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	128,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	129,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	130,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	131,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	132,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	133,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	134,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	135,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	136,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	137,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	138,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	139,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	140,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	141,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	142,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	143,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	144,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	145,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	146,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	147,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	148,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	149,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	150,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	151,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	152,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	153,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	154,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	155,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	156,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	157,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	158,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	159,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	160,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	161,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	162,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	163,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	164,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	165,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	166,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	167,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	168,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	169,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	170,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	171,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	172,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	173,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	174,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	175,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	176,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	177,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	178,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	179,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	180,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	181,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	182,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	183,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	184,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	185,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	186,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	187,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	188,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	189,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	190,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	191,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	192,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	193,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	194,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	195,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	196,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	197,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	198,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	199,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	200,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	201,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	202,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	203,
									"scores":	[-8.8297810712197542, -8.1308994059757538, -8.3419707359757549, -8.3419707359757549, -8.3419707359757549]
								}, {
									"case":	204,
									"scores":	[-10.848227071219753, -10.149345405975755, -10.360416735975754, -10.360416735975754, -10.360416735975754]
								}, {
									"case":	205,
									"scores":	[-10.848227071219753, -10.149345405975755, -10.360416735975754, -10.360416735975754, -10.360416735975754]
								}, {
									"case":	206,
									"scores":	[-10.848227071219753, -10.149345405975755, -10.360416735975754, -10.360416735975754, -10.360416735975754]
								}, {
									"case":	207,
									"scores":	[-10.848227071219753, -10.149345405975755, -10.360416735975754, -10.360416735975754, -10.360416735975754]
								}, {
									"case":	208,
									"scores":	[-10.848227071219753, -10.149345405975755, -10.360416735975754, -10.360416735975754, -10.360416735975754]
								}, {
									"case":	209,
									"scores":	[-10.848227071219753, -10.149345405975755, -10.360416735975754, -10.360416735975754, -10.360416735975754]
								}, {
									"case":	210,
									"scores":	[-10.848227071219753, -10.149345405975755, -10.360416735975754, -10.360416735975754, -10.360416735975754]
								}, {
									"case":	211,
									"scores":	[-10.848227071219753, -10.149345405975755, -10.360416735975754, -10.360416735975754, -10.360416735975754]
								}, {
									"case":	212,
									"scores":	[-10.848227071219753, -10.149345405975755, -10.360416735975754, -10.360416735975754, -10.360416735975754]
								}]
						}, {
							"switch":	16,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	337,
							"begin_column":	3,
							"end_line":	337,
							"end_column":	20,
							"patch_codes":	["if (!__is_neg(\"\", \"L337\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    defcompression = 32773;\n", "{\n}\n", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defcompression = (opt != 0)", "defcompression = (opt == 0)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.9613151859757547, -7.3057407059757544, -7.1973531859757545, -7.1973531859757545, -7.1973531859757545]
								}, {
									"case":	2,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	3,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	4,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	5,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	6,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	7,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	8,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	9,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	10,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	11,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	12,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	13,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	14,
									"scores":	[-6.6191857859757546]
								}]
						}]
				}, {
					"line":	354,
					"switches":	[{
							"switch":	17,
							"types":	[[], [], [], [], [203, 204, 205, 206, 207, 208, 209, 210, 211, 212], [], [], [], [], [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], [], [], [], [], [], []],
							"begin_line":	355,
							"begin_column":	1,
							"end_line":	355,
							"end_column":	1,
							"patch_codes":	["(opt)++", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (3)", "comma = (32773)", "comma = (34661)", "comma = (4)", "comma = (5)", "comma = (7)", "comma = (8)", "comma = (opt)[1]", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (3)", "compression = (32773)", "compression = (34661)", "compression = (4)", "compression = (5)", "compression = (7)", "compression = (8)", "config = (0)", "config = (1)", "config = (2)", "config = (3)", "config = (32773)", "config = (34661)", "config = (4)", "config = (5)", "config = (7)", "config = (8)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (3)", "defg3opts = (32773)", "defg3opts = (34661)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (8)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (3)", "defpredictor = (32773)", "defpredictor = (34661)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = atoi((opt) + 1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (3)", "fillorder = (32773)", "fillorder = (34661)", "fillorder = (4)", "fillorder = (5)", "fillorder = (7)", "fillorder = (8)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (3)", "g3opts = (32773)", "g3opts = (34661)", "g3opts = (4)", "g3opts = (5)", "g3opts = (7)", "g3opts = (8)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (3)", "jpegcolormode = (32773)", "jpegcolormode = (34661)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (3)", "orientation = (32773)", "orientation = (34661)", "orientation = (4)", "orientation = (5)", "orientation = (7)", "orientation = (8)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (3)", "outtiled = (32773)", "outtiled = (34661)", "outtiled = (4)", "outtiled = (5)", "outtiled = (7)", "outtiled = (8)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (3)", "pageNum = (32773)", "pageNum = (34661)", "pageNum = (4)", "pageNum = (5)", "pageNum = (7)", "pageNum = (8)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (3)", "predictor = (32773)", "predictor = (34661)", "predictor = (4)", "predictor = (5)", "predictor = (7)", "predictor = (8)", "processG3Options((opt))", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (3)", "quality = (32773)", "quality = (34661)", "quality = (4)", "quality = (5)", "quality = (7)", "quality = (8)", "quality = atoi((opt) + 1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (3)", "rowsperstrip = (32773)", "rowsperstrip = (34661)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (8)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (3)", "tilelength = (32773)", "tilelength = (34661)", "tilelength = (4)", "tilelength = (5)", "tilelength = (7)", "tilelength = (8)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (3)", "tilewidth = (32773)", "tilewidth = (34661)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (8)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "processG3Options(opt)", "usage()", "if (__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 0;\n", "if (__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 1;\n", "if (__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 2;\n", "if (__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 32773;\n", "if (__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 34661;\n", "if (__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 3;\n", "if (__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 4;\n", "if (__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 5;\n", "if (__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 7;\n", "if (__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 8;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	2,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	3,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	4,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	5,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	6,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	7,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	8,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	9,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	10,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	11,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	12,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	13,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	14,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	15,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	16,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	17,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	18,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	19,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	20,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	21,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	22,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	23,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	24,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	25,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	26,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	27,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	28,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	29,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	30,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	31,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	32,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	33,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	34,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	35,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	36,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	37,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	38,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	39,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	40,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	41,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	42,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	43,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	44,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	45,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	46,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	47,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	48,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	49,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	50,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	51,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	52,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	53,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	54,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	55,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	56,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	57,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	58,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	59,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	60,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	61,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	62,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	63,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	64,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	65,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	66,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	67,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	68,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	69,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	70,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	71,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	72,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	73,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	74,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	75,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	76,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	77,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	78,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	79,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	80,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	81,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	82,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	83,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	84,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	85,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	86,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	87,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	88,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	89,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	90,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	91,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	92,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	93,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	94,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	95,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	96,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	97,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	98,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	99,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	100,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	101,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	102,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	103,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	104,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	105,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	106,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	107,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	108,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	109,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	110,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	111,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	112,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	113,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	114,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	115,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	116,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	117,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	118,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	119,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	120,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	121,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	122,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	123,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	124,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	125,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	126,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	127,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	128,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	129,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	130,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	131,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	132,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	133,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	134,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	135,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	136,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	137,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	138,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	139,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	140,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	141,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	142,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	143,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	144,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	145,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	146,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	147,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	148,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	149,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	150,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	151,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	152,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	153,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	154,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	155,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	156,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	157,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	158,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	159,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	160,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	161,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	162,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	163,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	164,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	165,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	166,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	167,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	168,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	169,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	170,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	171,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	172,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	173,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	174,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	175,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	176,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	177,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	178,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	179,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	180,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	181,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	182,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	183,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	184,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	185,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	186,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	187,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	188,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	189,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	190,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	191,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	192,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	193,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	194,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	195,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	196,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	197,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	198,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	199,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	200,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	201,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	202,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	203,
									"scores":	[-6.7407680223874973, -6.465961957143497, -6.2529576871434962, -6.2529576871434962, -6.2529576871434962]
								}, {
									"case":	204,
									"scores":	[-8.7592140223874964, -8.484407957143496, -8.2714036871434971, -8.2714036871434971, -8.2714036871434971]
								}, {
									"case":	205,
									"scores":	[-8.7592140223874964, -8.484407957143496, -8.2714036871434971, -8.2714036871434971, -8.2714036871434971]
								}, {
									"case":	206,
									"scores":	[-8.7592140223874964, -8.484407957143496, -8.2714036871434971, -8.2714036871434971, -8.2714036871434971]
								}, {
									"case":	207,
									"scores":	[-8.7592140223874964, -8.484407957143496, -8.2714036871434971, -8.2714036871434971, -8.2714036871434971]
								}, {
									"case":	208,
									"scores":	[-8.7592140223874964, -8.484407957143496, -8.2714036871434971, -8.2714036871434971, -8.2714036871434971]
								}, {
									"case":	209,
									"scores":	[-8.7592140223874964, -8.484407957143496, -8.2714036871434971, -8.2714036871434971, -8.2714036871434971]
								}, {
									"case":	210,
									"scores":	[-8.7592140223874964, -8.484407957143496, -8.2714036871434971, -8.2714036871434971, -8.2714036871434971]
								}, {
									"case":	211,
									"scores":	[-8.7592140223874964, -8.484407957143496, -8.2714036871434971, -8.2714036871434971, -8.2714036871434971]
								}, {
									"case":	212,
									"scores":	[-8.7592140223874964, -8.484407957143496, -8.2714036871434971, -8.2714036871434971, -8.2714036871434971]
								}]
						}, {
							"switch":	18,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	355,
							"begin_column":	3,
							"end_line":	355,
							"end_column":	20,
							"patch_codes":	["if (!__is_neg(\"\", \"L355\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    defcompression = 3;\n", "{\n}\n", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defcompression = (opt != 0)", "defcompression = (opt == 0)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.4042031371434964, -4.7886358061434962, -4.6402411371434962, -4.6402411371434962, -4.6402411371434962]
								}, {
									"case":	2,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	3,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	4,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	5,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	6,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	7,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	8,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	9,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	10,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	11,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	12,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	13,
									"scores":	[-4.2756717371434965]
								}, {
									"case":	14,
									"scores":	[-4.2756717371434965]
								}]
						}]
				}, {
					"line":	356,
					"switches":	[{
							"switch":	21,
							"types":	[[], [], [], [], [203, 204, 205, 206, 207, 208, 209, 210, 211, 212], [], [], [], [], [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], [], [], [], [], [], []],
							"begin_line":	357,
							"begin_column":	1,
							"end_line":	357,
							"end_column":	1,
							"patch_codes":	["(opt)++", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (3)", "comma = (32773)", "comma = (34661)", "comma = (4)", "comma = (5)", "comma = (7)", "comma = (8)", "comma = (opt)[1]", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (3)", "compression = (32773)", "compression = (34661)", "compression = (4)", "compression = (5)", "compression = (7)", "compression = (8)", "config = (0)", "config = (1)", "config = (2)", "config = (3)", "config = (32773)", "config = (34661)", "config = (4)", "config = (5)", "config = (7)", "config = (8)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (3)", "defg3opts = (32773)", "defg3opts = (34661)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (8)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (3)", "defpredictor = (32773)", "defpredictor = (34661)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = atoi((opt) + 1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (3)", "fillorder = (32773)", "fillorder = (34661)", "fillorder = (4)", "fillorder = (5)", "fillorder = (7)", "fillorder = (8)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (3)", "g3opts = (32773)", "g3opts = (34661)", "g3opts = (4)", "g3opts = (5)", "g3opts = (7)", "g3opts = (8)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (3)", "jpegcolormode = (32773)", "jpegcolormode = (34661)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (3)", "orientation = (32773)", "orientation = (34661)", "orientation = (4)", "orientation = (5)", "orientation = (7)", "orientation = (8)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (3)", "outtiled = (32773)", "outtiled = (34661)", "outtiled = (4)", "outtiled = (5)", "outtiled = (7)", "outtiled = (8)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (3)", "pageNum = (32773)", "pageNum = (34661)", "pageNum = (4)", "pageNum = (5)", "pageNum = (7)", "pageNum = (8)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (3)", "predictor = (32773)", "predictor = (34661)", "predictor = (4)", "predictor = (5)", "predictor = (7)", "predictor = (8)", "processG3Options((opt))", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (3)", "quality = (32773)", "quality = (34661)", "quality = (4)", "quality = (5)", "quality = (7)", "quality = (8)", "quality = atoi((opt) + 1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (3)", "rowsperstrip = (32773)", "rowsperstrip = (34661)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (8)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (3)", "tilelength = (32773)", "tilelength = (34661)", "tilelength = (4)", "tilelength = (5)", "tilelength = (7)", "tilelength = (8)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (3)", "tilewidth = (32773)", "tilewidth = (34661)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (8)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "processG3Options(opt)", "usage()", "if (__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 0;\n", "if (__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 1;\n", "if (__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 2;\n", "if (__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 32773;\n", "if (__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 34661;\n", "if (__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 3;\n", "if (__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 4;\n", "if (__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 5;\n", "if (__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 7;\n", "if (__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 8;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.11405007860334]
								}, {
									"case":	2,
									"scores":	[-4.11405007860334]
								}, {
									"case":	3,
									"scores":	[-4.11405007860334]
								}, {
									"case":	4,
									"scores":	[-4.11405007860334]
								}, {
									"case":	5,
									"scores":	[-4.11405007860334]
								}, {
									"case":	6,
									"scores":	[-4.11405007860334]
								}, {
									"case":	7,
									"scores":	[-4.11405007860334]
								}, {
									"case":	8,
									"scores":	[-4.11405007860334]
								}, {
									"case":	9,
									"scores":	[-4.11405007860334]
								}, {
									"case":	10,
									"scores":	[-4.11405007860334]
								}, {
									"case":	11,
									"scores":	[-4.11405007860334]
								}, {
									"case":	12,
									"scores":	[-4.11405007860334]
								}, {
									"case":	13,
									"scores":	[-4.11405007860334]
								}, {
									"case":	14,
									"scores":	[-4.11405007860334]
								}, {
									"case":	15,
									"scores":	[-4.11405007860334]
								}, {
									"case":	16,
									"scores":	[-4.11405007860334]
								}, {
									"case":	17,
									"scores":	[-4.11405007860334]
								}, {
									"case":	18,
									"scores":	[-4.11405007860334]
								}, {
									"case":	19,
									"scores":	[-4.11405007860334]
								}, {
									"case":	20,
									"scores":	[-4.11405007860334]
								}, {
									"case":	21,
									"scores":	[-4.11405007860334]
								}, {
									"case":	22,
									"scores":	[-4.11405007860334]
								}, {
									"case":	23,
									"scores":	[-4.11405007860334]
								}, {
									"case":	24,
									"scores":	[-4.11405007860334]
								}, {
									"case":	25,
									"scores":	[-4.11405007860334]
								}, {
									"case":	26,
									"scores":	[-4.11405007860334]
								}, {
									"case":	27,
									"scores":	[-4.11405007860334]
								}, {
									"case":	28,
									"scores":	[-4.11405007860334]
								}, {
									"case":	29,
									"scores":	[-4.11405007860334]
								}, {
									"case":	30,
									"scores":	[-4.11405007860334]
								}, {
									"case":	31,
									"scores":	[-4.11405007860334]
								}, {
									"case":	32,
									"scores":	[-4.11405007860334]
								}, {
									"case":	33,
									"scores":	[-4.11405007860334]
								}, {
									"case":	34,
									"scores":	[-4.11405007860334]
								}, {
									"case":	35,
									"scores":	[-4.11405007860334]
								}, {
									"case":	36,
									"scores":	[-4.11405007860334]
								}, {
									"case":	37,
									"scores":	[-4.11405007860334]
								}, {
									"case":	38,
									"scores":	[-4.11405007860334]
								}, {
									"case":	39,
									"scores":	[-4.11405007860334]
								}, {
									"case":	40,
									"scores":	[-4.11405007860334]
								}, {
									"case":	41,
									"scores":	[-4.11405007860334]
								}, {
									"case":	42,
									"scores":	[-4.11405007860334]
								}, {
									"case":	43,
									"scores":	[-4.11405007860334]
								}, {
									"case":	44,
									"scores":	[-4.11405007860334]
								}, {
									"case":	45,
									"scores":	[-4.11405007860334]
								}, {
									"case":	46,
									"scores":	[-4.11405007860334]
								}, {
									"case":	47,
									"scores":	[-4.11405007860334]
								}, {
									"case":	48,
									"scores":	[-4.11405007860334]
								}, {
									"case":	49,
									"scores":	[-4.11405007860334]
								}, {
									"case":	50,
									"scores":	[-4.11405007860334]
								}, {
									"case":	51,
									"scores":	[-4.11405007860334]
								}, {
									"case":	52,
									"scores":	[-4.11405007860334]
								}, {
									"case":	53,
									"scores":	[-4.11405007860334]
								}, {
									"case":	54,
									"scores":	[-4.11405007860334]
								}, {
									"case":	55,
									"scores":	[-4.11405007860334]
								}, {
									"case":	56,
									"scores":	[-4.11405007860334]
								}, {
									"case":	57,
									"scores":	[-4.11405007860334]
								}, {
									"case":	58,
									"scores":	[-4.11405007860334]
								}, {
									"case":	59,
									"scores":	[-4.11405007860334]
								}, {
									"case":	60,
									"scores":	[-4.11405007860334]
								}, {
									"case":	61,
									"scores":	[-4.11405007860334]
								}, {
									"case":	62,
									"scores":	[-4.11405007860334]
								}, {
									"case":	63,
									"scores":	[-4.11405007860334]
								}, {
									"case":	64,
									"scores":	[-4.11405007860334]
								}, {
									"case":	65,
									"scores":	[-4.11405007860334]
								}, {
									"case":	66,
									"scores":	[-4.11405007860334]
								}, {
									"case":	67,
									"scores":	[-4.11405007860334]
								}, {
									"case":	68,
									"scores":	[-4.11405007860334]
								}, {
									"case":	69,
									"scores":	[-4.11405007860334]
								}, {
									"case":	70,
									"scores":	[-4.11405007860334]
								}, {
									"case":	71,
									"scores":	[-4.11405007860334]
								}, {
									"case":	72,
									"scores":	[-4.11405007860334]
								}, {
									"case":	73,
									"scores":	[-4.11405007860334]
								}, {
									"case":	74,
									"scores":	[-4.11405007860334]
								}, {
									"case":	75,
									"scores":	[-4.11405007860334]
								}, {
									"case":	76,
									"scores":	[-4.11405007860334]
								}, {
									"case":	77,
									"scores":	[-4.11405007860334]
								}, {
									"case":	78,
									"scores":	[-4.11405007860334]
								}, {
									"case":	79,
									"scores":	[-4.11405007860334]
								}, {
									"case":	80,
									"scores":	[-4.11405007860334]
								}, {
									"case":	81,
									"scores":	[-4.11405007860334]
								}, {
									"case":	82,
									"scores":	[-4.11405007860334]
								}, {
									"case":	83,
									"scores":	[-4.11405007860334]
								}, {
									"case":	84,
									"scores":	[-4.11405007860334]
								}, {
									"case":	85,
									"scores":	[-4.11405007860334]
								}, {
									"case":	86,
									"scores":	[-4.11405007860334]
								}, {
									"case":	87,
									"scores":	[-4.11405007860334]
								}, {
									"case":	88,
									"scores":	[-4.11405007860334]
								}, {
									"case":	89,
									"scores":	[-4.11405007860334]
								}, {
									"case":	90,
									"scores":	[-4.11405007860334]
								}, {
									"case":	91,
									"scores":	[-4.11405007860334]
								}, {
									"case":	92,
									"scores":	[-4.11405007860334]
								}, {
									"case":	93,
									"scores":	[-4.11405007860334]
								}, {
									"case":	94,
									"scores":	[-4.11405007860334]
								}, {
									"case":	95,
									"scores":	[-4.11405007860334]
								}, {
									"case":	96,
									"scores":	[-4.11405007860334]
								}, {
									"case":	97,
									"scores":	[-4.11405007860334]
								}, {
									"case":	98,
									"scores":	[-4.11405007860334]
								}, {
									"case":	99,
									"scores":	[-4.11405007860334]
								}, {
									"case":	100,
									"scores":	[-4.11405007860334]
								}, {
									"case":	101,
									"scores":	[-4.11405007860334]
								}, {
									"case":	102,
									"scores":	[-4.11405007860334]
								}, {
									"case":	103,
									"scores":	[-4.11405007860334]
								}, {
									"case":	104,
									"scores":	[-4.11405007860334]
								}, {
									"case":	105,
									"scores":	[-4.11405007860334]
								}, {
									"case":	106,
									"scores":	[-4.11405007860334]
								}, {
									"case":	107,
									"scores":	[-4.11405007860334]
								}, {
									"case":	108,
									"scores":	[-4.11405007860334]
								}, {
									"case":	109,
									"scores":	[-4.11405007860334]
								}, {
									"case":	110,
									"scores":	[-4.11405007860334]
								}, {
									"case":	111,
									"scores":	[-4.11405007860334]
								}, {
									"case":	112,
									"scores":	[-4.11405007860334]
								}, {
									"case":	113,
									"scores":	[-4.11405007860334]
								}, {
									"case":	114,
									"scores":	[-4.11405007860334]
								}, {
									"case":	115,
									"scores":	[-4.11405007860334]
								}, {
									"case":	116,
									"scores":	[-4.11405007860334]
								}, {
									"case":	117,
									"scores":	[-4.11405007860334]
								}, {
									"case":	118,
									"scores":	[-4.11405007860334]
								}, {
									"case":	119,
									"scores":	[-4.11405007860334]
								}, {
									"case":	120,
									"scores":	[-4.11405007860334]
								}, {
									"case":	121,
									"scores":	[-4.11405007860334]
								}, {
									"case":	122,
									"scores":	[-4.11405007860334]
								}, {
									"case":	123,
									"scores":	[-4.11405007860334]
								}, {
									"case":	124,
									"scores":	[-4.11405007860334]
								}, {
									"case":	125,
									"scores":	[-4.11405007860334]
								}, {
									"case":	126,
									"scores":	[-4.11405007860334]
								}, {
									"case":	127,
									"scores":	[-4.11405007860334]
								}, {
									"case":	128,
									"scores":	[-4.11405007860334]
								}, {
									"case":	129,
									"scores":	[-4.11405007860334]
								}, {
									"case":	130,
									"scores":	[-4.11405007860334]
								}, {
									"case":	131,
									"scores":	[-4.11405007860334]
								}, {
									"case":	132,
									"scores":	[-4.11405007860334]
								}, {
									"case":	133,
									"scores":	[-4.11405007860334]
								}, {
									"case":	134,
									"scores":	[-4.11405007860334]
								}, {
									"case":	135,
									"scores":	[-4.11405007860334]
								}, {
									"case":	136,
									"scores":	[-4.11405007860334]
								}, {
									"case":	137,
									"scores":	[-4.11405007860334]
								}, {
									"case":	138,
									"scores":	[-4.11405007860334]
								}, {
									"case":	139,
									"scores":	[-4.11405007860334]
								}, {
									"case":	140,
									"scores":	[-4.11405007860334]
								}, {
									"case":	141,
									"scores":	[-4.11405007860334]
								}, {
									"case":	142,
									"scores":	[-4.11405007860334]
								}, {
									"case":	143,
									"scores":	[-4.11405007860334]
								}, {
									"case":	144,
									"scores":	[-4.11405007860334]
								}, {
									"case":	145,
									"scores":	[-4.11405007860334]
								}, {
									"case":	146,
									"scores":	[-4.11405007860334]
								}, {
									"case":	147,
									"scores":	[-4.11405007860334]
								}, {
									"case":	148,
									"scores":	[-4.11405007860334]
								}, {
									"case":	149,
									"scores":	[-4.11405007860334]
								}, {
									"case":	150,
									"scores":	[-4.11405007860334]
								}, {
									"case":	151,
									"scores":	[-4.11405007860334]
								}, {
									"case":	152,
									"scores":	[-4.11405007860334]
								}, {
									"case":	153,
									"scores":	[-4.11405007860334]
								}, {
									"case":	154,
									"scores":	[-4.11405007860334]
								}, {
									"case":	155,
									"scores":	[-4.11405007860334]
								}, {
									"case":	156,
									"scores":	[-4.11405007860334]
								}, {
									"case":	157,
									"scores":	[-4.11405007860334]
								}, {
									"case":	158,
									"scores":	[-4.11405007860334]
								}, {
									"case":	159,
									"scores":	[-4.11405007860334]
								}, {
									"case":	160,
									"scores":	[-4.11405007860334]
								}, {
									"case":	161,
									"scores":	[-4.11405007860334]
								}, {
									"case":	162,
									"scores":	[-4.11405007860334]
								}, {
									"case":	163,
									"scores":	[-4.11405007860334]
								}, {
									"case":	164,
									"scores":	[-4.11405007860334]
								}, {
									"case":	165,
									"scores":	[-4.11405007860334]
								}, {
									"case":	166,
									"scores":	[-4.11405007860334]
								}, {
									"case":	167,
									"scores":	[-4.11405007860334]
								}, {
									"case":	168,
									"scores":	[-4.11405007860334]
								}, {
									"case":	169,
									"scores":	[-4.11405007860334]
								}, {
									"case":	170,
									"scores":	[-4.11405007860334]
								}, {
									"case":	171,
									"scores":	[-4.11405007860334]
								}, {
									"case":	172,
									"scores":	[-4.11405007860334]
								}, {
									"case":	173,
									"scores":	[-4.11405007860334]
								}, {
									"case":	174,
									"scores":	[-4.11405007860334]
								}, {
									"case":	175,
									"scores":	[-4.11405007860334]
								}, {
									"case":	176,
									"scores":	[-4.11405007860334]
								}, {
									"case":	177,
									"scores":	[-4.11405007860334]
								}, {
									"case":	178,
									"scores":	[-4.11405007860334]
								}, {
									"case":	179,
									"scores":	[-4.11405007860334]
								}, {
									"case":	180,
									"scores":	[-4.11405007860334]
								}, {
									"case":	181,
									"scores":	[-4.11405007860334]
								}, {
									"case":	182,
									"scores":	[-4.11405007860334]
								}, {
									"case":	183,
									"scores":	[-4.11405007860334]
								}, {
									"case":	184,
									"scores":	[-4.11405007860334]
								}, {
									"case":	185,
									"scores":	[-4.11405007860334]
								}, {
									"case":	186,
									"scores":	[-4.11405007860334]
								}, {
									"case":	187,
									"scores":	[-4.11405007860334]
								}, {
									"case":	188,
									"scores":	[-4.11405007860334]
								}, {
									"case":	189,
									"scores":	[-4.11405007860334]
								}, {
									"case":	190,
									"scores":	[-4.11405007860334]
								}, {
									"case":	191,
									"scores":	[-4.11405007860334]
								}, {
									"case":	192,
									"scores":	[-4.11405007860334]
								}, {
									"case":	193,
									"scores":	[-4.11405007860334]
								}, {
									"case":	194,
									"scores":	[-4.11405007860334]
								}, {
									"case":	195,
									"scores":	[-4.11405007860334]
								}, {
									"case":	196,
									"scores":	[-4.11405007860334]
								}, {
									"case":	197,
									"scores":	[-4.11405007860334]
								}, {
									"case":	198,
									"scores":	[-4.11405007860334]
								}, {
									"case":	199,
									"scores":	[-4.11405007860334]
								}, {
									"case":	200,
									"scores":	[-4.11405007860334]
								}, {
									"case":	201,
									"scores":	[-4.11405007860334]
								}, {
									"case":	202,
									"scores":	[-4.11405007860334]
								}, {
									"case":	203,
									"scores":	[-6.32464536384734, -5.62576369860334, -5.83683502860334, -5.83683502860334, -5.83683502860334]
								}, {
									"case":	204,
									"scores":	[-8.34309136384734, -7.64420969860334, -7.85528102860334, -7.85528102860334, -7.85528102860334]
								}, {
									"case":	205,
									"scores":	[-8.34309136384734, -7.64420969860334, -7.85528102860334, -7.85528102860334, -7.85528102860334]
								}, {
									"case":	206,
									"scores":	[-8.34309136384734, -7.64420969860334, -7.85528102860334, -7.85528102860334, -7.85528102860334]
								}, {
									"case":	207,
									"scores":	[-8.34309136384734, -7.64420969860334, -7.85528102860334, -7.85528102860334, -7.85528102860334]
								}, {
									"case":	208,
									"scores":	[-8.34309136384734, -7.64420969860334, -7.85528102860334, -7.85528102860334, -7.85528102860334]
								}, {
									"case":	209,
									"scores":	[-8.34309136384734, -7.64420969860334, -7.85528102860334, -7.85528102860334, -7.85528102860334]
								}, {
									"case":	210,
									"scores":	[-8.34309136384734, -7.64420969860334, -7.85528102860334, -7.85528102860334, -7.85528102860334]
								}, {
									"case":	211,
									"scores":	[-8.34309136384734, -7.64420969860334, -7.85528102860334, -7.85528102860334, -7.85528102860334]
								}, {
									"case":	212,
									"scores":	[-8.34309136384734, -7.64420969860334, -7.85528102860334, -7.85528102860334, -7.85528102860334]
								}]
						}, {
							"switch":	22,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	357,
							"begin_column":	3,
							"end_line":	357,
							"end_column":	20,
							"patch_codes":	["if (!__is_neg(\"\", \"L357\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    defcompression = 4;\n", "{\n}\n", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defcompression = (opt != 0)", "defcompression = (opt == 0)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.45617947860334, -4.80060499860334, -4.69221747860334, -4.69221747860334, -4.69221747860334]
								}, {
									"case":	2,
									"scores":	[-4.11405007860334]
								}, {
									"case":	3,
									"scores":	[-4.11405007860334]
								}, {
									"case":	4,
									"scores":	[-4.11405007860334]
								}, {
									"case":	5,
									"scores":	[-4.11405007860334]
								}, {
									"case":	6,
									"scores":	[-4.11405007860334]
								}, {
									"case":	7,
									"scores":	[-4.11405007860334]
								}, {
									"case":	8,
									"scores":	[-4.11405007860334]
								}, {
									"case":	9,
									"scores":	[-4.11405007860334]
								}, {
									"case":	10,
									"scores":	[-4.11405007860334]
								}, {
									"case":	11,
									"scores":	[-4.11405007860334]
								}, {
									"case":	12,
									"scores":	[-4.11405007860334]
								}, {
									"case":	13,
									"scores":	[-4.11405007860334]
								}, {
									"case":	14,
									"scores":	[-4.11405007860334]
								}]
						}]
				}, {
					"line":	361,
					"switches":	[{
							"switch":	23,
							"types":	[[], [], [], [], [209, 210, 211, 212, 213, 214, 215, 216, 217, 218], [], [], [], [], [181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], [], [], [], [], [], []],
							"begin_line":	362,
							"begin_column":	1,
							"end_line":	362,
							"end_column":	1,
							"patch_codes":	["(cp)++", "(opt)++", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (3)", "comma = (32773)", "comma = (34661)", "comma = (4)", "comma = (5)", "comma = (7)", "comma = (8)", "comma = (cp)[1]", "comma = (opt)[1]", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (3)", "compression = (32773)", "compression = (34661)", "compression = (4)", "compression = (5)", "compression = (7)", "compression = (8)", "config = (0)", "config = (1)", "config = (2)", "config = (3)", "config = (32773)", "config = (34661)", "config = (4)", "config = (5)", "config = (7)", "config = (8)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (3)", "defg3opts = (32773)", "defg3opts = (34661)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (8)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (3)", "defpredictor = (32773)", "defpredictor = (34661)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = atoi((cp) + 1)", "defpredictor = atoi((opt) + 1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (3)", "fillorder = (32773)", "fillorder = (34661)", "fillorder = (4)", "fillorder = (5)", "fillorder = (7)", "fillorder = (8)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (3)", "g3opts = (32773)", "g3opts = (34661)", "g3opts = (4)", "g3opts = (5)", "g3opts = (7)", "g3opts = (8)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (3)", "jpegcolormode = (32773)", "jpegcolormode = (34661)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (3)", "orientation = (32773)", "orientation = (34661)", "orientation = (4)", "orientation = (5)", "orientation = (7)", "orientation = (8)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (3)", "outtiled = (32773)", "outtiled = (34661)", "outtiled = (4)", "outtiled = (5)", "outtiled = (7)", "outtiled = (8)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (3)", "pageNum = (32773)", "pageNum = (34661)", "pageNum = (4)", "pageNum = (5)", "pageNum = (7)", "pageNum = (8)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (3)", "predictor = (32773)", "predictor = (34661)", "predictor = (4)", "predictor = (5)", "predictor = (7)", "predictor = (8)", "processG3Options((cp))", "processG3Options((opt))", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (3)", "quality = (32773)", "quality = (34661)", "quality = (4)", "quality = (5)", "quality = (7)", "quality = (8)", "quality = atoi((cp) + 1)", "quality = atoi((opt) + 1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (3)", "rowsperstrip = (32773)", "rowsperstrip = (34661)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (8)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (3)", "tilelength = (32773)", "tilelength = (34661)", "tilelength = (4)", "tilelength = (5)", "tilelength = (7)", "tilelength = (8)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (3)", "tilewidth = (32773)", "tilewidth = (34661)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (8)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "defpredictor = atoi(cp + 1)", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "processG3Options(opt)", "usage()", "if (__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 0;\n", "if (__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 1;\n", "if (__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 2;\n", "if (__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 32773;\n", "if (__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 34661;\n", "if (__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 3;\n", "if (__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 4;\n", "if (__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 5;\n", "if (__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 7;\n", "if (__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 8;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.09384737128582]
								}, {
									"case":	2,
									"scores":	[-4.09384737128582]
								}, {
									"case":	3,
									"scores":	[-4.09384737128582]
								}, {
									"case":	4,
									"scores":	[-4.09384737128582]
								}, {
									"case":	5,
									"scores":	[-4.09384737128582]
								}, {
									"case":	6,
									"scores":	[-4.09384737128582]
								}, {
									"case":	7,
									"scores":	[-4.09384737128582]
								}, {
									"case":	8,
									"scores":	[-4.09384737128582]
								}, {
									"case":	9,
									"scores":	[-4.09384737128582]
								}, {
									"case":	10,
									"scores":	[-4.09384737128582]
								}, {
									"case":	11,
									"scores":	[-4.09384737128582]
								}, {
									"case":	12,
									"scores":	[-4.09384737128582]
								}, {
									"case":	13,
									"scores":	[-4.09384737128582]
								}, {
									"case":	14,
									"scores":	[-4.09384737128582]
								}, {
									"case":	15,
									"scores":	[-4.09384737128582]
								}, {
									"case":	16,
									"scores":	[-4.09384737128582]
								}, {
									"case":	17,
									"scores":	[-4.09384737128582]
								}, {
									"case":	18,
									"scores":	[-4.09384737128582]
								}, {
									"case":	19,
									"scores":	[-4.09384737128582]
								}, {
									"case":	20,
									"scores":	[-4.09384737128582]
								}, {
									"case":	21,
									"scores":	[-4.09384737128582]
								}, {
									"case":	22,
									"scores":	[-4.09384737128582]
								}, {
									"case":	23,
									"scores":	[-4.09384737128582]
								}, {
									"case":	24,
									"scores":	[-4.09384737128582]
								}, {
									"case":	25,
									"scores":	[-4.09384737128582]
								}, {
									"case":	26,
									"scores":	[-4.09384737128582]
								}, {
									"case":	27,
									"scores":	[-4.09384737128582]
								}, {
									"case":	28,
									"scores":	[-4.09384737128582]
								}, {
									"case":	29,
									"scores":	[-4.09384737128582]
								}, {
									"case":	30,
									"scores":	[-4.09384737128582]
								}, {
									"case":	31,
									"scores":	[-4.09384737128582]
								}, {
									"case":	32,
									"scores":	[-4.09384737128582]
								}, {
									"case":	33,
									"scores":	[-4.09384737128582]
								}, {
									"case":	34,
									"scores":	[-4.09384737128582]
								}, {
									"case":	35,
									"scores":	[-4.09384737128582]
								}, {
									"case":	36,
									"scores":	[-4.09384737128582]
								}, {
									"case":	37,
									"scores":	[-4.09384737128582]
								}, {
									"case":	38,
									"scores":	[-4.09384737128582]
								}, {
									"case":	39,
									"scores":	[-4.09384737128582]
								}, {
									"case":	40,
									"scores":	[-4.09384737128582]
								}, {
									"case":	41,
									"scores":	[-4.09384737128582]
								}, {
									"case":	42,
									"scores":	[-4.09384737128582]
								}, {
									"case":	43,
									"scores":	[-4.09384737128582]
								}, {
									"case":	44,
									"scores":	[-4.09384737128582]
								}, {
									"case":	45,
									"scores":	[-4.09384737128582]
								}, {
									"case":	46,
									"scores":	[-4.09384737128582]
								}, {
									"case":	47,
									"scores":	[-4.09384737128582]
								}, {
									"case":	48,
									"scores":	[-4.09384737128582]
								}, {
									"case":	49,
									"scores":	[-4.09384737128582]
								}, {
									"case":	50,
									"scores":	[-4.09384737128582]
								}, {
									"case":	51,
									"scores":	[-4.09384737128582]
								}, {
									"case":	52,
									"scores":	[-4.09384737128582]
								}, {
									"case":	53,
									"scores":	[-4.09384737128582]
								}, {
									"case":	54,
									"scores":	[-4.09384737128582]
								}, {
									"case":	55,
									"scores":	[-4.09384737128582]
								}, {
									"case":	56,
									"scores":	[-4.09384737128582]
								}, {
									"case":	57,
									"scores":	[-4.09384737128582]
								}, {
									"case":	58,
									"scores":	[-4.09384737128582]
								}, {
									"case":	59,
									"scores":	[-4.09384737128582]
								}, {
									"case":	60,
									"scores":	[-4.09384737128582]
								}, {
									"case":	61,
									"scores":	[-4.09384737128582]
								}, {
									"case":	62,
									"scores":	[-4.09384737128582]
								}, {
									"case":	63,
									"scores":	[-4.09384737128582]
								}, {
									"case":	64,
									"scores":	[-4.09384737128582]
								}, {
									"case":	65,
									"scores":	[-4.09384737128582]
								}, {
									"case":	66,
									"scores":	[-4.09384737128582]
								}, {
									"case":	67,
									"scores":	[-4.09384737128582]
								}, {
									"case":	68,
									"scores":	[-4.09384737128582]
								}, {
									"case":	69,
									"scores":	[-4.09384737128582]
								}, {
									"case":	70,
									"scores":	[-4.09384737128582]
								}, {
									"case":	71,
									"scores":	[-4.09384737128582]
								}, {
									"case":	72,
									"scores":	[-4.09384737128582]
								}, {
									"case":	73,
									"scores":	[-4.09384737128582]
								}, {
									"case":	74,
									"scores":	[-4.09384737128582]
								}, {
									"case":	75,
									"scores":	[-4.09384737128582]
								}, {
									"case":	76,
									"scores":	[-4.09384737128582]
								}, {
									"case":	77,
									"scores":	[-4.09384737128582]
								}, {
									"case":	78,
									"scores":	[-4.09384737128582]
								}, {
									"case":	79,
									"scores":	[-4.09384737128582]
								}, {
									"case":	80,
									"scores":	[-4.09384737128582]
								}, {
									"case":	81,
									"scores":	[-4.09384737128582]
								}, {
									"case":	82,
									"scores":	[-4.09384737128582]
								}, {
									"case":	83,
									"scores":	[-4.09384737128582]
								}, {
									"case":	84,
									"scores":	[-4.09384737128582]
								}, {
									"case":	85,
									"scores":	[-4.09384737128582]
								}, {
									"case":	86,
									"scores":	[-4.09384737128582]
								}, {
									"case":	87,
									"scores":	[-4.09384737128582]
								}, {
									"case":	88,
									"scores":	[-4.09384737128582]
								}, {
									"case":	89,
									"scores":	[-4.09384737128582]
								}, {
									"case":	90,
									"scores":	[-4.09384737128582]
								}, {
									"case":	91,
									"scores":	[-4.09384737128582]
								}, {
									"case":	92,
									"scores":	[-4.09384737128582]
								}, {
									"case":	93,
									"scores":	[-4.09384737128582]
								}, {
									"case":	94,
									"scores":	[-4.09384737128582]
								}, {
									"case":	95,
									"scores":	[-4.09384737128582]
								}, {
									"case":	96,
									"scores":	[-4.09384737128582]
								}, {
									"case":	97,
									"scores":	[-4.09384737128582]
								}, {
									"case":	98,
									"scores":	[-4.09384737128582]
								}, {
									"case":	99,
									"scores":	[-4.09384737128582]
								}, {
									"case":	100,
									"scores":	[-4.09384737128582]
								}, {
									"case":	101,
									"scores":	[-4.09384737128582]
								}, {
									"case":	102,
									"scores":	[-4.09384737128582]
								}, {
									"case":	103,
									"scores":	[-4.09384737128582]
								}, {
									"case":	104,
									"scores":	[-4.09384737128582]
								}, {
									"case":	105,
									"scores":	[-4.09384737128582]
								}, {
									"case":	106,
									"scores":	[-4.09384737128582]
								}, {
									"case":	107,
									"scores":	[-4.09384737128582]
								}, {
									"case":	108,
									"scores":	[-4.09384737128582]
								}, {
									"case":	109,
									"scores":	[-4.09384737128582]
								}, {
									"case":	110,
									"scores":	[-4.09384737128582]
								}, {
									"case":	111,
									"scores":	[-4.09384737128582]
								}, {
									"case":	112,
									"scores":	[-4.09384737128582]
								}, {
									"case":	113,
									"scores":	[-4.09384737128582]
								}, {
									"case":	114,
									"scores":	[-4.09384737128582]
								}, {
									"case":	115,
									"scores":	[-4.09384737128582]
								}, {
									"case":	116,
									"scores":	[-4.09384737128582]
								}, {
									"case":	117,
									"scores":	[-4.09384737128582]
								}, {
									"case":	118,
									"scores":	[-4.09384737128582]
								}, {
									"case":	119,
									"scores":	[-4.09384737128582]
								}, {
									"case":	120,
									"scores":	[-4.09384737128582]
								}, {
									"case":	121,
									"scores":	[-4.09384737128582]
								}, {
									"case":	122,
									"scores":	[-4.09384737128582]
								}, {
									"case":	123,
									"scores":	[-4.09384737128582]
								}, {
									"case":	124,
									"scores":	[-4.09384737128582]
								}, {
									"case":	125,
									"scores":	[-4.09384737128582]
								}, {
									"case":	126,
									"scores":	[-4.09384737128582]
								}, {
									"case":	127,
									"scores":	[-4.09384737128582]
								}, {
									"case":	128,
									"scores":	[-4.09384737128582]
								}, {
									"case":	129,
									"scores":	[-4.09384737128582]
								}, {
									"case":	130,
									"scores":	[-4.09384737128582]
								}, {
									"case":	131,
									"scores":	[-4.09384737128582]
								}, {
									"case":	132,
									"scores":	[-4.09384737128582]
								}, {
									"case":	133,
									"scores":	[-4.09384737128582]
								}, {
									"case":	134,
									"scores":	[-4.09384737128582]
								}, {
									"case":	135,
									"scores":	[-4.09384737128582]
								}, {
									"case":	136,
									"scores":	[-4.09384737128582]
								}, {
									"case":	137,
									"scores":	[-4.09384737128582]
								}, {
									"case":	138,
									"scores":	[-4.09384737128582]
								}, {
									"case":	139,
									"scores":	[-4.09384737128582]
								}, {
									"case":	140,
									"scores":	[-4.09384737128582]
								}, {
									"case":	141,
									"scores":	[-4.09384737128582]
								}, {
									"case":	142,
									"scores":	[-4.09384737128582]
								}, {
									"case":	143,
									"scores":	[-4.09384737128582]
								}, {
									"case":	144,
									"scores":	[-4.09384737128582]
								}, {
									"case":	145,
									"scores":	[-4.09384737128582]
								}, {
									"case":	146,
									"scores":	[-4.09384737128582]
								}, {
									"case":	147,
									"scores":	[-4.09384737128582]
								}, {
									"case":	148,
									"scores":	[-4.09384737128582]
								}, {
									"case":	149,
									"scores":	[-4.09384737128582]
								}, {
									"case":	150,
									"scores":	[-4.09384737128582]
								}, {
									"case":	151,
									"scores":	[-4.09384737128582]
								}, {
									"case":	152,
									"scores":	[-4.09384737128582]
								}, {
									"case":	153,
									"scores":	[-4.09384737128582]
								}, {
									"case":	154,
									"scores":	[-4.09384737128582]
								}, {
									"case":	155,
									"scores":	[-4.09384737128582]
								}, {
									"case":	156,
									"scores":	[-4.09384737128582]
								}, {
									"case":	157,
									"scores":	[-4.09384737128582]
								}, {
									"case":	158,
									"scores":	[-4.09384737128582]
								}, {
									"case":	159,
									"scores":	[-4.09384737128582]
								}, {
									"case":	160,
									"scores":	[-4.09384737128582]
								}, {
									"case":	161,
									"scores":	[-4.09384737128582]
								}, {
									"case":	162,
									"scores":	[-4.09384737128582]
								}, {
									"case":	163,
									"scores":	[-4.09384737128582]
								}, {
									"case":	164,
									"scores":	[-4.09384737128582]
								}, {
									"case":	165,
									"scores":	[-4.09384737128582]
								}, {
									"case":	166,
									"scores":	[-4.09384737128582]
								}, {
									"case":	167,
									"scores":	[-4.09384737128582]
								}, {
									"case":	168,
									"scores":	[-4.09384737128582]
								}, {
									"case":	169,
									"scores":	[-4.09384737128582]
								}, {
									"case":	170,
									"scores":	[-4.09384737128582]
								}, {
									"case":	171,
									"scores":	[-4.09384737128582]
								}, {
									"case":	172,
									"scores":	[-4.09384737128582]
								}, {
									"case":	173,
									"scores":	[-4.09384737128582]
								}, {
									"case":	174,
									"scores":	[-4.09384737128582]
								}, {
									"case":	175,
									"scores":	[-4.09384737128582]
								}, {
									"case":	176,
									"scores":	[-4.09384737128582]
								}, {
									"case":	177,
									"scores":	[-4.09384737128582]
								}, {
									"case":	178,
									"scores":	[-4.09384737128582]
								}, {
									"case":	179,
									"scores":	[-4.09384737128582]
								}, {
									"case":	180,
									"scores":	[-4.09384737128582]
								}, {
									"case":	181,
									"scores":	[-4.09384737128582]
								}, {
									"case":	182,
									"scores":	[-4.09384737128582]
								}, {
									"case":	183,
									"scores":	[-4.09384737128582]
								}, {
									"case":	184,
									"scores":	[-4.09384737128582]
								}, {
									"case":	185,
									"scores":	[-4.09384737128582]
								}, {
									"case":	186,
									"scores":	[-4.09384737128582]
								}, {
									"case":	187,
									"scores":	[-4.09384737128582]
								}, {
									"case":	188,
									"scores":	[-4.09384737128582]
								}, {
									"case":	189,
									"scores":	[-4.09384737128582]
								}, {
									"case":	190,
									"scores":	[-4.09384737128582]
								}, {
									"case":	191,
									"scores":	[-4.09384737128582]
								}, {
									"case":	192,
									"scores":	[-4.09384737128582]
								}, {
									"case":	193,
									"scores":	[-4.09384737128582]
								}, {
									"case":	194,
									"scores":	[-4.09384737128582]
								}, {
									"case":	195,
									"scores":	[-4.09384737128582]
								}, {
									"case":	196,
									"scores":	[-4.09384737128582]
								}, {
									"case":	197,
									"scores":	[-4.09384737128582]
								}, {
									"case":	198,
									"scores":	[-4.09384737128582]
								}, {
									"case":	199,
									"scores":	[-4.09384737128582]
								}, {
									"case":	200,
									"scores":	[-4.09384737128582]
								}, {
									"case":	201,
									"scores":	[-4.09384737128582]
								}, {
									"case":	202,
									"scores":	[-4.09384737128582]
								}, {
									"case":	203,
									"scores":	[-4.09384737128582]
								}, {
									"case":	204,
									"scores":	[-4.09384737128582]
								}, {
									"case":	205,
									"scores":	[-4.09384737128582]
								}, {
									"case":	206,
									"scores":	[-4.09384737128582]
								}, {
									"case":	207,
									"scores":	[-4.09384737128582]
								}, {
									"case":	208,
									"scores":	[-4.09384737128582]
								}, {
									"case":	209,
									"scores":	[-7.35964965652982, -7.08484359128582, -6.94028935128582, -4.5110163212858216, -6.87183932128582, -6.87183932128582]
								}, {
									"case":	210,
									"scores":	[-9.37809565652982, -9.10328959128582, -8.95873535128582, -6.5294623212858216, -8.89028532128582, -8.89028532128582]
								}, {
									"case":	211,
									"scores":	[-9.37809565652982, -9.10328959128582, -8.95873535128582, -6.5294623212858216, -8.89028532128582, -8.89028532128582]
								}, {
									"case":	212,
									"scores":	[-9.37809565652982, -9.10328959128582, -8.95873535128582, -6.5294623212858216, -8.89028532128582, -8.89028532128582]
								}, {
									"case":	213,
									"scores":	[-9.37809565652982, -9.10328959128582, -8.95873535128582, -6.5294623212858216, -8.89028532128582, -8.89028532128582]
								}, {
									"case":	214,
									"scores":	[-9.37809565652982, -9.10328959128582, -8.95873535128582, -6.5294623212858216, -8.89028532128582, -8.89028532128582]
								}, {
									"case":	215,
									"scores":	[-9.37809565652982, -9.10328959128582, -8.95873535128582, -6.5294623212858216, -8.89028532128582, -8.89028532128582]
								}, {
									"case":	216,
									"scores":	[-9.37809565652982, -9.10328959128582, -8.95873535128582, -6.5294623212858216, -8.89028532128582, -8.89028532128582]
								}, {
									"case":	217,
									"scores":	[-9.37809565652982, -9.10328959128582, -8.95873535128582, -6.5294623212858216, -8.89028532128582, -8.89028532128582]
								}, {
									"case":	218,
									"scores":	[-9.37809565652982, -9.10328959128582, -8.95873535128582, -6.5294623212858216, -8.89028532128582, -8.89028532128582]
								}]
						}, {
							"switch":	24,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	362,
							"begin_column":	3,
							"end_line":	362,
							"end_column":	20,
							"patch_codes":	["if (!__is_neg(\"\", \"L362\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    defcompression = 5;\n", "{\n}\n", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defcompression = (cp != 0)", "defcompression = (cp == 0)", "defcompression = (opt != 0)", "defcompression = (opt != cp)", "defcompression = (opt == 0)", "defcompression = (opt == cp)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.50653077128582, -4.89096344028582, -4.66531060028582, -3.92996987628582, -4.74256877128582, -4.74256877128582]
								}, {
									"case":	2,
									"scores":	[-4.09384737128582]
								}, {
									"case":	3,
									"scores":	[-4.09384737128582]
								}, {
									"case":	4,
									"scores":	[-4.09384737128582]
								}, {
									"case":	5,
									"scores":	[-4.09384737128582]
								}, {
									"case":	6,
									"scores":	[-4.09384737128582]
								}, {
									"case":	7,
									"scores":	[-4.09384737128582]
								}, {
									"case":	8,
									"scores":	[-4.09384737128582]
								}, {
									"case":	9,
									"scores":	[-4.09384737128582]
								}, {
									"case":	10,
									"scores":	[-4.09384737128582]
								}, {
									"case":	11,
									"scores":	[-4.09384737128582]
								}, {
									"case":	12,
									"scores":	[-4.09384737128582]
								}, {
									"case":	13,
									"scores":	[-4.09384737128582]
								}, {
									"case":	14,
									"scores":	[-4.09384737128582]
								}, {
									"case":	15,
									"scores":	[-4.09384737128582]
								}, {
									"case":	16,
									"scores":	[-4.09384737128582]
								}, {
									"case":	17,
									"scores":	[-4.09384737128582]
								}, {
									"case":	18,
									"scores":	[-4.09384737128582]
								}]
						}]
				}, {
					"line":	366,
					"switches":	[{
							"switch":	25,
							"types":	[[], [], [], [], [209, 210, 211, 212, 213, 214, 215, 216, 217, 218], [], [], [], [], [181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], [], [], [], [], [], []],
							"begin_line":	367,
							"begin_column":	1,
							"end_line":	367,
							"end_column":	1,
							"patch_codes":	["(cp)++", "(opt)++", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (3)", "comma = (32773)", "comma = (34661)", "comma = (4)", "comma = (5)", "comma = (7)", "comma = (8)", "comma = (cp)[1]", "comma = (opt)[1]", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (3)", "compression = (32773)", "compression = (34661)", "compression = (4)", "compression = (5)", "compression = (7)", "compression = (8)", "config = (0)", "config = (1)", "config = (2)", "config = (3)", "config = (32773)", "config = (34661)", "config = (4)", "config = (5)", "config = (7)", "config = (8)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (3)", "defg3opts = (32773)", "defg3opts = (34661)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (8)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (3)", "defpredictor = (32773)", "defpredictor = (34661)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = atoi((cp) + 1)", "defpredictor = atoi((opt) + 1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (3)", "fillorder = (32773)", "fillorder = (34661)", "fillorder = (4)", "fillorder = (5)", "fillorder = (7)", "fillorder = (8)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (3)", "g3opts = (32773)", "g3opts = (34661)", "g3opts = (4)", "g3opts = (5)", "g3opts = (7)", "g3opts = (8)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (3)", "jpegcolormode = (32773)", "jpegcolormode = (34661)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (3)", "orientation = (32773)", "orientation = (34661)", "orientation = (4)", "orientation = (5)", "orientation = (7)", "orientation = (8)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (3)", "outtiled = (32773)", "outtiled = (34661)", "outtiled = (4)", "outtiled = (5)", "outtiled = (7)", "outtiled = (8)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (3)", "pageNum = (32773)", "pageNum = (34661)", "pageNum = (4)", "pageNum = (5)", "pageNum = (7)", "pageNum = (8)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (3)", "predictor = (32773)", "predictor = (34661)", "predictor = (4)", "predictor = (5)", "predictor = (7)", "predictor = (8)", "processG3Options((cp))", "processG3Options((opt))", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (3)", "quality = (32773)", "quality = (34661)", "quality = (4)", "quality = (5)", "quality = (7)", "quality = (8)", "quality = atoi((cp) + 1)", "quality = atoi((opt) + 1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (3)", "rowsperstrip = (32773)", "rowsperstrip = (34661)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (8)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (3)", "tilelength = (32773)", "tilelength = (34661)", "tilelength = (4)", "tilelength = (5)", "tilelength = (7)", "tilelength = (8)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (3)", "tilewidth = (32773)", "tilewidth = (34661)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (8)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "defpredictor = atoi(cp + 1)", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "processG3Options(opt)", "usage()", "if (__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 0;\n", "if (__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 1;\n", "if (__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 2;\n", "if (__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 32773;\n", "if (__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 34661;\n", "if (__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 3;\n", "if (__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 4;\n", "if (__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 5;\n", "if (__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 7;\n", "if (__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 8;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	2,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	3,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	4,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	5,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	6,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	7,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	8,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	9,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	10,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	11,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	12,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	13,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	14,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	15,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	16,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	17,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	18,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	19,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	20,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	21,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	22,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	23,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	24,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	25,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	26,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	27,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	28,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	29,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	30,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	31,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	32,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	33,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	34,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	35,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	36,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	37,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	38,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	39,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	40,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	41,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	42,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	43,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	44,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	45,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	46,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	47,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	48,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	49,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	50,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	51,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	52,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	53,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	54,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	55,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	56,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	57,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	58,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	59,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	60,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	61,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	62,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	63,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	64,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	65,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	66,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	67,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	68,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	69,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	70,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	71,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	72,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	73,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	74,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	75,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	76,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	77,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	78,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	79,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	80,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	81,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	82,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	83,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	84,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	85,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	86,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	87,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	88,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	89,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	90,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	91,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	92,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	93,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	94,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	95,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	96,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	97,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	98,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	99,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	100,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	101,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	102,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	103,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	104,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	105,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	106,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	107,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	108,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	109,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	110,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	111,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	112,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	113,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	114,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	115,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	116,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	117,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	118,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	119,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	120,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	121,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	122,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	123,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	124,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	125,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	126,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	127,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	128,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	129,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	130,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	131,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	132,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	133,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	134,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	135,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	136,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	137,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	138,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	139,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	140,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	141,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	142,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	143,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	144,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	145,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	146,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	147,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	148,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	149,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	150,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	151,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	152,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	153,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	154,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	155,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	156,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	157,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	158,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	159,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	160,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	161,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	162,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	163,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	164,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	165,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	166,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	167,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	168,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	169,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	170,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	171,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	172,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	173,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	174,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	175,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	176,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	177,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	178,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	179,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	180,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	181,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	182,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	183,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	184,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	185,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	186,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	187,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	188,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	189,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	190,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	191,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	192,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	193,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	194,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	195,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	196,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	197,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	198,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	199,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	200,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	201,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	202,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	203,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	204,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	205,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	206,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	207,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	208,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	209,
									"scores":	[-7.3394469492123013, -7.0646408839683, -6.9200866439683, -4.4908136139683021, -6.8516366139683, -6.8516366139683]
								}, {
									"case":	210,
									"scores":	[-9.3578929492123, -9.0830868839683, -8.9385326439683, -6.5092596139683021, -8.8700826139683, -8.8700826139683]
								}, {
									"case":	211,
									"scores":	[-9.3578929492123, -9.0830868839683, -8.9385326439683, -6.5092596139683021, -8.8700826139683, -8.8700826139683]
								}, {
									"case":	212,
									"scores":	[-9.3578929492123, -9.0830868839683, -8.9385326439683, -6.5092596139683021, -8.8700826139683, -8.8700826139683]
								}, {
									"case":	213,
									"scores":	[-9.3578929492123, -9.0830868839683, -8.9385326439683, -6.5092596139683021, -8.8700826139683, -8.8700826139683]
								}, {
									"case":	214,
									"scores":	[-9.3578929492123, -9.0830868839683, -8.9385326439683, -6.5092596139683021, -8.8700826139683, -8.8700826139683]
								}, {
									"case":	215,
									"scores":	[-9.3578929492123, -9.0830868839683, -8.9385326439683, -6.5092596139683021, -8.8700826139683, -8.8700826139683]
								}, {
									"case":	216,
									"scores":	[-9.3578929492123, -9.0830868839683, -8.9385326439683, -6.5092596139683021, -8.8700826139683, -8.8700826139683]
								}, {
									"case":	217,
									"scores":	[-9.3578929492123, -9.0830868839683, -8.9385326439683, -6.5092596139683021, -8.8700826139683, -8.8700826139683]
								}, {
									"case":	218,
									"scores":	[-9.3578929492123, -9.0830868839683, -8.9385326439683, -6.5092596139683021, -8.8700826139683, -8.8700826139683]
								}]
						}, {
							"switch":	26,
							"types":	[[], [], [1], [], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	367,
							"begin_column":	3,
							"end_line":	367,
							"end_column":	20,
							"patch_codes":	["if (!__is_neg(\"\", \"L367\", 6, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(cp), sizeof (cp), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    defcompression = 8;\n", "{\n}\n", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defcompression = (cp != 0)", "defcompression = (cp == 0)", "defcompression = (opt != 0)", "defcompression = (opt != cp)", "defcompression = (opt == 0)", "defcompression = (opt == cp)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.4863280639683, -4.8707607329683018, -4.6451078929683014, -3.9097671689683011, -4.7223660639683018, -4.7223660639683018]
								}, {
									"case":	2,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	3,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	4,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	5,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	6,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	7,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	8,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	9,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	10,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	11,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	12,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	13,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	14,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	15,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	16,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	17,
									"scores":	[-4.0736446639683015]
								}, {
									"case":	18,
									"scores":	[-4.0736446639683015]
								}]
						}]
				}, {
					"line":	370,
					"switches":	[{
							"switch":	28,
							"types":	[[], [], [], [], [203, 204, 205, 206, 207, 208, 209, 210, 211, 212], [], [], [], [], [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], [], [], [], [], [], []],
							"begin_line":	371,
							"begin_column":	1,
							"end_line":	371,
							"end_column":	1,
							"patch_codes":	["(opt)++", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (3)", "comma = (32773)", "comma = (34661)", "comma = (4)", "comma = (5)", "comma = (7)", "comma = (8)", "comma = (opt)[1]", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (3)", "compression = (32773)", "compression = (34661)", "compression = (4)", "compression = (5)", "compression = (7)", "compression = (8)", "config = (0)", "config = (1)", "config = (2)", "config = (3)", "config = (32773)", "config = (34661)", "config = (4)", "config = (5)", "config = (7)", "config = (8)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (3)", "defg3opts = (32773)", "defg3opts = (34661)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (8)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (3)", "defpredictor = (32773)", "defpredictor = (34661)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = atoi((opt) + 1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (3)", "fillorder = (32773)", "fillorder = (34661)", "fillorder = (4)", "fillorder = (5)", "fillorder = (7)", "fillorder = (8)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (3)", "g3opts = (32773)", "g3opts = (34661)", "g3opts = (4)", "g3opts = (5)", "g3opts = (7)", "g3opts = (8)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (3)", "jpegcolormode = (32773)", "jpegcolormode = (34661)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (3)", "orientation = (32773)", "orientation = (34661)", "orientation = (4)", "orientation = (5)", "orientation = (7)", "orientation = (8)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (3)", "outtiled = (32773)", "outtiled = (34661)", "outtiled = (4)", "outtiled = (5)", "outtiled = (7)", "outtiled = (8)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (3)", "pageNum = (32773)", "pageNum = (34661)", "pageNum = (4)", "pageNum = (5)", "pageNum = (7)", "pageNum = (8)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (3)", "predictor = (32773)", "predictor = (34661)", "predictor = (4)", "predictor = (5)", "predictor = (7)", "predictor = (8)", "processG3Options((opt))", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (3)", "quality = (32773)", "quality = (34661)", "quality = (4)", "quality = (5)", "quality = (7)", "quality = (8)", "quality = atoi((opt) + 1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (3)", "rowsperstrip = (32773)", "rowsperstrip = (34661)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (8)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (3)", "tilelength = (32773)", "tilelength = (34661)", "tilelength = (4)", "tilelength = (5)", "tilelength = (7)", "tilelength = (8)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (3)", "tilewidth = (32773)", "tilewidth = (34661)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (8)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "processG3Options(opt)", "usage()", "if (__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 0;\n", "if (__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 1;\n", "if (__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 2;\n", "if (__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 32773;\n", "if (__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 34661;\n", "if (__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 3;\n", "if (__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 4;\n", "if (__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 5;\n", "if (__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 7;\n", "if (__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return 8;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.76060473719839]
								}, {
									"case":	2,
									"scores":	[-6.76060473719839]
								}, {
									"case":	3,
									"scores":	[-6.76060473719839]
								}, {
									"case":	4,
									"scores":	[-6.76060473719839]
								}, {
									"case":	5,
									"scores":	[-6.76060473719839]
								}, {
									"case":	6,
									"scores":	[-6.76060473719839]
								}, {
									"case":	7,
									"scores":	[-6.76060473719839]
								}, {
									"case":	8,
									"scores":	[-6.76060473719839]
								}, {
									"case":	9,
									"scores":	[-6.76060473719839]
								}, {
									"case":	10,
									"scores":	[-6.76060473719839]
								}, {
									"case":	11,
									"scores":	[-6.76060473719839]
								}, {
									"case":	12,
									"scores":	[-6.76060473719839]
								}, {
									"case":	13,
									"scores":	[-6.76060473719839]
								}, {
									"case":	14,
									"scores":	[-6.76060473719839]
								}, {
									"case":	15,
									"scores":	[-6.76060473719839]
								}, {
									"case":	16,
									"scores":	[-6.76060473719839]
								}, {
									"case":	17,
									"scores":	[-6.76060473719839]
								}, {
									"case":	18,
									"scores":	[-6.76060473719839]
								}, {
									"case":	19,
									"scores":	[-6.76060473719839]
								}, {
									"case":	20,
									"scores":	[-6.76060473719839]
								}, {
									"case":	21,
									"scores":	[-6.76060473719839]
								}, {
									"case":	22,
									"scores":	[-6.76060473719839]
								}, {
									"case":	23,
									"scores":	[-6.76060473719839]
								}, {
									"case":	24,
									"scores":	[-6.76060473719839]
								}, {
									"case":	25,
									"scores":	[-6.76060473719839]
								}, {
									"case":	26,
									"scores":	[-6.76060473719839]
								}, {
									"case":	27,
									"scores":	[-6.76060473719839]
								}, {
									"case":	28,
									"scores":	[-6.76060473719839]
								}, {
									"case":	29,
									"scores":	[-6.76060473719839]
								}, {
									"case":	30,
									"scores":	[-6.76060473719839]
								}, {
									"case":	31,
									"scores":	[-6.76060473719839]
								}, {
									"case":	32,
									"scores":	[-6.76060473719839]
								}, {
									"case":	33,
									"scores":	[-6.76060473719839]
								}, {
									"case":	34,
									"scores":	[-6.76060473719839]
								}, {
									"case":	35,
									"scores":	[-6.76060473719839]
								}, {
									"case":	36,
									"scores":	[-6.76060473719839]
								}, {
									"case":	37,
									"scores":	[-6.76060473719839]
								}, {
									"case":	38,
									"scores":	[-6.76060473719839]
								}, {
									"case":	39,
									"scores":	[-6.76060473719839]
								}, {
									"case":	40,
									"scores":	[-6.76060473719839]
								}, {
									"case":	41,
									"scores":	[-6.76060473719839]
								}, {
									"case":	42,
									"scores":	[-6.76060473719839]
								}, {
									"case":	43,
									"scores":	[-6.76060473719839]
								}, {
									"case":	44,
									"scores":	[-6.76060473719839]
								}, {
									"case":	45,
									"scores":	[-6.76060473719839]
								}, {
									"case":	46,
									"scores":	[-6.76060473719839]
								}, {
									"case":	47,
									"scores":	[-6.76060473719839]
								}, {
									"case":	48,
									"scores":	[-6.76060473719839]
								}, {
									"case":	49,
									"scores":	[-6.76060473719839]
								}, {
									"case":	50,
									"scores":	[-6.76060473719839]
								}, {
									"case":	51,
									"scores":	[-6.76060473719839]
								}, {
									"case":	52,
									"scores":	[-6.76060473719839]
								}, {
									"case":	53,
									"scores":	[-6.76060473719839]
								}, {
									"case":	54,
									"scores":	[-6.76060473719839]
								}, {
									"case":	55,
									"scores":	[-6.76060473719839]
								}, {
									"case":	56,
									"scores":	[-6.76060473719839]
								}, {
									"case":	57,
									"scores":	[-6.76060473719839]
								}, {
									"case":	58,
									"scores":	[-6.76060473719839]
								}, {
									"case":	59,
									"scores":	[-6.76060473719839]
								}, {
									"case":	60,
									"scores":	[-6.76060473719839]
								}, {
									"case":	61,
									"scores":	[-6.76060473719839]
								}, {
									"case":	62,
									"scores":	[-6.76060473719839]
								}, {
									"case":	63,
									"scores":	[-6.76060473719839]
								}, {
									"case":	64,
									"scores":	[-6.76060473719839]
								}, {
									"case":	65,
									"scores":	[-6.76060473719839]
								}, {
									"case":	66,
									"scores":	[-6.76060473719839]
								}, {
									"case":	67,
									"scores":	[-6.76060473719839]
								}, {
									"case":	68,
									"scores":	[-6.76060473719839]
								}, {
									"case":	69,
									"scores":	[-6.76060473719839]
								}, {
									"case":	70,
									"scores":	[-6.76060473719839]
								}, {
									"case":	71,
									"scores":	[-6.76060473719839]
								}, {
									"case":	72,
									"scores":	[-6.76060473719839]
								}, {
									"case":	73,
									"scores":	[-6.76060473719839]
								}, {
									"case":	74,
									"scores":	[-6.76060473719839]
								}, {
									"case":	75,
									"scores":	[-6.76060473719839]
								}, {
									"case":	76,
									"scores":	[-6.76060473719839]
								}, {
									"case":	77,
									"scores":	[-6.76060473719839]
								}, {
									"case":	78,
									"scores":	[-6.76060473719839]
								}, {
									"case":	79,
									"scores":	[-6.76060473719839]
								}, {
									"case":	80,
									"scores":	[-6.76060473719839]
								}, {
									"case":	81,
									"scores":	[-6.76060473719839]
								}, {
									"case":	82,
									"scores":	[-6.76060473719839]
								}, {
									"case":	83,
									"scores":	[-6.76060473719839]
								}, {
									"case":	84,
									"scores":	[-6.76060473719839]
								}, {
									"case":	85,
									"scores":	[-6.76060473719839]
								}, {
									"case":	86,
									"scores":	[-6.76060473719839]
								}, {
									"case":	87,
									"scores":	[-6.76060473719839]
								}, {
									"case":	88,
									"scores":	[-6.76060473719839]
								}, {
									"case":	89,
									"scores":	[-6.76060473719839]
								}, {
									"case":	90,
									"scores":	[-6.76060473719839]
								}, {
									"case":	91,
									"scores":	[-6.76060473719839]
								}, {
									"case":	92,
									"scores":	[-6.76060473719839]
								}, {
									"case":	93,
									"scores":	[-6.76060473719839]
								}, {
									"case":	94,
									"scores":	[-6.76060473719839]
								}, {
									"case":	95,
									"scores":	[-6.76060473719839]
								}, {
									"case":	96,
									"scores":	[-6.76060473719839]
								}, {
									"case":	97,
									"scores":	[-6.76060473719839]
								}, {
									"case":	98,
									"scores":	[-6.76060473719839]
								}, {
									"case":	99,
									"scores":	[-6.76060473719839]
								}, {
									"case":	100,
									"scores":	[-6.76060473719839]
								}, {
									"case":	101,
									"scores":	[-6.76060473719839]
								}, {
									"case":	102,
									"scores":	[-6.76060473719839]
								}, {
									"case":	103,
									"scores":	[-6.76060473719839]
								}, {
									"case":	104,
									"scores":	[-6.76060473719839]
								}, {
									"case":	105,
									"scores":	[-6.76060473719839]
								}, {
									"case":	106,
									"scores":	[-6.76060473719839]
								}, {
									"case":	107,
									"scores":	[-6.76060473719839]
								}, {
									"case":	108,
									"scores":	[-6.76060473719839]
								}, {
									"case":	109,
									"scores":	[-6.76060473719839]
								}, {
									"case":	110,
									"scores":	[-6.76060473719839]
								}, {
									"case":	111,
									"scores":	[-6.76060473719839]
								}, {
									"case":	112,
									"scores":	[-6.76060473719839]
								}, {
									"case":	113,
									"scores":	[-6.76060473719839]
								}, {
									"case":	114,
									"scores":	[-6.76060473719839]
								}, {
									"case":	115,
									"scores":	[-6.76060473719839]
								}, {
									"case":	116,
									"scores":	[-6.76060473719839]
								}, {
									"case":	117,
									"scores":	[-6.76060473719839]
								}, {
									"case":	118,
									"scores":	[-6.76060473719839]
								}, {
									"case":	119,
									"scores":	[-6.76060473719839]
								}, {
									"case":	120,
									"scores":	[-6.76060473719839]
								}, {
									"case":	121,
									"scores":	[-6.76060473719839]
								}, {
									"case":	122,
									"scores":	[-6.76060473719839]
								}, {
									"case":	123,
									"scores":	[-6.76060473719839]
								}, {
									"case":	124,
									"scores":	[-6.76060473719839]
								}, {
									"case":	125,
									"scores":	[-6.76060473719839]
								}, {
									"case":	126,
									"scores":	[-6.76060473719839]
								}, {
									"case":	127,
									"scores":	[-6.76060473719839]
								}, {
									"case":	128,
									"scores":	[-6.76060473719839]
								}, {
									"case":	129,
									"scores":	[-6.76060473719839]
								}, {
									"case":	130,
									"scores":	[-6.76060473719839]
								}, {
									"case":	131,
									"scores":	[-6.76060473719839]
								}, {
									"case":	132,
									"scores":	[-6.76060473719839]
								}, {
									"case":	133,
									"scores":	[-6.76060473719839]
								}, {
									"case":	134,
									"scores":	[-6.76060473719839]
								}, {
									"case":	135,
									"scores":	[-6.76060473719839]
								}, {
									"case":	136,
									"scores":	[-6.76060473719839]
								}, {
									"case":	137,
									"scores":	[-6.76060473719839]
								}, {
									"case":	138,
									"scores":	[-6.76060473719839]
								}, {
									"case":	139,
									"scores":	[-6.76060473719839]
								}, {
									"case":	140,
									"scores":	[-6.76060473719839]
								}, {
									"case":	141,
									"scores":	[-6.76060473719839]
								}, {
									"case":	142,
									"scores":	[-6.76060473719839]
								}, {
									"case":	143,
									"scores":	[-6.76060473719839]
								}, {
									"case":	144,
									"scores":	[-6.76060473719839]
								}, {
									"case":	145,
									"scores":	[-6.76060473719839]
								}, {
									"case":	146,
									"scores":	[-6.76060473719839]
								}, {
									"case":	147,
									"scores":	[-6.76060473719839]
								}, {
									"case":	148,
									"scores":	[-6.76060473719839]
								}, {
									"case":	149,
									"scores":	[-6.76060473719839]
								}, {
									"case":	150,
									"scores":	[-6.76060473719839]
								}, {
									"case":	151,
									"scores":	[-6.76060473719839]
								}, {
									"case":	152,
									"scores":	[-6.76060473719839]
								}, {
									"case":	153,
									"scores":	[-6.76060473719839]
								}, {
									"case":	154,
									"scores":	[-6.76060473719839]
								}, {
									"case":	155,
									"scores":	[-6.76060473719839]
								}, {
									"case":	156,
									"scores":	[-6.76060473719839]
								}, {
									"case":	157,
									"scores":	[-6.76060473719839]
								}, {
									"case":	158,
									"scores":	[-6.76060473719839]
								}, {
									"case":	159,
									"scores":	[-6.76060473719839]
								}, {
									"case":	160,
									"scores":	[-6.76060473719839]
								}, {
									"case":	161,
									"scores":	[-6.76060473719839]
								}, {
									"case":	162,
									"scores":	[-6.76060473719839]
								}, {
									"case":	163,
									"scores":	[-6.76060473719839]
								}, {
									"case":	164,
									"scores":	[-6.76060473719839]
								}, {
									"case":	165,
									"scores":	[-6.76060473719839]
								}, {
									"case":	166,
									"scores":	[-6.76060473719839]
								}, {
									"case":	167,
									"scores":	[-6.76060473719839]
								}, {
									"case":	168,
									"scores":	[-6.76060473719839]
								}, {
									"case":	169,
									"scores":	[-6.76060473719839]
								}, {
									"case":	170,
									"scores":	[-6.76060473719839]
								}, {
									"case":	171,
									"scores":	[-6.76060473719839]
								}, {
									"case":	172,
									"scores":	[-6.76060473719839]
								}, {
									"case":	173,
									"scores":	[-6.76060473719839]
								}, {
									"case":	174,
									"scores":	[-6.76060473719839]
								}, {
									"case":	175,
									"scores":	[-6.76060473719839]
								}, {
									"case":	176,
									"scores":	[-6.76060473719839]
								}, {
									"case":	177,
									"scores":	[-6.76060473719839]
								}, {
									"case":	178,
									"scores":	[-6.76060473719839]
								}, {
									"case":	179,
									"scores":	[-6.76060473719839]
								}, {
									"case":	180,
									"scores":	[-6.76060473719839]
								}, {
									"case":	181,
									"scores":	[-6.76060473719839]
								}, {
									"case":	182,
									"scores":	[-6.76060473719839]
								}, {
									"case":	183,
									"scores":	[-6.76060473719839]
								}, {
									"case":	184,
									"scores":	[-6.76060473719839]
								}, {
									"case":	185,
									"scores":	[-6.76060473719839]
								}, {
									"case":	186,
									"scores":	[-6.76060473719839]
								}, {
									"case":	187,
									"scores":	[-6.76060473719839]
								}, {
									"case":	188,
									"scores":	[-6.76060473719839]
								}, {
									"case":	189,
									"scores":	[-6.76060473719839]
								}, {
									"case":	190,
									"scores":	[-6.76060473719839]
								}, {
									"case":	191,
									"scores":	[-6.76060473719839]
								}, {
									"case":	192,
									"scores":	[-6.76060473719839]
								}, {
									"case":	193,
									"scores":	[-6.76060473719839]
								}, {
									"case":	194,
									"scores":	[-6.76060473719839]
								}, {
									"case":	195,
									"scores":	[-6.76060473719839]
								}, {
									"case":	196,
									"scores":	[-6.76060473719839]
								}, {
									"case":	197,
									"scores":	[-6.76060473719839]
								}, {
									"case":	198,
									"scores":	[-6.76060473719839]
								}, {
									"case":	199,
									"scores":	[-6.76060473719839]
								}, {
									"case":	200,
									"scores":	[-6.76060473719839]
								}, {
									"case":	201,
									"scores":	[-6.76060473719839]
								}, {
									"case":	202,
									"scores":	[-6.76060473719839]
								}, {
									"case":	203,
									"scores":	[-8.81518826419839, -8.60411693419839, -8.81518826419839, -8.81518826419839, -8.81518826419839]
								}, {
									"case":	204,
									"scores":	[-10.833634264198391, -10.62256293419839, -10.833634264198391, -10.833634264198391, -10.833634264198391]
								}, {
									"case":	205,
									"scores":	[-10.833634264198391, -10.62256293419839, -10.833634264198391, -10.833634264198391, -10.833634264198391]
								}, {
									"case":	206,
									"scores":	[-10.833634264198391, -10.62256293419839, -10.833634264198391, -10.833634264198391, -10.833634264198391]
								}, {
									"case":	207,
									"scores":	[-10.833634264198391, -10.62256293419839, -10.833634264198391, -10.833634264198391, -10.833634264198391]
								}, {
									"case":	208,
									"scores":	[-10.833634264198391, -10.62256293419839, -10.833634264198391, -10.833634264198391, -10.833634264198391]
								}, {
									"case":	209,
									"scores":	[-10.833634264198391, -10.62256293419839, -10.833634264198391, -10.833634264198391, -10.833634264198391]
								}, {
									"case":	210,
									"scores":	[-10.833634264198391, -10.62256293419839, -10.833634264198391, -10.833634264198391, -10.833634264198391]
								}, {
									"case":	211,
									"scores":	[-10.833634264198391, -10.62256293419839, -10.833634264198391, -10.833634264198391, -10.833634264198391]
								}, {
									"case":	212,
									"scores":	[-10.833634264198391, -10.62256293419839, -10.833634264198391, -10.833634264198391, -10.833634264198391]
								}]
						}, {
							"switch":	29,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	371,
							"begin_column":	3,
							"end_line":	371,
							"end_column":	12,
							"patch_codes":	["if (!__is_neg(\"\", \"L371\", 5, &(defcompression), sizeof (defcompression), &(opt), sizeof (opt), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality)))\n    return (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.56505643719839, -7.67344395719839, -7.56505643719839, -7.56505643719839, -7.56505643719839]
								}]
						}]
				}, {
					"line":	367,
					"switches":	[{
							"switch":	27,
							"types":	[[], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11], []],
							"begin_line":	368,
							"begin_column":	9,
							"end_line":	371,
							"end_column":	12,
							"patch_codes":	["if (__is_neg(\"\", \"L368\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality))) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if (((strncmp(opt, \"jbig\", 4) == 0)) || __is_neg(\"\", \"L368\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality))) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execl(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execle(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execlp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((fprintf(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((mbtowc(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((printf(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((sprintf(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strncasecmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.43109706479839, -8.80710054479839, -8.04313854479839, -8.04313854479839, -8.04313854479839]
								}, {
									"case":	2,
									"scores":	[-5.95436780819839, -7.33037128819839, -6.56640928819839, -6.56640928819839, -6.56640928819839]
								}, {
									"case":	3,
									"scores":	[-6.76060473719839]
								}, {
									"case":	4,
									"scores":	[-6.76060473719839]
								}, {
									"case":	5,
									"scores":	[-6.76060473719839]
								}, {
									"case":	6,
									"scores":	[-6.76060473719839]
								}, {
									"case":	7,
									"scores":	[-6.76060473719839]
								}, {
									"case":	8,
									"scores":	[-6.76060473719839]
								}, {
									"case":	9,
									"scores":	[-6.76060473719839]
								}, {
									"case":	10,
									"scores":	[-6.76060473719839]
								}, {
									"case":	11,
									"scores":	[-6.76060473719839]
								}]
						}]
				}, {
					"line":	355,
					"switches":	[{
							"switch":	19,
							"types":	[[], [], [], [], [], [], [], [], [], [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], [], [], [], [], [], []],
							"begin_line":	356,
							"begin_column":	7,
							"end_line":	356,
							"end_column":	7,
							"patch_codes":	["(opt)++", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (3)", "comma = (32773)", "comma = (34661)", "comma = (4)", "comma = (5)", "comma = (7)", "comma = (8)", "comma = (opt)[1]", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (3)", "compression = (32773)", "compression = (34661)", "compression = (4)", "compression = (5)", "compression = (7)", "compression = (8)", "config = (0)", "config = (1)", "config = (2)", "config = (3)", "config = (32773)", "config = (34661)", "config = (4)", "config = (5)", "config = (7)", "config = (8)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (3)", "defg3opts = (32773)", "defg3opts = (34661)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (8)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (3)", "defpredictor = (32773)", "defpredictor = (34661)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = atoi((opt) + 1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (3)", "fillorder = (32773)", "fillorder = (34661)", "fillorder = (4)", "fillorder = (5)", "fillorder = (7)", "fillorder = (8)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (3)", "g3opts = (32773)", "g3opts = (34661)", "g3opts = (4)", "g3opts = (5)", "g3opts = (7)", "g3opts = (8)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (3)", "jpegcolormode = (32773)", "jpegcolormode = (34661)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (3)", "orientation = (32773)", "orientation = (34661)", "orientation = (4)", "orientation = (5)", "orientation = (7)", "orientation = (8)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (3)", "outtiled = (32773)", "outtiled = (34661)", "outtiled = (4)", "outtiled = (5)", "outtiled = (7)", "outtiled = (8)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (3)", "pageNum = (32773)", "pageNum = (34661)", "pageNum = (4)", "pageNum = (5)", "pageNum = (7)", "pageNum = (8)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (3)", "predictor = (32773)", "predictor = (34661)", "predictor = (4)", "predictor = (5)", "predictor = (7)", "predictor = (8)", "processG3Options((opt))", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (3)", "quality = (32773)", "quality = (34661)", "quality = (4)", "quality = (5)", "quality = (7)", "quality = (8)", "quality = atoi((opt) + 1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (3)", "rowsperstrip = (32773)", "rowsperstrip = (34661)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (8)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (3)", "tilelength = (32773)", "tilelength = (34661)", "tilelength = (4)", "tilelength = (5)", "tilelength = (7)", "tilelength = (8)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (3)", "tilewidth = (32773)", "tilewidth = (34661)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (8)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "processG3Options(opt)", "usage()"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.11405007860334]
								}, {
									"case":	2,
									"scores":	[-4.11405007860334]
								}, {
									"case":	3,
									"scores":	[-4.11405007860334]
								}, {
									"case":	4,
									"scores":	[-4.11405007860334]
								}, {
									"case":	5,
									"scores":	[-4.11405007860334]
								}, {
									"case":	6,
									"scores":	[-4.11405007860334]
								}, {
									"case":	7,
									"scores":	[-4.11405007860334]
								}, {
									"case":	8,
									"scores":	[-4.11405007860334]
								}, {
									"case":	9,
									"scores":	[-4.11405007860334]
								}, {
									"case":	10,
									"scores":	[-4.11405007860334]
								}, {
									"case":	11,
									"scores":	[-4.11405007860334]
								}, {
									"case":	12,
									"scores":	[-4.11405007860334]
								}, {
									"case":	13,
									"scores":	[-4.11405007860334]
								}, {
									"case":	14,
									"scores":	[-4.11405007860334]
								}, {
									"case":	15,
									"scores":	[-4.11405007860334]
								}, {
									"case":	16,
									"scores":	[-4.11405007860334]
								}, {
									"case":	17,
									"scores":	[-4.11405007860334]
								}, {
									"case":	18,
									"scores":	[-4.11405007860334]
								}, {
									"case":	19,
									"scores":	[-4.11405007860334]
								}, {
									"case":	20,
									"scores":	[-4.11405007860334]
								}, {
									"case":	21,
									"scores":	[-4.11405007860334]
								}, {
									"case":	22,
									"scores":	[-4.11405007860334]
								}, {
									"case":	23,
									"scores":	[-4.11405007860334]
								}, {
									"case":	24,
									"scores":	[-4.11405007860334]
								}, {
									"case":	25,
									"scores":	[-4.11405007860334]
								}, {
									"case":	26,
									"scores":	[-4.11405007860334]
								}, {
									"case":	27,
									"scores":	[-4.11405007860334]
								}, {
									"case":	28,
									"scores":	[-4.11405007860334]
								}, {
									"case":	29,
									"scores":	[-4.11405007860334]
								}, {
									"case":	30,
									"scores":	[-4.11405007860334]
								}, {
									"case":	31,
									"scores":	[-4.11405007860334]
								}, {
									"case":	32,
									"scores":	[-4.11405007860334]
								}, {
									"case":	33,
									"scores":	[-4.11405007860334]
								}, {
									"case":	34,
									"scores":	[-4.11405007860334]
								}, {
									"case":	35,
									"scores":	[-4.11405007860334]
								}, {
									"case":	36,
									"scores":	[-4.11405007860334]
								}, {
									"case":	37,
									"scores":	[-4.11405007860334]
								}, {
									"case":	38,
									"scores":	[-4.11405007860334]
								}, {
									"case":	39,
									"scores":	[-4.11405007860334]
								}, {
									"case":	40,
									"scores":	[-4.11405007860334]
								}, {
									"case":	41,
									"scores":	[-4.11405007860334]
								}, {
									"case":	42,
									"scores":	[-4.11405007860334]
								}, {
									"case":	43,
									"scores":	[-4.11405007860334]
								}, {
									"case":	44,
									"scores":	[-4.11405007860334]
								}, {
									"case":	45,
									"scores":	[-4.11405007860334]
								}, {
									"case":	46,
									"scores":	[-4.11405007860334]
								}, {
									"case":	47,
									"scores":	[-4.11405007860334]
								}, {
									"case":	48,
									"scores":	[-4.11405007860334]
								}, {
									"case":	49,
									"scores":	[-4.11405007860334]
								}, {
									"case":	50,
									"scores":	[-4.11405007860334]
								}, {
									"case":	51,
									"scores":	[-4.11405007860334]
								}, {
									"case":	52,
									"scores":	[-4.11405007860334]
								}, {
									"case":	53,
									"scores":	[-4.11405007860334]
								}, {
									"case":	54,
									"scores":	[-4.11405007860334]
								}, {
									"case":	55,
									"scores":	[-4.11405007860334]
								}, {
									"case":	56,
									"scores":	[-4.11405007860334]
								}, {
									"case":	57,
									"scores":	[-4.11405007860334]
								}, {
									"case":	58,
									"scores":	[-4.11405007860334]
								}, {
									"case":	59,
									"scores":	[-4.11405007860334]
								}, {
									"case":	60,
									"scores":	[-4.11405007860334]
								}, {
									"case":	61,
									"scores":	[-4.11405007860334]
								}, {
									"case":	62,
									"scores":	[-4.11405007860334]
								}, {
									"case":	63,
									"scores":	[-4.11405007860334]
								}, {
									"case":	64,
									"scores":	[-4.11405007860334]
								}, {
									"case":	65,
									"scores":	[-4.11405007860334]
								}, {
									"case":	66,
									"scores":	[-4.11405007860334]
								}, {
									"case":	67,
									"scores":	[-4.11405007860334]
								}, {
									"case":	68,
									"scores":	[-4.11405007860334]
								}, {
									"case":	69,
									"scores":	[-4.11405007860334]
								}, {
									"case":	70,
									"scores":	[-4.11405007860334]
								}, {
									"case":	71,
									"scores":	[-4.11405007860334]
								}, {
									"case":	72,
									"scores":	[-4.11405007860334]
								}, {
									"case":	73,
									"scores":	[-4.11405007860334]
								}, {
									"case":	74,
									"scores":	[-4.11405007860334]
								}, {
									"case":	75,
									"scores":	[-4.11405007860334]
								}, {
									"case":	76,
									"scores":	[-4.11405007860334]
								}, {
									"case":	77,
									"scores":	[-4.11405007860334]
								}, {
									"case":	78,
									"scores":	[-4.11405007860334]
								}, {
									"case":	79,
									"scores":	[-4.11405007860334]
								}, {
									"case":	80,
									"scores":	[-4.11405007860334]
								}, {
									"case":	81,
									"scores":	[-4.11405007860334]
								}, {
									"case":	82,
									"scores":	[-4.11405007860334]
								}, {
									"case":	83,
									"scores":	[-4.11405007860334]
								}, {
									"case":	84,
									"scores":	[-4.11405007860334]
								}, {
									"case":	85,
									"scores":	[-4.11405007860334]
								}, {
									"case":	86,
									"scores":	[-4.11405007860334]
								}, {
									"case":	87,
									"scores":	[-4.11405007860334]
								}, {
									"case":	88,
									"scores":	[-4.11405007860334]
								}, {
									"case":	89,
									"scores":	[-4.11405007860334]
								}, {
									"case":	90,
									"scores":	[-4.11405007860334]
								}, {
									"case":	91,
									"scores":	[-4.11405007860334]
								}, {
									"case":	92,
									"scores":	[-4.11405007860334]
								}, {
									"case":	93,
									"scores":	[-4.11405007860334]
								}, {
									"case":	94,
									"scores":	[-4.11405007860334]
								}, {
									"case":	95,
									"scores":	[-4.11405007860334]
								}, {
									"case":	96,
									"scores":	[-4.11405007860334]
								}, {
									"case":	97,
									"scores":	[-4.11405007860334]
								}, {
									"case":	98,
									"scores":	[-4.11405007860334]
								}, {
									"case":	99,
									"scores":	[-4.11405007860334]
								}, {
									"case":	100,
									"scores":	[-4.11405007860334]
								}, {
									"case":	101,
									"scores":	[-4.11405007860334]
								}, {
									"case":	102,
									"scores":	[-4.11405007860334]
								}, {
									"case":	103,
									"scores":	[-4.11405007860334]
								}, {
									"case":	104,
									"scores":	[-4.11405007860334]
								}, {
									"case":	105,
									"scores":	[-4.11405007860334]
								}, {
									"case":	106,
									"scores":	[-4.11405007860334]
								}, {
									"case":	107,
									"scores":	[-4.11405007860334]
								}, {
									"case":	108,
									"scores":	[-4.11405007860334]
								}, {
									"case":	109,
									"scores":	[-4.11405007860334]
								}, {
									"case":	110,
									"scores":	[-4.11405007860334]
								}, {
									"case":	111,
									"scores":	[-4.11405007860334]
								}, {
									"case":	112,
									"scores":	[-4.11405007860334]
								}, {
									"case":	113,
									"scores":	[-4.11405007860334]
								}, {
									"case":	114,
									"scores":	[-4.11405007860334]
								}, {
									"case":	115,
									"scores":	[-4.11405007860334]
								}, {
									"case":	116,
									"scores":	[-4.11405007860334]
								}, {
									"case":	117,
									"scores":	[-4.11405007860334]
								}, {
									"case":	118,
									"scores":	[-4.11405007860334]
								}, {
									"case":	119,
									"scores":	[-4.11405007860334]
								}, {
									"case":	120,
									"scores":	[-4.11405007860334]
								}, {
									"case":	121,
									"scores":	[-4.11405007860334]
								}, {
									"case":	122,
									"scores":	[-4.11405007860334]
								}, {
									"case":	123,
									"scores":	[-4.11405007860334]
								}, {
									"case":	124,
									"scores":	[-4.11405007860334]
								}, {
									"case":	125,
									"scores":	[-4.11405007860334]
								}, {
									"case":	126,
									"scores":	[-4.11405007860334]
								}, {
									"case":	127,
									"scores":	[-4.11405007860334]
								}, {
									"case":	128,
									"scores":	[-4.11405007860334]
								}, {
									"case":	129,
									"scores":	[-4.11405007860334]
								}, {
									"case":	130,
									"scores":	[-4.11405007860334]
								}, {
									"case":	131,
									"scores":	[-4.11405007860334]
								}, {
									"case":	132,
									"scores":	[-4.11405007860334]
								}, {
									"case":	133,
									"scores":	[-4.11405007860334]
								}, {
									"case":	134,
									"scores":	[-4.11405007860334]
								}, {
									"case":	135,
									"scores":	[-4.11405007860334]
								}, {
									"case":	136,
									"scores":	[-4.11405007860334]
								}, {
									"case":	137,
									"scores":	[-4.11405007860334]
								}, {
									"case":	138,
									"scores":	[-4.11405007860334]
								}, {
									"case":	139,
									"scores":	[-4.11405007860334]
								}, {
									"case":	140,
									"scores":	[-4.11405007860334]
								}, {
									"case":	141,
									"scores":	[-4.11405007860334]
								}, {
									"case":	142,
									"scores":	[-4.11405007860334]
								}, {
									"case":	143,
									"scores":	[-4.11405007860334]
								}, {
									"case":	144,
									"scores":	[-4.11405007860334]
								}, {
									"case":	145,
									"scores":	[-4.11405007860334]
								}, {
									"case":	146,
									"scores":	[-4.11405007860334]
								}, {
									"case":	147,
									"scores":	[-4.11405007860334]
								}, {
									"case":	148,
									"scores":	[-4.11405007860334]
								}, {
									"case":	149,
									"scores":	[-4.11405007860334]
								}, {
									"case":	150,
									"scores":	[-4.11405007860334]
								}, {
									"case":	151,
									"scores":	[-4.11405007860334]
								}, {
									"case":	152,
									"scores":	[-4.11405007860334]
								}, {
									"case":	153,
									"scores":	[-4.11405007860334]
								}, {
									"case":	154,
									"scores":	[-4.11405007860334]
								}, {
									"case":	155,
									"scores":	[-4.11405007860334]
								}, {
									"case":	156,
									"scores":	[-4.11405007860334]
								}, {
									"case":	157,
									"scores":	[-4.11405007860334]
								}, {
									"case":	158,
									"scores":	[-4.11405007860334]
								}, {
									"case":	159,
									"scores":	[-4.11405007860334]
								}, {
									"case":	160,
									"scores":	[-4.11405007860334]
								}, {
									"case":	161,
									"scores":	[-4.11405007860334]
								}, {
									"case":	162,
									"scores":	[-4.11405007860334]
								}, {
									"case":	163,
									"scores":	[-4.11405007860334]
								}, {
									"case":	164,
									"scores":	[-4.11405007860334]
								}, {
									"case":	165,
									"scores":	[-4.11405007860334]
								}, {
									"case":	166,
									"scores":	[-4.11405007860334]
								}, {
									"case":	167,
									"scores":	[-4.11405007860334]
								}, {
									"case":	168,
									"scores":	[-4.11405007860334]
								}, {
									"case":	169,
									"scores":	[-4.11405007860334]
								}, {
									"case":	170,
									"scores":	[-4.11405007860334]
								}, {
									"case":	171,
									"scores":	[-4.11405007860334]
								}, {
									"case":	172,
									"scores":	[-4.11405007860334]
								}, {
									"case":	173,
									"scores":	[-4.11405007860334]
								}, {
									"case":	174,
									"scores":	[-4.11405007860334]
								}, {
									"case":	175,
									"scores":	[-4.11405007860334]
								}, {
									"case":	176,
									"scores":	[-4.11405007860334]
								}, {
									"case":	177,
									"scores":	[-4.11405007860334]
								}, {
									"case":	178,
									"scores":	[-4.11405007860334]
								}, {
									"case":	179,
									"scores":	[-4.11405007860334]
								}, {
									"case":	180,
									"scores":	[-4.11405007860334]
								}, {
									"case":	181,
									"scores":	[-4.11405007860334]
								}, {
									"case":	182,
									"scores":	[-4.11405007860334]
								}, {
									"case":	183,
									"scores":	[-4.11405007860334]
								}, {
									"case":	184,
									"scores":	[-4.11405007860334]
								}, {
									"case":	185,
									"scores":	[-4.11405007860334]
								}, {
									"case":	186,
									"scores":	[-4.11405007860334]
								}, {
									"case":	187,
									"scores":	[-4.11405007860334]
								}, {
									"case":	188,
									"scores":	[-4.11405007860334]
								}, {
									"case":	189,
									"scores":	[-4.11405007860334]
								}, {
									"case":	190,
									"scores":	[-4.11405007860334]
								}, {
									"case":	191,
									"scores":	[-4.11405007860334]
								}, {
									"case":	192,
									"scores":	[-4.11405007860334]
								}, {
									"case":	193,
									"scores":	[-4.11405007860334]
								}, {
									"case":	194,
									"scores":	[-4.11405007860334]
								}, {
									"case":	195,
									"scores":	[-4.11405007860334]
								}, {
									"case":	196,
									"scores":	[-4.11405007860334]
								}, {
									"case":	197,
									"scores":	[-4.11405007860334]
								}, {
									"case":	198,
									"scores":	[-4.11405007860334]
								}, {
									"case":	199,
									"scores":	[-4.11405007860334]
								}, {
									"case":	200,
									"scores":	[-4.11405007860334]
								}, {
									"case":	201,
									"scores":	[-4.11405007860334]
								}, {
									"case":	202,
									"scores":	[-4.11405007860334]
								}]
						}, {
							"switch":	20,
							"types":	[[18], [], [], [], [], [], [], [], [], [], [], [], [1], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], []],
							"begin_line":	356,
							"begin_column":	9,
							"end_line":	371,
							"end_column":	12,
							"patch_codes":	["if (__is_neg(\"\", \"L356\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality))) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execl(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execle(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execlp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execv(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execvp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((fprintf(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((fputs(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((link(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((printf(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((rename(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((sprintf(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strcasecmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strcoll(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((symlink(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((vprintf(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if (((strcmp(opt, \"g4\") == 0)) && !__is_neg(\"\", \"L356\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(defpredictor), sizeof (defpredictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality))) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.7505790070281457, -5.1265824870281458, -4.3963094870281463, -4.3626204870281464, -4.3626204870281464]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.2203090764281455, -4.5963125564281455, -3.8660395564281456, -3.8323505564281457, -3.8323505564281457]
								}]
						}]
				}, {
					"line":	335,
					"switches":	[{
							"switch":	13,
							"types":	[[], [], [], [], [], [], [], [], [], [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], [], [], [], [], [], []],
							"begin_line":	336,
							"begin_column":	7,
							"end_line":	336,
							"end_column":	7,
							"patch_codes":	["(opt)++", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (3)", "comma = (32773)", "comma = (34661)", "comma = (4)", "comma = (5)", "comma = (7)", "comma = (8)", "comma = (opt)[1]", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (3)", "compression = (32773)", "compression = (34661)", "compression = (4)", "compression = (5)", "compression = (7)", "compression = (8)", "config = (0)", "config = (1)", "config = (2)", "config = (3)", "config = (32773)", "config = (34661)", "config = (4)", "config = (5)", "config = (7)", "config = (8)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (3)", "defg3opts = (32773)", "defg3opts = (34661)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (8)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (3)", "defpredictor = (32773)", "defpredictor = (34661)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = atoi((opt) + 1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (3)", "fillorder = (32773)", "fillorder = (34661)", "fillorder = (4)", "fillorder = (5)", "fillorder = (7)", "fillorder = (8)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (3)", "g3opts = (32773)", "g3opts = (34661)", "g3opts = (4)", "g3opts = (5)", "g3opts = (7)", "g3opts = (8)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (3)", "jpegcolormode = (32773)", "jpegcolormode = (34661)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (3)", "orientation = (32773)", "orientation = (34661)", "orientation = (4)", "orientation = (5)", "orientation = (7)", "orientation = (8)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (3)", "outtiled = (32773)", "outtiled = (34661)", "outtiled = (4)", "outtiled = (5)", "outtiled = (7)", "outtiled = (8)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (3)", "pageNum = (32773)", "pageNum = (34661)", "pageNum = (4)", "pageNum = (5)", "pageNum = (7)", "pageNum = (8)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (3)", "predictor = (32773)", "predictor = (34661)", "predictor = (4)", "predictor = (5)", "predictor = (7)", "predictor = (8)", "processG3Options((opt))", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (3)", "quality = (32773)", "quality = (34661)", "quality = (4)", "quality = (5)", "quality = (7)", "quality = (8)", "quality = atoi((opt) + 1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (3)", "rowsperstrip = (32773)", "rowsperstrip = (34661)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (8)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (3)", "tilelength = (32773)", "tilelength = (34661)", "tilelength = (4)", "tilelength = (5)", "tilelength = (7)", "tilelength = (8)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (3)", "tilewidth = (32773)", "tilewidth = (34661)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (8)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "processG3Options(opt)", "usage()"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	2,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	3,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	4,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	5,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	6,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	7,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	8,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	9,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	10,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	11,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	12,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	13,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	14,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	15,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	16,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	17,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	18,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	19,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	20,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	21,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	22,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	23,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	24,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	25,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	26,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	27,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	28,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	29,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	30,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	31,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	32,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	33,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	34,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	35,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	36,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	37,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	38,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	39,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	40,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	41,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	42,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	43,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	44,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	45,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	46,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	47,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	48,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	49,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	50,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	51,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	52,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	53,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	54,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	55,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	56,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	57,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	58,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	59,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	60,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	61,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	62,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	63,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	64,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	65,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	66,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	67,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	68,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	69,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	70,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	71,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	72,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	73,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	74,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	75,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	76,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	77,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	78,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	79,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	80,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	81,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	82,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	83,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	84,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	85,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	86,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	87,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	88,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	89,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	90,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	91,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	92,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	93,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	94,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	95,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	96,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	97,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	98,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	99,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	100,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	101,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	102,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	103,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	104,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	105,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	106,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	107,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	108,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	109,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	110,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	111,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	112,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	113,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	114,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	115,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	116,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	117,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	118,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	119,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	120,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	121,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	122,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	123,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	124,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	125,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	126,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	127,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	128,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	129,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	130,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	131,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	132,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	133,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	134,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	135,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	136,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	137,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	138,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	139,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	140,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	141,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	142,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	143,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	144,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	145,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	146,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	147,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	148,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	149,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	150,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	151,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	152,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	153,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	154,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	155,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	156,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	157,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	158,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	159,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	160,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	161,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	162,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	163,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	164,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	165,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	166,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	167,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	168,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	169,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	170,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	171,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	172,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	173,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	174,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	175,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	176,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	177,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	178,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	179,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	180,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	181,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	182,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	183,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	184,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	185,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	186,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	187,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	188,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	189,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	190,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	191,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	192,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	193,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	194,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	195,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	196,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	197,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	198,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	199,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	200,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	201,
									"scores":	[-6.6191857859757546]
								}, {
									"case":	202,
									"scores":	[-6.6191857859757546]
								}]
						}, {
							"switch":	14,
							"types":	[[18], [], [], [], [], [], [], [], [], [], [], [], [1], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], []],
							"begin_line":	336,
							"begin_column":	9,
							"end_line":	371,
							"end_column":	12,
							"patch_codes":	["if (__is_neg(\"\", \"L336\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor))) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execl(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execle(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execlp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execv(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execvp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((fprintf(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((fputs(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((link(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((printf(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((rename(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((sprintf(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strcasecmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strcoll(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((symlink(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((vprintf(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if (((strcmp(opt, \"packbits\") == 0)) && !__is_neg(\"\", \"L336\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor))) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-1.8401639813281463, -3.2161674613281459, -2.4858944613281455, -3.2301114653281457, -2.4858944613281455]
								}, {
									"case":	2,
									"scores":	[-3.912023005428146]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.640139076428146, -5.0161425564281465, -4.2858695564281462, -5.0300865604281455, -4.2858695564281462]
								}]
						}]
				}, {
					"line":	333,
					"switches":	[{
							"switch":	9,
							"types":	[[], [], [], [], [203, 204, 205, 206, 207, 208, 209, 210, 211, 212], [], [], [], [], [176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], [], [], [], [], [], []],
							"begin_line":	334,
							"begin_column":	0,
							"end_line":	334,
							"end_column":	0,
							"patch_codes":	["(opt)++", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (3)", "comma = (32773)", "comma = (34661)", "comma = (4)", "comma = (5)", "comma = (7)", "comma = (8)", "comma = (opt)[1]", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (3)", "compression = (32773)", "compression = (34661)", "compression = (4)", "compression = (5)", "compression = (7)", "compression = (8)", "config = (0)", "config = (1)", "config = (2)", "config = (3)", "config = (32773)", "config = (34661)", "config = (4)", "config = (5)", "config = (7)", "config = (8)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (3)", "defcompression = (32773)", "defcompression = (34661)", "defcompression = (4)", "defcompression = (5)", "defcompression = (7)", "defcompression = (8)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (3)", "defg3opts = (32773)", "defg3opts = (34661)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (7)", "defg3opts = (8)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (3)", "defpredictor = (32773)", "defpredictor = (34661)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = atoi((opt) + 1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (3)", "fillorder = (32773)", "fillorder = (34661)", "fillorder = (4)", "fillorder = (5)", "fillorder = (7)", "fillorder = (8)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (3)", "g3opts = (32773)", "g3opts = (34661)", "g3opts = (4)", "g3opts = (5)", "g3opts = (7)", "g3opts = (8)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (3)", "jpegcolormode = (32773)", "jpegcolormode = (34661)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (3)", "orientation = (32773)", "orientation = (34661)", "orientation = (4)", "orientation = (5)", "orientation = (7)", "orientation = (8)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (3)", "outtiled = (32773)", "outtiled = (34661)", "outtiled = (4)", "outtiled = (5)", "outtiled = (7)", "outtiled = (8)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (3)", "pageNum = (32773)", "pageNum = (34661)", "pageNum = (4)", "pageNum = (5)", "pageNum = (7)", "pageNum = (8)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (3)", "predictor = (32773)", "predictor = (34661)", "predictor = (4)", "predictor = (5)", "predictor = (7)", "predictor = (8)", "processG3Options((opt))", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (3)", "quality = (32773)", "quality = (34661)", "quality = (4)", "quality = (5)", "quality = (7)", "quality = (8)", "quality = atoi((opt) + 1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (3)", "rowsperstrip = (32773)", "rowsperstrip = (34661)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (7)", "rowsperstrip = (8)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (3)", "tilelength = (32773)", "tilelength = (34661)", "tilelength = (4)", "tilelength = (5)", "tilelength = (7)", "tilelength = (8)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (3)", "tilewidth = (32773)", "tilewidth = (34661)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (7)", "tilewidth = (8)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "processG3Options(opt)", "usage()", "if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 0;\n", "if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 1;\n", "if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 2;\n", "if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 32773;\n", "if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 34661;\n", "if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 3;\n", "if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 4;\n", "if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 5;\n", "if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 7;\n", "if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    return 8;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	2,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	3,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	4,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	5,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	6,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	7,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	8,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	9,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	10,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	11,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	12,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	137,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	138,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	139,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	140,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	141,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	142,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	143,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	144,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	145,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	146,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	147,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	148,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	149,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	150,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	151,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	152,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	153,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	154,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	155,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	156,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	157,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	158,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	159,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	160,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	161,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	162,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	163,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	164,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	165,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	166,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	167,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	168,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	169,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	170,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	171,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	172,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	173,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	174,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	175,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	176,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	177,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	178,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	179,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	180,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	181,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	182,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	183,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	184,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	185,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	186,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	187,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	188,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	189,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	190,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	191,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	192,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	193,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	194,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	195,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	196,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	197,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	198,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	199,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	200,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	201,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	202,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	203,
									"scores":	[-4.48267463192086, -6.67521259716486, -6.26907589292086, -6.69095712416486, -6.26907589292086]
								}, {
									"case":	204,
									"scores":	[-6.50112063192086, -8.69365859716486, -8.28752189292086, -8.70940312416486, -8.28752189292086]
								}, {
									"case":	205,
									"scores":	[-6.50112063192086, -8.69365859716486, -8.28752189292086, -8.70940312416486, -8.28752189292086]
								}, {
									"case":	206,
									"scores":	[-6.50112063192086, -8.69365859716486, -8.28752189292086, -8.70940312416486, -8.28752189292086]
								}, {
									"case":	207,
									"scores":	[-6.50112063192086, -8.69365859716486, -8.28752189292086, -8.70940312416486, -8.28752189292086]
								}, {
									"case":	208,
									"scores":	[-6.50112063192086, -8.69365859716486, -8.28752189292086, -8.70940312416486, -8.28752189292086]
								}, {
									"case":	209,
									"scores":	[-6.50112063192086, -8.69365859716486, -8.28752189292086, -8.70940312416486, -8.28752189292086]
								}, {
									"case":	210,
									"scores":	[-6.50112063192086, -8.69365859716486, -8.28752189292086, -8.70940312416486, -8.28752189292086]
								}, {
									"case":	211,
									"scores":	[-6.50112063192086, -8.69365859716486, -8.28752189292086, -8.70940312416486, -8.28752189292086]
								}, {
									"case":	212,
									"scores":	[-6.50112063192086, -8.69365859716486, -8.28752189292086, -8.70940312416486, -8.28752189292086]
								}]
						}, {
							"switch":	10,
							"types":	[[19], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], []],
							"begin_line":	334,
							"begin_column":	2,
							"end_line":	371,
							"end_column":	12,
							"patch_codes":	["if (__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor))) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if (((strcmp(opt, \"none\") == 0)) || __is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor))) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execl(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execle(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execlp(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execv(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((execvp(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((fprintf(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((fputs(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((link(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((printf(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((rename(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((sprintf(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strcasecmp(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strcmp(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((strcoll(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((symlink(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if ((vprintf(opt, \"none\") == 0)) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n", "if (((strcmp(opt, \"none\") == 0)) && !__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor))) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-1.8769834813281463, -3.2529869613281455, -2.5227139613281455, -3.2669309653281458, -2.5227139613281455]
								}, {
									"case":	2,
									"scores":	[-3.6769585764281461, -5.0529620564281466, -4.3226890564281462, -5.0669060604281464, -4.3226890564281462]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-3.912023005428146]
								}, {
									"case":	11,
									"scores":	[-3.912023005428146]
								}, {
									"case":	12,
									"scores":	[-3.912023005428146]
								}, {
									"case":	13,
									"scores":	[-3.912023005428146]
								}, {
									"case":	14,
									"scores":	[-3.912023005428146]
								}, {
									"case":	15,
									"scores":	[-3.912023005428146]
								}, {
									"case":	16,
									"scores":	[-3.912023005428146]
								}, {
									"case":	17,
									"scores":	[-3.912023005428146]
								}, {
									"case":	18,
									"scores":	[-3.912023005428146]
								}, {
									"case":	19,
									"scores":	[-3.6769585764281461, -5.0529620564281466, -4.3226890564281462, -5.0669060604281464, -4.3226890564281462]
								}]
						}, {
							"switch":	30,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	334,
							"begin_column":	2,
							"end_line":	371,
							"end_column":	12,
							"patch_codes":	["if (!__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)))\n    if ((strcmp(opt, \"none\") == 0)) {\n        defcompression = 1;\n    } else if ((strcmp(opt, \"packbits\") == 0)) {\n        defcompression = 32773;\n    } else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n        char *cp = strchr(opt, ':');\n        defcompression = 7;\n        while (cp)\n            {\n                if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                    quality = atoi(cp + 1);\n                else if (cp[1] == 'r')\n                    jpegcolormode = 0;\n                else\n                    usage();\n                cp = strchr(cp + 1, ':');\n            }\n    } else if ((strncmp(opt, \"g3\", 2) == 0)) {\n        processG3Options(opt);\n        defcompression = 3;\n    } else if ((strcmp(opt, \"g4\") == 0)) {\n        defcompression = 4;\n    } else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n        char *cp = strchr(opt, ':');\n        if (cp)\n            defpredictor = atoi(cp + 1);\n        defcompression = 5;\n    } else if ((strncmp(opt, \"zip\", 3) == 0)) {\n        char *cp = strchr(opt, ':');\n        if (cp)\n            defpredictor = atoi(cp + 1);\n        defcompression = 8;\n    } else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n        defcompression = 34661;\n    } else\n        return (0);\n", "if (!__is_neg(\"\", \"L334\", 5, &(opt), sizeof (opt), &(defcompression), sizeof (defcompression), &(quality), sizeof (quality), &(jpegcolormode), sizeof (jpegcolormode), &(defpredictor), sizeof (defpredictor)) && ((strcmp(opt, \"none\") == 0))) {\n    defcompression = 1;\n} else if ((strcmp(opt, \"packbits\") == 0)) {\n    defcompression = 32773;\n} else if ((strncmp(opt, \"jpeg\", 4) == 0)) {\n    char *cp = strchr(opt, ':');\n    defcompression = 7;\n    while (cp)\n        {\n            if (((*__ctype_b_loc())[(int)(((int)cp[1]))] & (unsigned short)_ISdigit))\n                quality = atoi(cp + 1);\n            else if (cp[1] == 'r')\n                jpegcolormode = 0;\n            else\n                usage();\n            cp = strchr(cp + 1, ':');\n        }\n} else if ((strncmp(opt, \"g3\", 2) == 0)) {\n    processG3Options(opt);\n    defcompression = 3;\n} else if ((strcmp(opt, \"g4\") == 0)) {\n    defcompression = 4;\n} else if ((strncmp(opt, \"lzw\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 5;\n} else if ((strncmp(opt, \"zip\", 3) == 0)) {\n    char *cp = strchr(opt, ':');\n    if (cp)\n        defpredictor = atoi(cp + 1);\n    defcompression = 8;\n} else if ((strncmp(opt, \"jbig\", 4) == 0)) {\n    defcompression = 34661;\n} else\n    return (0);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.38129900592086, -5.75730248592086, -5.02702948592086, -5.77124648992086, -5.02702948592086]
								}, {
									"case":	2,
									"scores":	[-3.72269416292086, -5.09869764292086, -4.36842464292086, -5.11264164692086, -4.36842464292086]
								}]
						}]
				}, {
					"line":	429,
					"switches":	[]
				}, {
					"line":	432,
					"switches":	[{
							"switch":	31,
							"types":	[[], [], [], [], [99], [], [], [], [], [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], [], [], [], [], [], []],
							"begin_line":	433,
							"begin_column":	0,
							"end_line":	433,
							"end_column":	0,
							"patch_codes":	["comma = (-1)", "comma = (0)", "comma = (1)", "comma = (8192)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (8192)", "config = (-1)", "config = (0)", "config = (1)", "config = (8192)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (8192)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (8192)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (8192)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (8192)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (8192)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (8192)", "jpegcolormode = (i)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (8192)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (8192)", "outtiled = (i)", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (8192)", "pageNum = (i)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (8192)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (8192)", "quality = (i)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (8192)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (8192)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (8192)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L433\", 1, &(i), sizeof (i)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	2,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	3,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	4,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	5,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	6,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	7,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	8,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	9,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	10,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	11,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	12,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-5.8476081281071846]
								}]
						}, {
							"switch":	32,
							"types":	[[], [], [1], [], [], [], [34, 35], [], [27, 28, 29, 30, 31, 32, 33], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [], [], [26]],
							"begin_line":	433,
							"begin_column":	2,
							"end_line":	433,
							"end_column":	20,
							"patch_codes":	["if (!__is_neg(\"\", \"L433\", 1, &(i), sizeof (i)))\n    setbuf(stderr, buf);\n", "_IO_sgetn(stderr, buf, -1)", "_IO_sgetn(stderr, buf, 0)", "_IO_sgetn(stderr, buf, 1)", "_IO_sgetn(stderr, buf, 8192)", "_IO_vfprintf(stderr, buf, 0)", "__trident_output(stderr, buf, -1)", "__trident_output(stderr, buf, 0)", "__trident_output(stderr, buf, 1)", "__trident_output(stderr, buf, 8192)", "__trident_output(stderr, buf, i)", "__trident_output(stderr, buf, ignore)", "__trident_output(stderr, buf, jpegcolormode)", "__trident_output(stderr, buf, outtiled)", "__trident_output(stderr, buf, pageNum)", "__trident_output(stderr, buf, quality)", "readlink(stderr, buf, -1)", "readlink(stderr, buf, 0)", "readlink(stderr, buf, 1)", "readlink(stderr, buf, 8192)", "setbuffer(stderr, buf, -1)", "setbuffer(stderr, buf, 0)", "setbuffer(stderr, buf, 1)", "setbuffer(stderr, buf, 8192)", "vfprintf(stderr, buf, 0)", "{\n}\n", "TIFFRGBAImageOK(stderr, buf)", "__stat_file_close(stderr, buf)", "fgetpos(stderr, buf)", "fprintf(stderr, buf)", "fsetpos(stderr, buf)", "printf(stderr, buf)", "realpath(stderr, buf)", "setbuf((&buf), buf)", "setbuf((&i), buf)"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.086125203863185]
								}, {
									"case":	2,
									"scores":	[-3.952428420063185]
								}, {
									"case":	3,
									"scores":	[-3.952428420063185]
								}, {
									"case":	4,
									"scores":	[-3.952428420063185]
								}, {
									"case":	5,
									"scores":	[-3.952428420063185]
								}, {
									"case":	6,
									"scores":	[-3.952428420063185]
								}, {
									"case":	7,
									"scores":	[-3.952428420063185]
								}, {
									"case":	8,
									"scores":	[-3.952428420063185]
								}, {
									"case":	9,
									"scores":	[-3.952428420063185]
								}, {
									"case":	10,
									"scores":	[-3.952428420063185]
								}, {
									"case":	11,
									"scores":	[-3.952428420063185]
								}, {
									"case":	12,
									"scores":	[-3.952428420063185]
								}, {
									"case":	13,
									"scores":	[-3.952428420063185]
								}, {
									"case":	14,
									"scores":	[-3.952428420063185]
								}, {
									"case":	15,
									"scores":	[-3.952428420063185]
								}, {
									"case":	16,
									"scores":	[-3.952428420063185]
								}, {
									"case":	17,
									"scores":	[-3.952428420063185]
								}, {
									"case":	18,
									"scores":	[-3.952428420063185]
								}, {
									"case":	19,
									"scores":	[-3.952428420063185]
								}, {
									"case":	20,
									"scores":	[-3.952428420063185]
								}, {
									"case":	21,
									"scores":	[-3.952428420063185]
								}, {
									"case":	22,
									"scores":	[-3.952428420063185]
								}, {
									"case":	23,
									"scores":	[-3.952428420063185]
								}, {
									"case":	24,
									"scores":	[-3.952428420063185]
								}, {
									"case":	25,
									"scores":	[-3.952428420063185]
								}, {
									"case":	26,
									"scores":	[-3.952428420063185]
								}, {
									"case":	27,
									"scores":	[-3.952428420063185]
								}, {
									"case":	28,
									"scores":	[-3.952428420063185]
								}, {
									"case":	29,
									"scores":	[-3.952428420063185]
								}, {
									"case":	30,
									"scores":	[-3.952428420063185]
								}, {
									"case":	31,
									"scores":	[-3.952428420063185]
								}, {
									"case":	32,
									"scores":	[-3.952428420063185]
								}, {
									"case":	33,
									"scores":	[-3.952428420063185]
								}, {
									"case":	34,
									"scores":	[-3.952428420063185]
								}, {
									"case":	35,
									"scores":	[-3.952428420063185]
								}]
						}]
				}, {
					"line":	433,
					"switches":	[{
							"switch":	33,
							"types":	[[], [], [], [], [99], [], [], [], [], [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], [], [], [], [], [], []],
							"begin_line":	434,
							"begin_column":	0,
							"end_line":	434,
							"end_column":	0,
							"patch_codes":	["comma = (-1)", "comma = (0)", "comma = (1)", "comma = (8192)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (8192)", "config = (-1)", "config = (0)", "config = (1)", "config = (8192)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (8192)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (8192)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (8192)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (8192)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (8192)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (8192)", "jpegcolormode = (i)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (8192)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (8192)", "outtiled = (i)", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (8192)", "pageNum = (i)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (8192)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (8192)", "quality = (i)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (8192)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (8192)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (8192)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L434\", 1, &(i), sizeof (i)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	2,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	3,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	4,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	5,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	6,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	7,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	8,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	9,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	10,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	11,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	12,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	13,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	14,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	15,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	16,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	17,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	18,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	19,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	20,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	21,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	22,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	23,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	24,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	25,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	26,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	27,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	28,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	29,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	30,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	31,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	32,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	33,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	34,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	35,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	36,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	37,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	38,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	39,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	40,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	41,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	42,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	43,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	44,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	45,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	46,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	47,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	48,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	49,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	50,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	51,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	52,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	53,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	54,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	55,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	56,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	57,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	58,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	59,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	60,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	61,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	62,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	63,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	64,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	65,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	66,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	67,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	68,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	69,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	70,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	71,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	72,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	73,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	74,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	75,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	76,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	77,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	78,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	79,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	80,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	81,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	82,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	83,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	84,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	85,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	86,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	87,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	88,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	89,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	90,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	91,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	92,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	93,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	94,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	95,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	96,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	97,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	98,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	99,
									"scores":	[-6.0819064207896645]
								}]
						}, {
							"switch":	34,
							"types":	[[], [], [1], [], [], [], [15, 16, 17], [], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [], [], [], [], [], [], [], [2]],
							"begin_line":	434,
							"begin_column":	2,
							"end_line":	434,
							"end_column":	44,
							"patch_codes":	["if (!__is_neg(\"\", \"L434\", 1, &(i), sizeof (i)))\n    fprintf(stderr, \"%s\\n\\n\", TIFFGetVersion());\n", "{\n}\n", "TIFFError(stderr, \"%s\\n\\n\", TIFFGetVersion())", "TIFFErrorExt(stderr, \"%s\\n\\n\", TIFFGetVersion())", "TIFFWarning(stderr, \"%s\\n\\n\", TIFFGetVersion())", "TIFFWarningExt(stderr, \"%s\\n\\n\", TIFFGetVersion())", "_IO_vfprintf(stderr, \"%s\\n\\n\", TIFFGetVersion())", "execl(stderr, \"%s\\n\\n\", TIFFGetVersion())", "execle(stderr, \"%s\\n\\n\", TIFFGetVersion())", "execlp(stderr, \"%s\\n\\n\", TIFFGetVersion())", "fprintf(stderr, \"%s\\n\\n\", TIFFGetVersion())", "printf(stderr, \"%s\\n\\n\", TIFFGetVersion())", "sprintf(stderr, \"%s\\n\\n\", TIFFGetVersion())", "vfprintf(stderr, \"%s\\n\\n\", TIFFGetVersion())", "fprintf((&buf), \"%s\\n\\n\", TIFFGetVersion())", "fprintf((&i), \"%s\\n\\n\", TIFFGetVersion())", "fprintf(stderr, \"%s\\n\\n or the directory does not exist\", TIFFGetVersion())"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.0979955005456654]
								}, {
									"case":	2,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	3,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	4,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	5,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	6,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	7,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	8,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	9,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	10,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	11,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	12,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	13,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	14,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	15,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	16,
									"scores":	[-3.9322257127456655]
								}, {
									"case":	17,
									"scores":	[-3.9322257127456655]
								}]
						}]
				}, {
					"line":	454,
					"switches":	[]
				}, {
					"line":	455,
					"switches":	[{
							"switch":	37,
							"types":	[[], [], [], [], [188], [], [], [], [], [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], [], [], [], [], [], []],
							"begin_line":	456,
							"begin_column":	2,
							"end_line":	456,
							"end_column":	2,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((in), tag, shortv)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "TIFFSetField((out), tag, shortv)", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (shortv)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (shortv)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (shortv)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (shortv)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (shortv)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (shortv)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (shortv)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "TIFFSetField(out, tag, shortv)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L456\", 6, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv), sizeof (shortv), &(count), sizeof (count), &(type), sizeof (type)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	2,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	3,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	4,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	5,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	6,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	7,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	8,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	9,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	10,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	11,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	12,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	13,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	14,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	15,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	16,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	17,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	18,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	19,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	20,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	21,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	22,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	23,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	24,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	25,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	26,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	27,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	28,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	29,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	30,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	31,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	32,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	33,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	34,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	35,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	36,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	37,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	38,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	39,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	40,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	41,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	42,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	43,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	44,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	45,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	46,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	47,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	48,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	49,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	50,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	51,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	52,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	53,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	54,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	55,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	56,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	57,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	58,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	59,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	60,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	61,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	62,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	63,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	64,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	65,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	66,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	67,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	68,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	69,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	70,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	71,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	72,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	73,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	74,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	75,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	76,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	77,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	78,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	79,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	80,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	81,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	82,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	83,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	84,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	85,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	86,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	87,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	88,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	89,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	90,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	91,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	92,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	93,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	94,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	95,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	96,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	97,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	98,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	99,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	100,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	101,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	102,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	103,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	104,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	105,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	106,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	107,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	108,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	109,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	110,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	111,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	112,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	113,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	114,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	115,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	116,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	117,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	118,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	119,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	120,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	121,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	122,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	123,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	124,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	125,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	126,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	127,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	128,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	129,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	130,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	131,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	132,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	133,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	134,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	135,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	136,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	137,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	138,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	139,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	140,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	141,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	142,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	143,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	144,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	145,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	146,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	147,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	148,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	149,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	150,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	151,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	152,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	153,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	154,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	155,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	156,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	157,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	158,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	159,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	160,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	161,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	162,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	163,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	164,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	165,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	166,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	167,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	168,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	169,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	170,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	171,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	172,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	173,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	174,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	175,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	176,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	177,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	178,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	179,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	180,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	181,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	182,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	183,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	184,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	185,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	186,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	187,
									"scores":	[-7.6293211518517277]
								}, {
									"case":	188,
									"scores":	[-8.97926907185173, -8.97926907185173, -8.57183137185173, -8.68630632185173, -10.065487671851727, -10.065487671851727]
								}]
						}, {
							"switch":	38,
							"types":	[[10], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9], []],
							"begin_line":	456,
							"begin_column":	4,
							"end_line":	456,
							"end_column":	25,
							"patch_codes":	["if (__is_neg(\"\", \"L456\", 6, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv), sizeof (shortv), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, shortv);\n", "if ((TIFFGetField(in, tag, &shortv)) || __is_neg(\"\", \"L456\", 6, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv), sizeof (shortv), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, shortv);\n", "if (TIFFGetFieldDefaulted(in, tag, &shortv))\n    TIFFSetField(out, tag, shortv);\n", "if (TIFFReadRGBAStrip(in, tag, &shortv))\n    TIFFSetField(out, tag, shortv);\n", "if (TIFFSetField(in, tag, &shortv))\n    TIFFSetField(out, tag, shortv);\n", "if (TIFFVGetField(in, tag, &shortv))\n    TIFFSetField(out, tag, shortv);\n", "if (TIFFVGetFieldDefaulted(in, tag, &shortv))\n    TIFFSetField(out, tag, shortv);\n", "if (TIFFVSetField(in, tag, &shortv))\n    TIFFSetField(out, tag, shortv);\n", "if (printf(in, tag, &shortv))\n    TIFFSetField(out, tag, shortv);\n", "if ((TIFFGetField(in, tag, &shortv)) && !__is_neg(\"\", \"L456\", 6, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv), sizeof (shortv), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, shortv);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.9817289454281459, -4.9817289454281459, -3.6909358454281458, -3.6749212454281457, -4.411364845428146, -4.411364845428146]
								}, {
									"case":	2,
									"scores":	[-5.8972944994281455, -5.8972944994281455, -4.6065013994281454, -4.5904867994281453, -5.3269303994281456, -5.3269303994281456]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-5.8972944994281455, -5.8972944994281455, -4.6065013994281454, -4.5904867994281453, -5.3269303994281456, -5.3269303994281456]
								}]
						}, {
							"switch":	39,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	456,
							"begin_column":	4,
							"end_line":	456,
							"end_column":	25,
							"patch_codes":	["if (!__is_neg(\"\", \"L456\", 6, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv), sizeof (shortv), &(count), sizeof (count), &(type), sizeof (type)))\n    if (TIFFGetField(in, tag, &shortv))\n        TIFFSetField(out, tag, shortv);\n", "if (!__is_neg(\"\", \"L456\", 6, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv), sizeof (shortv), &(count), sizeof (count), &(type), sizeof (type)) && (TIFFGetField(in, tag, &shortv)))\n    TIFFSetField(out, tag, shortv);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-9.60214797185173, -9.60214797185173, -8.31135487185173, -8.29534027185173, -9.03178387185173, -9.03178387185173]
								}, {
									"case":	2,
									"scores":	[-10.563639405851728, -10.563639405851728, -9.27284630585173, -9.2568317058517273, -9.99327530585173, -9.99327530585173]
								}]
						}]
				}, {
					"line":	457,
					"switches":	[]
				}, {
					"line":	458,
					"switches":	[{
							"switch":	42,
							"types":	[[], [], [], [], [195], [], [], [], [], [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], [], [], [], [], [], []],
							"begin_line":	459,
							"begin_column":	2,
							"end_line":	459,
							"end_column":	2,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((in), tag, shortv1, shortv2)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "TIFFSetField((out), tag, shortv1, shortv2)", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (shortv1)", "compression = (shortv2)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (shortv1)", "config = (shortv2)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (shortv1)", "defcompression = (shortv2)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (shortv1)", "defpredictor = (shortv2)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (shortv1)", "fillorder = (shortv2)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (shortv1)", "orientation = (shortv2)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (shortv1)", "predictor = (shortv2)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "TIFFSetField(out, tag, shortv1, shortv2)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L459\", 7, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv1), sizeof (shortv1), &(shortv2), sizeof (shortv2), &(count), sizeof (count), &(type), sizeof (type)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	2,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	3,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	4,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	5,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	6,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	7,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	8,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	9,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	10,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	11,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	12,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	13,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	14,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	15,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	16,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	17,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	18,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	19,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	20,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	21,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	22,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	23,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	24,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	25,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	26,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	27,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	28,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	29,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	30,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	31,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	32,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	33,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	34,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	35,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	36,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	37,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	38,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	39,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	40,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	41,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	42,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	43,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	44,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	45,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	46,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	47,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	48,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	49,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	50,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	51,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	52,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	53,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	54,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	55,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	56,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	57,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	58,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	59,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	60,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	61,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	62,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	63,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	64,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	65,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	66,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	67,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	68,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	69,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	70,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	71,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	72,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	73,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	74,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	75,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	76,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	77,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	78,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	79,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	80,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	81,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	82,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	83,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	84,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	85,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	86,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	87,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	88,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	89,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	90,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	91,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	92,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	93,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	94,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	95,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	96,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	97,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	98,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	99,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	100,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	101,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	102,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	103,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	104,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	105,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	106,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	107,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	108,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	109,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	110,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	111,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	112,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	113,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	114,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	115,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	116,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	117,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	118,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	119,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	120,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	121,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	122,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	123,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	124,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	125,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	126,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	127,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	128,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	129,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	130,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	131,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	132,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	133,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	134,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	135,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	136,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	137,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	138,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	139,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	140,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	141,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	142,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	143,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	144,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	145,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	146,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	147,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	148,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	149,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	150,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	151,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	152,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	153,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	154,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	155,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	156,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	157,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	158,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	159,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	160,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	161,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	162,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	163,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	164,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	165,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	166,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	167,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	168,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	169,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	170,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	171,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	172,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	173,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	174,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	175,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	176,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	177,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	178,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	179,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	180,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	181,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	182,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	183,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	184,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	185,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	186,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	187,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	188,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	189,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	190,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	191,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	192,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	193,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	194,
									"scores":	[-7.6091184445342082]
								}, {
									"case":	195,
									"scores":	[-8.95906636453421, -8.95906636453421, -8.55162866453421, -8.66610361453421, -8.66610361453421, -10.045284964534208, -10.045284964534208]
								}]
						}, {
							"switch":	43,
							"types":	[[6], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5], []],
							"begin_line":	459,
							"begin_column":	4,
							"end_line":	459,
							"end_column":	36,
							"patch_codes":	["if (__is_neg(\"\", \"L459\", 7, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv1), sizeof (shortv1), &(shortv2), sizeof (shortv2), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, shortv1, shortv2);\n", "if ((TIFFGetField(in, tag, &shortv1, &shortv2)) || __is_neg(\"\", \"L459\", 7, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv1), sizeof (shortv1), &(shortv2), sizeof (shortv2), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, shortv1, shortv2);\n", "if (TIFFGetFieldDefaulted(in, tag, &shortv1, &shortv2))\n    TIFFSetField(out, tag, shortv1, shortv2);\n", "if (TIFFSetField(in, tag, &shortv1, &shortv2))\n    TIFFSetField(out, tag, shortv1, shortv2);\n", "if (printf(in, tag, &shortv1, &shortv2))\n    TIFFSetField(out, tag, shortv1, shortv2);\n", "if ((TIFFGetField(in, tag, &shortv1, &shortv2)) && !__is_neg(\"\", \"L459\", 7, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv1), sizeof (shortv1), &(shortv2), sizeof (shortv2), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, shortv1, shortv2);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.9817289454281459, -4.9817289454281459, -3.6909358454281458, -3.6749212454281457, -3.6749212454281457, -4.411364845428146, -4.411364845428146]
								}, {
									"case":	2,
									"scores":	[-5.8972944994281455, -5.8972944994281455, -4.6065013994281454, -4.5904867994281453, -4.5904867994281453, -5.3269303994281456, -5.3269303994281456]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-5.8972944994281455, -5.8972944994281455, -4.6065013994281454, -4.5904867994281453, -4.5904867994281453, -5.3269303994281456, -5.3269303994281456]
								}]
						}, {
							"switch":	44,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	459,
							"begin_column":	4,
							"end_line":	459,
							"end_column":	36,
							"patch_codes":	["if (!__is_neg(\"\", \"L459\", 7, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv1), sizeof (shortv1), &(shortv2), sizeof (shortv2), &(count), sizeof (count), &(type), sizeof (type)))\n    if (TIFFGetField(in, tag, &shortv1, &shortv2))\n        TIFFSetField(out, tag, shortv1, shortv2);\n", "if (!__is_neg(\"\", \"L459\", 7, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(shortv1), sizeof (shortv1), &(shortv2), sizeof (shortv2), &(count), sizeof (count), &(type), sizeof (type)) && (TIFFGetField(in, tag, &shortv1, &shortv2)))\n    TIFFSetField(out, tag, shortv1, shortv2);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-9.58194526453421, -9.58194526453421, -8.29115216453421, -8.27513756453421, -8.27513756453421, -9.01158116453421, -9.01158116453421]
								}, {
									"case":	2,
									"scores":	[-10.543436698534208, -10.543436698534208, -9.25264359853421, -9.23662899853421, -9.23662899853421, -9.97307259853421, -9.97307259853421]
								}]
						}]
				}, {
					"line":	461,
					"switches":	[{
							"switch":	46,
							"types":	[[], [], [], [], [197], [], [], [], [], [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], [], [], [], [], [], []],
							"begin_line":	462,
							"begin_column":	2,
							"end_line":	462,
							"end_column":	2,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((in), tag, tr, tg, tb, ta)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "TIFFSetField((out), tag, tr, tg, tb, ta)", "TIFFSetField(out, tag, (ta), tg, tb, ta)", "TIFFSetField(out, tag, (tb), tg, tb, ta)", "TIFFSetField(out, tag, (tg), tg, tb, ta)", "TIFFSetField(out, tag, (tr), tg, tb, ta)", "TIFFSetField(out, tag, tr, (ta), tb, ta)", "TIFFSetField(out, tag, tr, (tb), tb, ta)", "TIFFSetField(out, tag, tr, (tg), tb, ta)", "TIFFSetField(out, tag, tr, (tr), tb, ta)", "TIFFSetField(out, tag, tr, tg, (ta), ta)", "TIFFSetField(out, tag, tr, tg, (tb), ta)", "TIFFSetField(out, tag, tr, tg, (tg), ta)", "TIFFSetField(out, tag, tr, tg, (tr), ta)", "TIFFSetField(out, tag, tr, tg, tb, (ta))", "TIFFSetField(out, tag, tr, tg, tb, (tb))", "TIFFSetField(out, tag, tr, tg, tb, (tg))", "TIFFSetField(out, tag, tr, tg, tb, (tr))", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "TIFFSetField(out, tag, tr, tg, tb, ta)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L462\", 9, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(tr), sizeof (tr), &(tg), sizeof (tg), &(tb), sizeof (tb), &(ta), sizeof (ta), &(count), sizeof (count), &(type), sizeof (type)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	2,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	3,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	4,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	5,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	6,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	7,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	8,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	9,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	10,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	11,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	12,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	13,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	14,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	15,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	16,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	17,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	18,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	19,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	20,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	21,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	22,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	23,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	24,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	25,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	26,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	27,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	28,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	29,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	30,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	31,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	32,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	33,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	34,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	35,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	36,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	37,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	38,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	39,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	40,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	41,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	42,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	43,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	44,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	45,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	46,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	47,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	48,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	49,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	50,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	51,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	52,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	53,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	54,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	55,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	56,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	57,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	58,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	59,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	60,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	61,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	62,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	63,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	64,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	65,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	66,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	67,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	68,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	69,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	70,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	71,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	72,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	73,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	74,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	75,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	76,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	77,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	78,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	79,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	80,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	81,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	82,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	83,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	84,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	85,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	86,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	87,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	88,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	89,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	90,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	91,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	92,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	93,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	94,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	95,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	96,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	97,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	98,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	99,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	100,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	101,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	102,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	103,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	104,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	105,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	106,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	107,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	108,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	109,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	110,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	111,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	112,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	113,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	114,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	115,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	116,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	117,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	118,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	119,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	120,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	121,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	122,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	123,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	124,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	125,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	126,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	127,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	128,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	129,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	130,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	131,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	132,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	133,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	134,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	135,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	136,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	137,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	138,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	139,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	140,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	141,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	142,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	143,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	144,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	145,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	146,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	147,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	148,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	149,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	150,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	151,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	152,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	153,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	154,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	155,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	156,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	157,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	158,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	159,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	160,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	161,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	162,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	163,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	164,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	165,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	166,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	167,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	168,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	169,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	170,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	171,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	172,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	173,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	174,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	175,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	176,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	177,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	178,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	179,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	180,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	181,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	182,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	183,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	184,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	185,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	186,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	187,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	188,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	189,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	190,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	191,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	192,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	193,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	194,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	195,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	196,
									"scores":	[-7.5889157372166887]
								}, {
									"case":	197,
									"scores":	[-8.93886365721669, -8.93886365721669, -8.53142595721669, -8.65260260721669, -8.65260260721669, -8.65260260721669, -8.65260260721669, -10.025082257216688, -10.025082257216688]
								}]
						}, {
							"switch":	47,
							"types":	[[6], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5], []],
							"begin_line":	462,
							"begin_column":	4,
							"end_line":	462,
							"end_column":	34,
							"patch_codes":	["if (__is_neg(\"\", \"L462\", 9, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(tr), sizeof (tr), &(tg), sizeof (tg), &(tb), sizeof (tb), &(ta), sizeof (ta), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, tr, tg, tb, ta);\n", "if ((TIFFGetField(in, tag, &tr, &tg, &tb, &ta)) || __is_neg(\"\", \"L462\", 9, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(tr), sizeof (tr), &(tg), sizeof (tg), &(tb), sizeof (tb), &(ta), sizeof (ta), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, tr, tg, tb, ta);\n", "if (TIFFGetFieldDefaulted(in, tag, &tr, &tg, &tb, &ta))\n    TIFFSetField(out, tag, tr, tg, tb, ta);\n", "if (TIFFSetField(in, tag, &tr, &tg, &tb, &ta))\n    TIFFSetField(out, tag, tr, tg, tb, ta);\n", "if (printf(in, tag, &tr, &tg, &tb, &ta))\n    TIFFSetField(out, tag, tr, tg, tb, ta);\n", "if ((TIFFGetField(in, tag, &tr, &tg, &tb, &ta)) && !__is_neg(\"\", \"L462\", 9, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(tr), sizeof (tr), &(tg), sizeof (tg), &(tb), sizeof (tb), &(ta), sizeof (ta), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, tr, tg, tb, ta);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.9817289454281459, -4.9817289454281459, -3.6909358454281458, -4.0237104454281454, -4.0237104454281454, -4.0237104454281454, -4.0237104454281454, -4.411364845428146, -4.411364845428146]
								}, {
									"case":	2,
									"scores":	[-6.5186454994281453, -6.5186454994281453, -5.2278523994281452, -5.5606269994281465, -5.5606269994281465, -5.5606269994281465, -5.5606269994281465, -5.9482813994281454, -5.9482813994281454]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-6.5186454994281453, -6.5186454994281453, -5.2278523994281452, -5.5606269994281465, -5.5606269994281465, -5.5606269994281465, -5.5606269994281465, -5.9482813994281454, -5.9482813994281454]
								}]
						}, {
							"switch":	48,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	462,
							"begin_column":	4,
							"end_line":	462,
							"end_column":	34,
							"patch_codes":	["if (!__is_neg(\"\", \"L462\", 9, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(tr), sizeof (tr), &(tg), sizeof (tg), &(tb), sizeof (tb), &(ta), sizeof (ta), &(count), sizeof (count), &(type), sizeof (type)))\n    if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n        TIFFSetField(out, tag, tr, tg, tb, ta);\n", "if (!__is_neg(\"\", \"L462\", 9, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(tr), sizeof (tr), &(tg), sizeof (tg), &(tb), sizeof (tb), &(ta), sizeof (ta), &(count), sizeof (count), &(type), sizeof (type)) && (TIFFGetField(in, tag, &tr, &tg, &tb, &ta)))\n    TIFFSetField(out, tag, tr, tg, tb, ta);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-9.56174255721669, -9.56174255721669, -8.27094945721669, -8.60372405721669, -8.60372405721669, -8.60372405721669, -8.60372405721669, -8.99137845721669, -8.99137845721669]
								}, {
									"case":	2,
									"scores":	[-11.144584991216689, -11.144584991216689, -9.8537918912166873, -10.186566491216688, -10.186566491216688, -10.186566491216688, -10.186566491216688, -10.574220891216688, -10.574220891216688]
								}]
						}]
				}, {
					"line":	463,
					"switches":	[]
				}, {
					"line":	464,
					"switches":	[]
				}, {
					"line":	462,
					"switches":	[{
							"switch":	49,
							"types":	[[], [], [], [], [178], [], [], [], [], [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [], [], [], [], [], []],
							"begin_line":	463,
							"begin_column":	8,
							"end_line":	463,
							"end_column":	8,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L463\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.56871302989917]
								}, {
									"case":	2,
									"scores":	[-7.56871302989917]
								}, {
									"case":	3,
									"scores":	[-7.56871302989917]
								}, {
									"case":	4,
									"scores":	[-7.56871302989917]
								}, {
									"case":	5,
									"scores":	[-7.56871302989917]
								}, {
									"case":	6,
									"scores":	[-7.56871302989917]
								}, {
									"case":	7,
									"scores":	[-7.56871302989917]
								}, {
									"case":	8,
									"scores":	[-7.56871302989917]
								}, {
									"case":	9,
									"scores":	[-7.56871302989917]
								}, {
									"case":	10,
									"scores":	[-7.56871302989917]
								}, {
									"case":	11,
									"scores":	[-7.56871302989917]
								}, {
									"case":	12,
									"scores":	[-7.56871302989917]
								}, {
									"case":	13,
									"scores":	[-7.56871302989917]
								}, {
									"case":	14,
									"scores":	[-7.56871302989917]
								}, {
									"case":	15,
									"scores":	[-7.56871302989917]
								}, {
									"case":	16,
									"scores":	[-7.56871302989917]
								}, {
									"case":	17,
									"scores":	[-7.56871302989917]
								}, {
									"case":	18,
									"scores":	[-7.56871302989917]
								}, {
									"case":	19,
									"scores":	[-7.56871302989917]
								}, {
									"case":	20,
									"scores":	[-7.56871302989917]
								}, {
									"case":	21,
									"scores":	[-7.56871302989917]
								}, {
									"case":	22,
									"scores":	[-7.56871302989917]
								}, {
									"case":	23,
									"scores":	[-7.56871302989917]
								}, {
									"case":	24,
									"scores":	[-7.56871302989917]
								}, {
									"case":	25,
									"scores":	[-7.56871302989917]
								}, {
									"case":	26,
									"scores":	[-7.56871302989917]
								}, {
									"case":	27,
									"scores":	[-7.56871302989917]
								}, {
									"case":	28,
									"scores":	[-7.56871302989917]
								}, {
									"case":	29,
									"scores":	[-7.56871302989917]
								}, {
									"case":	30,
									"scores":	[-7.56871302989917]
								}, {
									"case":	31,
									"scores":	[-7.56871302989917]
								}, {
									"case":	32,
									"scores":	[-7.56871302989917]
								}, {
									"case":	33,
									"scores":	[-7.56871302989917]
								}, {
									"case":	34,
									"scores":	[-7.56871302989917]
								}, {
									"case":	35,
									"scores":	[-7.56871302989917]
								}, {
									"case":	36,
									"scores":	[-7.56871302989917]
								}, {
									"case":	37,
									"scores":	[-7.56871302989917]
								}, {
									"case":	38,
									"scores":	[-7.56871302989917]
								}, {
									"case":	39,
									"scores":	[-7.56871302989917]
								}, {
									"case":	40,
									"scores":	[-7.56871302989917]
								}, {
									"case":	41,
									"scores":	[-7.56871302989917]
								}, {
									"case":	42,
									"scores":	[-7.56871302989917]
								}, {
									"case":	43,
									"scores":	[-7.56871302989917]
								}, {
									"case":	44,
									"scores":	[-7.56871302989917]
								}, {
									"case":	45,
									"scores":	[-7.56871302989917]
								}, {
									"case":	46,
									"scores":	[-7.56871302989917]
								}, {
									"case":	47,
									"scores":	[-7.56871302989917]
								}, {
									"case":	48,
									"scores":	[-7.56871302989917]
								}, {
									"case":	49,
									"scores":	[-7.56871302989917]
								}, {
									"case":	50,
									"scores":	[-7.56871302989917]
								}, {
									"case":	51,
									"scores":	[-7.56871302989917]
								}, {
									"case":	52,
									"scores":	[-7.56871302989917]
								}, {
									"case":	53,
									"scores":	[-7.56871302989917]
								}, {
									"case":	54,
									"scores":	[-7.56871302989917]
								}, {
									"case":	55,
									"scores":	[-7.56871302989917]
								}, {
									"case":	56,
									"scores":	[-7.56871302989917]
								}, {
									"case":	57,
									"scores":	[-7.56871302989917]
								}, {
									"case":	58,
									"scores":	[-7.56871302989917]
								}, {
									"case":	59,
									"scores":	[-7.56871302989917]
								}, {
									"case":	60,
									"scores":	[-7.56871302989917]
								}, {
									"case":	61,
									"scores":	[-7.56871302989917]
								}, {
									"case":	62,
									"scores":	[-7.56871302989917]
								}, {
									"case":	63,
									"scores":	[-7.56871302989917]
								}, {
									"case":	64,
									"scores":	[-7.56871302989917]
								}, {
									"case":	65,
									"scores":	[-7.56871302989917]
								}, {
									"case":	66,
									"scores":	[-7.56871302989917]
								}, {
									"case":	67,
									"scores":	[-7.56871302989917]
								}, {
									"case":	68,
									"scores":	[-7.56871302989917]
								}, {
									"case":	69,
									"scores":	[-7.56871302989917]
								}, {
									"case":	70,
									"scores":	[-7.56871302989917]
								}, {
									"case":	71,
									"scores":	[-7.56871302989917]
								}, {
									"case":	72,
									"scores":	[-7.56871302989917]
								}, {
									"case":	73,
									"scores":	[-7.56871302989917]
								}, {
									"case":	74,
									"scores":	[-7.56871302989917]
								}, {
									"case":	75,
									"scores":	[-7.56871302989917]
								}, {
									"case":	76,
									"scores":	[-7.56871302989917]
								}, {
									"case":	77,
									"scores":	[-7.56871302989917]
								}, {
									"case":	78,
									"scores":	[-7.56871302989917]
								}, {
									"case":	79,
									"scores":	[-7.56871302989917]
								}, {
									"case":	80,
									"scores":	[-7.56871302989917]
								}, {
									"case":	81,
									"scores":	[-7.56871302989917]
								}, {
									"case":	82,
									"scores":	[-7.56871302989917]
								}, {
									"case":	83,
									"scores":	[-7.56871302989917]
								}, {
									"case":	84,
									"scores":	[-7.56871302989917]
								}, {
									"case":	85,
									"scores":	[-7.56871302989917]
								}, {
									"case":	86,
									"scores":	[-7.56871302989917]
								}, {
									"case":	87,
									"scores":	[-7.56871302989917]
								}, {
									"case":	88,
									"scores":	[-7.56871302989917]
								}, {
									"case":	89,
									"scores":	[-7.56871302989917]
								}, {
									"case":	90,
									"scores":	[-7.56871302989917]
								}, {
									"case":	91,
									"scores":	[-7.56871302989917]
								}, {
									"case":	92,
									"scores":	[-7.56871302989917]
								}, {
									"case":	93,
									"scores":	[-7.56871302989917]
								}, {
									"case":	94,
									"scores":	[-7.56871302989917]
								}, {
									"case":	95,
									"scores":	[-7.56871302989917]
								}, {
									"case":	96,
									"scores":	[-7.56871302989917]
								}, {
									"case":	97,
									"scores":	[-7.56871302989917]
								}, {
									"case":	98,
									"scores":	[-7.56871302989917]
								}, {
									"case":	99,
									"scores":	[-7.56871302989917]
								}, {
									"case":	100,
									"scores":	[-7.56871302989917]
								}, {
									"case":	101,
									"scores":	[-7.56871302989917]
								}, {
									"case":	102,
									"scores":	[-7.56871302989917]
								}, {
									"case":	103,
									"scores":	[-7.56871302989917]
								}, {
									"case":	104,
									"scores":	[-7.56871302989917]
								}, {
									"case":	105,
									"scores":	[-7.56871302989917]
								}, {
									"case":	106,
									"scores":	[-7.56871302989917]
								}, {
									"case":	107,
									"scores":	[-7.56871302989917]
								}, {
									"case":	108,
									"scores":	[-7.56871302989917]
								}, {
									"case":	109,
									"scores":	[-7.56871302989917]
								}, {
									"case":	110,
									"scores":	[-7.56871302989917]
								}, {
									"case":	111,
									"scores":	[-7.56871302989917]
								}, {
									"case":	112,
									"scores":	[-7.56871302989917]
								}, {
									"case":	113,
									"scores":	[-7.56871302989917]
								}, {
									"case":	114,
									"scores":	[-7.56871302989917]
								}, {
									"case":	115,
									"scores":	[-7.56871302989917]
								}, {
									"case":	116,
									"scores":	[-7.56871302989917]
								}, {
									"case":	117,
									"scores":	[-7.56871302989917]
								}, {
									"case":	118,
									"scores":	[-7.56871302989917]
								}, {
									"case":	119,
									"scores":	[-7.56871302989917]
								}, {
									"case":	120,
									"scores":	[-7.56871302989917]
								}, {
									"case":	121,
									"scores":	[-7.56871302989917]
								}, {
									"case":	122,
									"scores":	[-7.56871302989917]
								}, {
									"case":	123,
									"scores":	[-7.56871302989917]
								}, {
									"case":	124,
									"scores":	[-7.56871302989917]
								}, {
									"case":	125,
									"scores":	[-7.56871302989917]
								}, {
									"case":	126,
									"scores":	[-7.56871302989917]
								}, {
									"case":	127,
									"scores":	[-7.56871302989917]
								}, {
									"case":	128,
									"scores":	[-7.56871302989917]
								}, {
									"case":	129,
									"scores":	[-7.56871302989917]
								}, {
									"case":	130,
									"scores":	[-7.56871302989917]
								}, {
									"case":	131,
									"scores":	[-7.56871302989917]
								}, {
									"case":	132,
									"scores":	[-7.56871302989917]
								}, {
									"case":	133,
									"scores":	[-7.56871302989917]
								}, {
									"case":	134,
									"scores":	[-7.56871302989917]
								}, {
									"case":	135,
									"scores":	[-7.56871302989917]
								}, {
									"case":	136,
									"scores":	[-7.56871302989917]
								}, {
									"case":	137,
									"scores":	[-7.56871302989917]
								}, {
									"case":	138,
									"scores":	[-7.56871302989917]
								}, {
									"case":	139,
									"scores":	[-7.56871302989917]
								}, {
									"case":	140,
									"scores":	[-7.56871302989917]
								}, {
									"case":	141,
									"scores":	[-7.56871302989917]
								}, {
									"case":	142,
									"scores":	[-7.56871302989917]
								}, {
									"case":	143,
									"scores":	[-7.56871302989917]
								}, {
									"case":	144,
									"scores":	[-7.56871302989917]
								}, {
									"case":	145,
									"scores":	[-7.56871302989917]
								}, {
									"case":	146,
									"scores":	[-7.56871302989917]
								}, {
									"case":	147,
									"scores":	[-7.56871302989917]
								}, {
									"case":	148,
									"scores":	[-7.56871302989917]
								}, {
									"case":	149,
									"scores":	[-7.56871302989917]
								}, {
									"case":	150,
									"scores":	[-7.56871302989917]
								}, {
									"case":	151,
									"scores":	[-7.56871302989917]
								}, {
									"case":	152,
									"scores":	[-7.56871302989917]
								}, {
									"case":	153,
									"scores":	[-7.56871302989917]
								}, {
									"case":	154,
									"scores":	[-7.56871302989917]
								}, {
									"case":	155,
									"scores":	[-7.56871302989917]
								}, {
									"case":	156,
									"scores":	[-7.56871302989917]
								}, {
									"case":	157,
									"scores":	[-7.56871302989917]
								}, {
									"case":	158,
									"scores":	[-7.56871302989917]
								}, {
									"case":	159,
									"scores":	[-7.56871302989917]
								}, {
									"case":	160,
									"scores":	[-7.56871302989917]
								}, {
									"case":	161,
									"scores":	[-7.56871302989917]
								}, {
									"case":	162,
									"scores":	[-7.56871302989917]
								}, {
									"case":	163,
									"scores":	[-7.56871302989917]
								}, {
									"case":	164,
									"scores":	[-7.56871302989917]
								}, {
									"case":	165,
									"scores":	[-7.56871302989917]
								}, {
									"case":	166,
									"scores":	[-7.56871302989917]
								}, {
									"case":	167,
									"scores":	[-7.56871302989917]
								}, {
									"case":	168,
									"scores":	[-7.56871302989917]
								}, {
									"case":	169,
									"scores":	[-7.56871302989917]
								}, {
									"case":	170,
									"scores":	[-7.56871302989917]
								}, {
									"case":	171,
									"scores":	[-7.56871302989917]
								}, {
									"case":	172,
									"scores":	[-7.56871302989917]
								}, {
									"case":	173,
									"scores":	[-7.56871302989917]
								}, {
									"case":	174,
									"scores":	[-7.56871302989917]
								}, {
									"case":	175,
									"scores":	[-7.56871302989917]
								}, {
									"case":	176,
									"scores":	[-7.56871302989917]
								}, {
									"case":	177,
									"scores":	[-7.56871302989917]
								}, {
									"case":	178,
									"scores":	[-10.002830249899169, -8.91866094989917, -8.91866094989917, -8.51122324989917, -10.004879549899169]
								}]
						}, {
							"switch":	50,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	463,
							"begin_column":	10,
							"end_line":	467,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L463\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n", "if ((count == (uint16)-1) || __is_neg(\"\", \"L463\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n", "if ((count == (uint16)-1) && !__is_neg(\"\", \"L463\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.4736290624281456, -5.0799441624281449, -5.0799441624281449, -3.7891510624281453, -4.5095800624281459]
								}, {
									"case":	2,
									"scores":	[-2.5013399254281463, -5.1076550254281461, -5.1076550254281461, -3.8168619254281464, -4.5372909254281462]
								}, {
									"case":	3,
									"scores":	[-2.5013399254281463, -5.1076550254281461, -5.1076550254281461, -3.8168619254281464, -4.5372909254281462]
								}]
						}, {
							"switch":	51,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	463,
							"begin_column":	10,
							"end_line":	467,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L463\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type)))\n    if (count == (uint16)-1) {\n        uint16 shortv1;\n        uint16 *shortav;\n        if (TIFFGetField(in, tag, &shortv1, &shortav))\n            TIFFSetField(out, tag, shortv1, shortav);\n    }\n", "if (!__is_neg(\"\", \"L463\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type)) && (count == (uint16)-1)) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.93522474989917, -9.54153984989917, -9.54153984989917, -8.25074674989917, -8.97117574989917]
								}, {
									"case":	2,
									"scores":	[-7.44850494989917, -10.05482004989917, -10.05482004989917, -8.76402694989917, -9.48445594989917]
								}]
						}]
				}, {
					"line":	459,
					"switches":	[{
							"switch":	45,
							"types":	[[], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	460,
							"begin_column":	10,
							"end_line":	467,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L460\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 *tr, *tg, *tb, *ta;\n    if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n        TIFFSetField(out, tag, tr, tg, tb, ta);\n} else if (count == (uint16)-1) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n", "if ((count == 4) || __is_neg(\"\", \"L460\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 *tr, *tg, *tb, *ta;\n    if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n        TIFFSetField(out, tag, tr, tg, tb, ta);\n} else if (count == (uint16)-1) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.9869092624281448, -5.5932243624281455, -5.5932243624281455, -4.3024312624281453, -5.0228602624281464]
								}, {
									"case":	2,
									"scores":	[-1.5758359254281471, -4.182151025428146, -4.182151025428146, -2.8913579254281463, -3.6117869254281461]
								}]
						}]
				}, {
					"line":	456,
					"switches":	[{
							"switch":	40,
							"types":	[[], [], [], [], [178], [], [], [], [], [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [], [], [], [], [], []],
							"begin_line":	457,
							"begin_column":	8,
							"end_line":	457,
							"end_column":	8,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L457\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	2,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	3,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	4,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	5,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	6,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	7,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	8,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	9,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	10,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	11,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	12,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	13,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	14,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	15,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	16,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	17,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	18,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	19,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	20,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	21,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	22,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	23,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	24,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	25,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	26,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	27,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	28,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	29,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	30,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	31,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	32,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	33,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	34,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	35,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	36,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	37,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	38,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	39,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	40,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	41,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	42,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	43,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	44,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	45,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	46,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	47,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	48,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	49,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	50,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	51,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	52,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	53,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	54,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	55,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	56,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	57,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	58,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	59,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	60,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	61,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	62,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	63,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	64,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	65,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	66,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	67,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	68,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	69,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	70,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	71,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	72,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	73,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	74,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	75,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	76,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	77,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	78,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	79,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	80,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	81,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	82,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	83,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	84,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	85,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	86,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	87,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	88,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	89,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	90,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	91,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	92,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	93,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	94,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	95,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	96,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	97,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	98,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	99,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	100,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	101,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	102,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	103,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	104,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	105,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	106,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	107,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	108,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	109,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	110,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	111,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	112,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	113,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	114,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	115,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	116,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	117,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	118,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	119,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	120,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	121,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	122,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	123,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	124,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	125,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	126,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	127,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	128,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	129,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	130,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	131,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	132,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	133,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	134,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	135,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	136,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	137,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	138,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	139,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	140,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	141,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	142,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	143,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	144,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	145,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	146,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	147,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	148,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	149,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	150,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	151,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	152,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	153,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	154,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	155,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	156,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	157,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	158,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	159,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	160,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	161,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	162,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	163,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	164,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	165,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	166,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	167,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	168,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	169,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	170,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	171,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	172,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	173,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	174,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	175,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	176,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	177,
									"scores":	[-7.7909428103918827]
								}, {
									"case":	178,
									"scores":	[-10.225060030391882, -9.1408907303918827, -9.1408907303918827, -8.73345303039188, -10.227109330391883]
								}]
						}, {
							"switch":	41,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	457,
							"begin_column":	10,
							"end_line":	467,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L457\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 shortv1, shortv2;\n    if (TIFFGetField(in, tag, &shortv1, &shortv2))\n        TIFFSetField(out, tag, shortv1, shortv2);\n} else if (count == 4) {\n    uint16 *tr, *tg, *tb, *ta;\n    if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n        TIFFSetField(out, tag, tr, tg, tb, ta);\n} else if (count == (uint16)-1) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n", "if ((count == 2) || __is_neg(\"\", \"L457\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 shortv1, shortv2;\n    if (TIFFGetField(in, tag, &shortv1, &shortv2))\n        TIFFSetField(out, tag, shortv1, shortv2);\n} else if (count == 4) {\n    uint16 *tr, *tg, *tb, *ta;\n    if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n        TIFFSetField(out, tag, tr, tg, tb, ta);\n} else if (count == (uint16)-1) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n", "if ((count == 2) && !__is_neg(\"\", \"L457\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 shortv1, shortv2;\n    if (TIFFGetField(in, tag, &shortv1, &shortv2))\n        TIFFSetField(out, tag, shortv1, shortv2);\n} else if (count == 4) {\n    uint16 *tr, *tg, *tb, *ta;\n    if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n        TIFFSetField(out, tag, tr, tg, tb, ta);\n} else if (count == (uint16)-1) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.2220382624281458, -4.8283533624281461, -4.8283533624281461, -3.5375602624281459, -4.2579892624281461]
								}, {
									"case":	2,
									"scores":	[-1.5758359254281471, -4.182151025428146, -4.182151025428146, -2.8913579254281463, -3.6117869254281461]
								}, {
									"case":	3,
									"scores":	[-1.5758359254281471, -4.182151025428146, -4.182151025428146, -2.8913579254281463, -3.6117869254281461]
								}]
						}, {
							"switch":	52,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	457,
							"begin_column":	10,
							"end_line":	467,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L457\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type)))\n    if (count == 2) {\n        uint16 shortv1, shortv2;\n        if (TIFFGetField(in, tag, &shortv1, &shortv2))\n            TIFFSetField(out, tag, shortv1, shortv2);\n    } else if (count == 4) {\n        uint16 *tr, *tg, *tb, *ta;\n        if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n            TIFFSetField(out, tag, tr, tg, tb, ta);\n    } else if (count == (uint16)-1) {\n        uint16 shortv1;\n        uint16 *shortav;\n        if (TIFFGetField(in, tag, &shortv1, &shortav))\n            TIFFSetField(out, tag, shortv1, shortav);\n    }\n", "if (!__is_neg(\"\", \"L457\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type)) && (count == 2)) {\n    uint16 shortv1, shortv2;\n    if (TIFFGetField(in, tag, &shortv1, &shortv2))\n        TIFFSetField(out, tag, shortv1, shortv2);\n} else if (count == 4) {\n    uint16 *tr, *tg, *tb, *ta;\n    if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n        TIFFSetField(out, tag, tr, tg, tb, ta);\n} else if (count == (uint16)-1) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.1574545303918828, -9.76376963039188, -9.76376963039188, -8.47297653039188, -9.19340553039188]
								}, {
									"case":	2,
									"scores":	[-6.7452307303918833, -9.351545830391883, -9.351545830391883, -8.0607527303918829, -8.78118173039188]
								}]
						}]
				}, {
					"line":	453,
					"switches":	[{
							"switch":	35,
							"types":	[[], [], [], [], [], [], [], [], [], [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [], [], [], [], [], []],
							"begin_line":	454,
							"begin_column":	1,
							"end_line":	454,
							"end_column":	1,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	2,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	3,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	4,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	5,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	6,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	7,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	8,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	9,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	10,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	11,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	12,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	13,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	14,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	15,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	16,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	17,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	18,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	19,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	20,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	21,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	22,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	23,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	24,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	25,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	26,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	27,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	28,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	29,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	30,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	31,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	32,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	33,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	34,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	35,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	36,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	37,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	38,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	39,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	40,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	41,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	42,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	43,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	44,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	45,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	46,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	47,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	48,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	49,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	50,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	51,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	52,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	53,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	54,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	55,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	56,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	57,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	58,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	59,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	60,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	61,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	62,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	63,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	64,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	65,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	66,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	67,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	68,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	69,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	70,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	71,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	72,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	73,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	74,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	75,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	76,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	77,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	78,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	79,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	80,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	81,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	82,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	83,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	84,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	85,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	86,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	87,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	88,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	89,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	90,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	91,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	92,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	93,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	94,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	95,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	96,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	97,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	98,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	99,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	100,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	101,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	102,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	103,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	104,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	105,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	106,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	107,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	108,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	109,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	110,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	111,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	112,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	113,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	114,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	115,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	116,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	117,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	118,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	119,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	120,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	121,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	122,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	123,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	124,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	125,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	126,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	127,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	128,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	129,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	130,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	131,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	132,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	133,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	134,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	135,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	136,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	137,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	138,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	139,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	140,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	141,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	142,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	143,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	144,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	145,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	146,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	147,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	148,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	149,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	150,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	151,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	152,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	153,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	154,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	155,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	156,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	157,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	158,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	159,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	160,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	161,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	162,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	163,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	164,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	165,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	166,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	167,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	168,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	169,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	170,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	171,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	172,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	173,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	174,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	175,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	176,
									"scores":	[-7.7303346884393251]
								}, {
									"case":	177,
									"scores":	[-7.7303346884393251]
								}]
						}, {
							"switch":	36,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	454,
							"begin_column":	3,
							"end_line":	467,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L454\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 shortv;\n    if (TIFFGetField(in, tag, &shortv))\n        TIFFSetField(out, tag, shortv);\n} else if (count == 2) {\n    uint16 shortv1, shortv2;\n    if (TIFFGetField(in, tag, &shortv1, &shortv2))\n        TIFFSetField(out, tag, shortv1, shortv2);\n} else if (count == 4) {\n    uint16 *tr, *tg, *tb, *ta;\n    if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n        TIFFSetField(out, tag, tr, tg, tb, ta);\n} else if (count == (uint16)-1) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n", "if ((count == 1) || __is_neg(\"\", \"L454\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 shortv;\n    if (TIFFGetField(in, tag, &shortv))\n        TIFFSetField(out, tag, shortv);\n} else if (count == 2) {\n    uint16 shortv1, shortv2;\n    if (TIFFGetField(in, tag, &shortv1, &shortv2))\n        TIFFSetField(out, tag, shortv1, shortv2);\n} else if (count == 4) {\n    uint16 *tr, *tg, *tb, *ta;\n    if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n        TIFFSetField(out, tag, tr, tg, tb, ta);\n} else if (count == (uint16)-1) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n", "if ((count == 1) && !__is_neg(\"\", \"L454\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    uint16 shortv;\n    if (TIFFGetField(in, tag, &shortv))\n        TIFFSetField(out, tag, shortv);\n} else if (count == 2) {\n    uint16 shortv1, shortv2;\n    if (TIFFGetField(in, tag, &shortv1, &shortv2))\n        TIFFSetField(out, tag, shortv1, shortv2);\n} else if (count == 4) {\n    uint16 *tr, *tg, *tb, *ta;\n    if (TIFFGetField(in, tag, &tr, &tg, &tb, &ta))\n        TIFFSetField(out, tag, tr, tg, tb, ta);\n} else if (count == (uint16)-1) {\n    uint16 shortv1;\n    uint16 *shortav;\n    if (TIFFGetField(in, tag, &shortv1, &shortav))\n        TIFFSetField(out, tag, shortv1, shortav);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.2220382624281458, -4.8283533624281461, -4.8283533624281461, -3.5375602624281459, -4.2579892624281461]
								}, {
									"case":	2,
									"scores":	[-1.5758359254281471, -4.182151025428146, -4.182151025428146, -2.8913579254281463, -3.6117869254281461]
								}, {
									"case":	3,
									"scores":	[-1.5758359254281471, -4.182151025428146, -4.182151025428146, -2.8913579254281463, -3.6117869254281461]
								}]
						}]
				}, {
					"line":	475,
					"switches":	[]
				}, {
					"line":	476,
					"switches":	[{
							"switch":	55,
							"types":	[[], [], [], [], [181], [], [], [], [], [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], [], [], [], [], [], []],
							"begin_line":	477,
							"begin_column":	2,
							"end_line":	477,
							"end_column":	2,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((in), tag, floatv)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "TIFFSetField((out), tag, floatv)", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "TIFFSetField(out, tag, floatv)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L477\", 5, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(count), sizeof (count), &(type), sizeof (type)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	2,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	3,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	4,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	5,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	6,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	7,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	8,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	9,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	10,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	11,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	12,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	13,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	14,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	15,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	16,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	17,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	18,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	19,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	20,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	21,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	22,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	23,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	24,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	25,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	26,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	27,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	28,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	29,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	30,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	31,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	32,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	33,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	34,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	35,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	36,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	37,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	38,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	39,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	40,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	41,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	42,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	43,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	44,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	45,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	46,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	47,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	48,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	49,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	50,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	51,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	52,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	53,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	54,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	55,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	56,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	57,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	58,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	59,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	60,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	61,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	62,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	63,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	64,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	65,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	66,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	67,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	68,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	69,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	70,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	71,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	72,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	73,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	74,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	75,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	76,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	77,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	78,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	79,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	80,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	81,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	82,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	83,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	84,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	85,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	86,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	87,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	88,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	89,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	90,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	91,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	92,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	93,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	94,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	95,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	96,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	97,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	98,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	99,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	100,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	101,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	102,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	103,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	104,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	105,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	106,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	107,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	108,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	109,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	110,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	111,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	112,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	113,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	114,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	115,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	116,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	117,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	118,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	119,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	120,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	121,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	122,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	123,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	124,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	125,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	126,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	127,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	128,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	129,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	130,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	131,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	132,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	133,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	134,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	135,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	136,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	137,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	138,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	139,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	140,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	141,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	142,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	143,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	144,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	145,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	146,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	147,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	148,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	149,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	150,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	151,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	152,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	153,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	154,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	155,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	156,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	157,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	158,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	159,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	160,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	161,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	162,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	163,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	164,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	165,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	166,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	167,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	168,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	169,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	170,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	171,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	172,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	173,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	174,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	175,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	176,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	177,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	178,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	179,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	180,
									"scores":	[-7.7101319811218056]
								}, {
									"case":	181,
									"scores":	[-9.0600799011218065, -9.0600799011218065, -8.6526422011218056, -10.146298501121805, -10.146298501121805]
								}]
						}, {
							"switch":	56,
							"types":	[[10], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [3, 4, 5, 6, 7, 8, 9], []],
							"begin_line":	477,
							"begin_column":	4,
							"end_line":	477,
							"end_column":	25,
							"patch_codes":	["if (__is_neg(\"\", \"L477\", 5, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, floatv);\n", "if ((TIFFGetField(in, tag, &floatv)) || __is_neg(\"\", \"L477\", 5, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, floatv);\n", "if (TIFFGetFieldDefaulted(in, tag, &floatv))\n    TIFFSetField(out, tag, floatv);\n", "if (TIFFReadRGBAStrip(in, tag, &floatv))\n    TIFFSetField(out, tag, floatv);\n", "if (TIFFSetField(in, tag, &floatv))\n    TIFFSetField(out, tag, floatv);\n", "if (TIFFVGetField(in, tag, &floatv))\n    TIFFSetField(out, tag, floatv);\n", "if (TIFFVGetFieldDefaulted(in, tag, &floatv))\n    TIFFSetField(out, tag, floatv);\n", "if (TIFFVSetField(in, tag, &floatv))\n    TIFFSetField(out, tag, floatv);\n", "if (printf(in, tag, &floatv))\n    TIFFSetField(out, tag, floatv);\n", "if ((TIFFGetField(in, tag, &floatv)) && !__is_neg(\"\", \"L477\", 5, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(count), sizeof (count), &(type), sizeof (type)))\n    TIFFSetField(out, tag, floatv);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-4.9817289454281459, -4.9817289454281459, -3.6909358454281458, -4.411364845428146, -4.411364845428146]
								}, {
									"case":	2,
									"scores":	[-5.8972944994281455, -5.8972944994281455, -4.6065013994281454, -5.3269303994281456, -5.3269303994281456]
								}, {
									"case":	3,
									"scores":	[-3.912023005428146]
								}, {
									"case":	4,
									"scores":	[-3.912023005428146]
								}, {
									"case":	5,
									"scores":	[-3.912023005428146]
								}, {
									"case":	6,
									"scores":	[-3.912023005428146]
								}, {
									"case":	7,
									"scores":	[-3.912023005428146]
								}, {
									"case":	8,
									"scores":	[-3.912023005428146]
								}, {
									"case":	9,
									"scores":	[-3.912023005428146]
								}, {
									"case":	10,
									"scores":	[-5.8972944994281455, -5.8972944994281455, -4.6065013994281454, -5.3269303994281456, -5.3269303994281456]
								}]
						}, {
							"switch":	57,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	477,
							"begin_column":	4,
							"end_line":	477,
							"end_column":	25,
							"patch_codes":	["if (!__is_neg(\"\", \"L477\", 5, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(count), sizeof (count), &(type), sizeof (type)))\n    if (TIFFGetField(in, tag, &floatv))\n        TIFFSetField(out, tag, floatv);\n", "if (!__is_neg(\"\", \"L477\", 5, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(count), sizeof (count), &(type), sizeof (type)) && (TIFFGetField(in, tag, &floatv)))\n    TIFFSetField(out, tag, floatv);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-9.6829588011218064, -9.6829588011218064, -8.3921657011218063, -9.1125947011218056, -9.1125947011218056]
								}, {
									"case":	2,
									"scores":	[-10.644450235121806, -10.644450235121806, -9.3536571351218054, -10.074086135121807, -10.074086135121807]
								}]
						}]
				}, {
					"line":	478,
					"switches":	[]
				}, {
					"line":	477,
					"switches":	[{
							"switch":	58,
							"types":	[[], [], [], [], [178], [], [], [], [], [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [], [], [], [], [], []],
							"begin_line":	478,
							"begin_column":	8,
							"end_line":	478,
							"end_column":	8,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L478\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	2,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	3,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	4,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	5,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	6,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	7,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	8,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	9,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	10,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	11,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	12,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	13,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	14,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	15,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	16,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	17,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	18,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	19,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	20,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	21,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	22,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	23,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	24,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	25,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	26,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	27,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	28,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	29,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	30,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	31,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	32,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	33,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	34,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	35,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	36,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	37,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	38,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	39,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	40,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	41,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	42,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	43,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	44,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	45,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	46,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	47,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	48,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	49,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	50,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	51,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	52,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	53,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	54,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	55,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	56,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	57,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	58,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	59,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	60,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	61,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	62,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	63,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	64,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	65,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	66,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	67,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	68,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	69,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	70,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	71,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	72,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	73,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	74,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	75,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	76,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	77,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	78,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	79,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	80,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	81,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	82,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	83,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	84,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	85,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	86,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	87,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	88,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	89,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	90,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	91,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	92,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	93,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	94,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	95,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	96,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	97,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	98,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	99,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	100,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	101,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	102,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	103,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	104,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	105,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	106,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	107,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	108,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	109,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	110,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	111,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	112,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	113,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	114,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	115,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	116,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	117,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	118,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	119,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	120,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	121,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	122,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	123,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	124,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	125,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	126,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	127,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	128,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	129,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	130,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	131,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	132,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	133,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	134,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	135,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	136,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	137,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	138,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	139,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	140,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	141,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	142,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	143,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	144,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	145,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	146,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	147,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	148,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	149,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	150,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	151,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	152,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	153,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	154,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	155,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	156,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	157,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	158,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	159,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	160,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	161,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	162,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	163,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	164,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	165,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	166,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	167,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	168,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	169,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	170,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	171,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	172,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	173,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	174,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	175,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	176,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	177,
									"scores":	[-7.6899292738042861]
								}, {
									"case":	178,
									"scores":	[-10.124046493804286, -9.039877193804287, -9.039877193804287, -8.6324394938042861, -10.126095793804286]
								}]
						}, {
							"switch":	59,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	478,
							"begin_column":	10,
							"end_line":	481,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L478\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    float *floatav;\n    if (TIFFGetField(in, tag, &floatav))\n        TIFFSetField(out, tag, floatav);\n}\n", "if ((count == (uint16)-1) || __is_neg(\"\", \"L478\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    float *floatav;\n    if (TIFFGetField(in, tag, &floatav))\n        TIFFSetField(out, tag, floatav);\n}\n", "if ((count == (uint16)-1) && !__is_neg(\"\", \"L478\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    float *floatav;\n    if (TIFFGetField(in, tag, &floatav))\n        TIFFSetField(out, tag, floatav);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.4736290624281456, -5.0799441624281449, -5.0799441624281449, -3.7891510624281453, -4.5095800624281459]
								}, {
									"case":	2,
									"scores":	[-2.5013399254281463, -5.1076550254281461, -5.1076550254281461, -3.8168619254281464, -4.5372909254281462]
								}, {
									"case":	3,
									"scores":	[-2.5013399254281463, -5.1076550254281461, -5.1076550254281461, -3.8168619254281464, -4.5372909254281462]
								}]
						}, {
							"switch":	60,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	478,
							"begin_column":	10,
							"end_line":	481,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L478\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type)))\n    if (count == (uint16)-1) {\n        float *floatav;\n        if (TIFFGetField(in, tag, &floatav))\n            TIFFSetField(out, tag, floatav);\n    }\n", "if (!__is_neg(\"\", \"L478\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type)) && (count == (uint16)-1)) {\n    float *floatav;\n    if (TIFFGetField(in, tag, &floatav))\n        TIFFSetField(out, tag, floatav);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.0564409938042862, -9.6627560938042869, -9.6627560938042869, -8.3719629938042868, -9.0923919938042861]
								}, {
									"case":	2,
									"scores":	[-7.5697211938042859, -10.176036293804287, -10.176036293804287, -8.8852431938042855, -9.6056721938042866]
								}]
						}]
				}, {
					"line":	474,
					"switches":	[{
							"switch":	53,
							"types":	[[], [], [], [], [], [], [], [], [], [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [], [], [], [], [], []],
							"begin_line":	475,
							"begin_column":	1,
							"end_line":	475,
							"end_column":	1,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.89195634697948]
								}, {
									"case":	2,
									"scores":	[-7.89195634697948]
								}, {
									"case":	3,
									"scores":	[-7.89195634697948]
								}, {
									"case":	4,
									"scores":	[-7.89195634697948]
								}, {
									"case":	5,
									"scores":	[-7.89195634697948]
								}, {
									"case":	6,
									"scores":	[-7.89195634697948]
								}, {
									"case":	7,
									"scores":	[-7.89195634697948]
								}, {
									"case":	8,
									"scores":	[-7.89195634697948]
								}, {
									"case":	9,
									"scores":	[-7.89195634697948]
								}, {
									"case":	10,
									"scores":	[-7.89195634697948]
								}, {
									"case":	11,
									"scores":	[-7.89195634697948]
								}, {
									"case":	12,
									"scores":	[-7.89195634697948]
								}, {
									"case":	13,
									"scores":	[-7.89195634697948]
								}, {
									"case":	14,
									"scores":	[-7.89195634697948]
								}, {
									"case":	15,
									"scores":	[-7.89195634697948]
								}, {
									"case":	16,
									"scores":	[-7.89195634697948]
								}, {
									"case":	17,
									"scores":	[-7.89195634697948]
								}, {
									"case":	18,
									"scores":	[-7.89195634697948]
								}, {
									"case":	19,
									"scores":	[-7.89195634697948]
								}, {
									"case":	20,
									"scores":	[-7.89195634697948]
								}, {
									"case":	21,
									"scores":	[-7.89195634697948]
								}, {
									"case":	22,
									"scores":	[-7.89195634697948]
								}, {
									"case":	23,
									"scores":	[-7.89195634697948]
								}, {
									"case":	24,
									"scores":	[-7.89195634697948]
								}, {
									"case":	25,
									"scores":	[-7.89195634697948]
								}, {
									"case":	26,
									"scores":	[-7.89195634697948]
								}, {
									"case":	27,
									"scores":	[-7.89195634697948]
								}, {
									"case":	28,
									"scores":	[-7.89195634697948]
								}, {
									"case":	29,
									"scores":	[-7.89195634697948]
								}, {
									"case":	30,
									"scores":	[-7.89195634697948]
								}, {
									"case":	31,
									"scores":	[-7.89195634697948]
								}, {
									"case":	32,
									"scores":	[-7.89195634697948]
								}, {
									"case":	33,
									"scores":	[-7.89195634697948]
								}, {
									"case":	34,
									"scores":	[-7.89195634697948]
								}, {
									"case":	35,
									"scores":	[-7.89195634697948]
								}, {
									"case":	36,
									"scores":	[-7.89195634697948]
								}, {
									"case":	37,
									"scores":	[-7.89195634697948]
								}, {
									"case":	38,
									"scores":	[-7.89195634697948]
								}, {
									"case":	39,
									"scores":	[-7.89195634697948]
								}, {
									"case":	40,
									"scores":	[-7.89195634697948]
								}, {
									"case":	41,
									"scores":	[-7.89195634697948]
								}, {
									"case":	42,
									"scores":	[-7.89195634697948]
								}, {
									"case":	43,
									"scores":	[-7.89195634697948]
								}, {
									"case":	44,
									"scores":	[-7.89195634697948]
								}, {
									"case":	45,
									"scores":	[-7.89195634697948]
								}, {
									"case":	46,
									"scores":	[-7.89195634697948]
								}, {
									"case":	47,
									"scores":	[-7.89195634697948]
								}, {
									"case":	48,
									"scores":	[-7.89195634697948]
								}, {
									"case":	49,
									"scores":	[-7.89195634697948]
								}, {
									"case":	50,
									"scores":	[-7.89195634697948]
								}, {
									"case":	51,
									"scores":	[-7.89195634697948]
								}, {
									"case":	52,
									"scores":	[-7.89195634697948]
								}, {
									"case":	53,
									"scores":	[-7.89195634697948]
								}, {
									"case":	54,
									"scores":	[-7.89195634697948]
								}, {
									"case":	55,
									"scores":	[-7.89195634697948]
								}, {
									"case":	56,
									"scores":	[-7.89195634697948]
								}, {
									"case":	57,
									"scores":	[-7.89195634697948]
								}, {
									"case":	58,
									"scores":	[-7.89195634697948]
								}, {
									"case":	59,
									"scores":	[-7.89195634697948]
								}, {
									"case":	60,
									"scores":	[-7.89195634697948]
								}, {
									"case":	61,
									"scores":	[-7.89195634697948]
								}, {
									"case":	62,
									"scores":	[-7.89195634697948]
								}, {
									"case":	63,
									"scores":	[-7.89195634697948]
								}, {
									"case":	64,
									"scores":	[-7.89195634697948]
								}, {
									"case":	65,
									"scores":	[-7.89195634697948]
								}, {
									"case":	66,
									"scores":	[-7.89195634697948]
								}, {
									"case":	67,
									"scores":	[-7.89195634697948]
								}, {
									"case":	68,
									"scores":	[-7.89195634697948]
								}, {
									"case":	69,
									"scores":	[-7.89195634697948]
								}, {
									"case":	70,
									"scores":	[-7.89195634697948]
								}, {
									"case":	71,
									"scores":	[-7.89195634697948]
								}, {
									"case":	72,
									"scores":	[-7.89195634697948]
								}, {
									"case":	73,
									"scores":	[-7.89195634697948]
								}, {
									"case":	74,
									"scores":	[-7.89195634697948]
								}, {
									"case":	75,
									"scores":	[-7.89195634697948]
								}, {
									"case":	76,
									"scores":	[-7.89195634697948]
								}, {
									"case":	77,
									"scores":	[-7.89195634697948]
								}, {
									"case":	78,
									"scores":	[-7.89195634697948]
								}, {
									"case":	79,
									"scores":	[-7.89195634697948]
								}, {
									"case":	80,
									"scores":	[-7.89195634697948]
								}, {
									"case":	81,
									"scores":	[-7.89195634697948]
								}, {
									"case":	82,
									"scores":	[-7.89195634697948]
								}, {
									"case":	83,
									"scores":	[-7.89195634697948]
								}, {
									"case":	84,
									"scores":	[-7.89195634697948]
								}, {
									"case":	85,
									"scores":	[-7.89195634697948]
								}, {
									"case":	86,
									"scores":	[-7.89195634697948]
								}, {
									"case":	87,
									"scores":	[-7.89195634697948]
								}, {
									"case":	88,
									"scores":	[-7.89195634697948]
								}, {
									"case":	89,
									"scores":	[-7.89195634697948]
								}, {
									"case":	90,
									"scores":	[-7.89195634697948]
								}, {
									"case":	91,
									"scores":	[-7.89195634697948]
								}, {
									"case":	92,
									"scores":	[-7.89195634697948]
								}, {
									"case":	93,
									"scores":	[-7.89195634697948]
								}, {
									"case":	94,
									"scores":	[-7.89195634697948]
								}, {
									"case":	95,
									"scores":	[-7.89195634697948]
								}, {
									"case":	96,
									"scores":	[-7.89195634697948]
								}, {
									"case":	97,
									"scores":	[-7.89195634697948]
								}, {
									"case":	98,
									"scores":	[-7.89195634697948]
								}, {
									"case":	99,
									"scores":	[-7.89195634697948]
								}, {
									"case":	100,
									"scores":	[-7.89195634697948]
								}, {
									"case":	101,
									"scores":	[-7.89195634697948]
								}, {
									"case":	102,
									"scores":	[-7.89195634697948]
								}, {
									"case":	103,
									"scores":	[-7.89195634697948]
								}, {
									"case":	104,
									"scores":	[-7.89195634697948]
								}, {
									"case":	105,
									"scores":	[-7.89195634697948]
								}, {
									"case":	106,
									"scores":	[-7.89195634697948]
								}, {
									"case":	107,
									"scores":	[-7.89195634697948]
								}, {
									"case":	108,
									"scores":	[-7.89195634697948]
								}, {
									"case":	109,
									"scores":	[-7.89195634697948]
								}, {
									"case":	110,
									"scores":	[-7.89195634697948]
								}, {
									"case":	111,
									"scores":	[-7.89195634697948]
								}, {
									"case":	112,
									"scores":	[-7.89195634697948]
								}, {
									"case":	113,
									"scores":	[-7.89195634697948]
								}, {
									"case":	114,
									"scores":	[-7.89195634697948]
								}, {
									"case":	115,
									"scores":	[-7.89195634697948]
								}, {
									"case":	116,
									"scores":	[-7.89195634697948]
								}, {
									"case":	117,
									"scores":	[-7.89195634697948]
								}, {
									"case":	118,
									"scores":	[-7.89195634697948]
								}, {
									"case":	119,
									"scores":	[-7.89195634697948]
								}, {
									"case":	120,
									"scores":	[-7.89195634697948]
								}, {
									"case":	121,
									"scores":	[-7.89195634697948]
								}, {
									"case":	122,
									"scores":	[-7.89195634697948]
								}, {
									"case":	123,
									"scores":	[-7.89195634697948]
								}, {
									"case":	124,
									"scores":	[-7.89195634697948]
								}, {
									"case":	125,
									"scores":	[-7.89195634697948]
								}, {
									"case":	126,
									"scores":	[-7.89195634697948]
								}, {
									"case":	127,
									"scores":	[-7.89195634697948]
								}, {
									"case":	128,
									"scores":	[-7.89195634697948]
								}, {
									"case":	129,
									"scores":	[-7.89195634697948]
								}, {
									"case":	130,
									"scores":	[-7.89195634697948]
								}, {
									"case":	131,
									"scores":	[-7.89195634697948]
								}, {
									"case":	132,
									"scores":	[-7.89195634697948]
								}, {
									"case":	133,
									"scores":	[-7.89195634697948]
								}, {
									"case":	134,
									"scores":	[-7.89195634697948]
								}, {
									"case":	135,
									"scores":	[-7.89195634697948]
								}, {
									"case":	136,
									"scores":	[-7.89195634697948]
								}, {
									"case":	137,
									"scores":	[-7.89195634697948]
								}, {
									"case":	138,
									"scores":	[-7.89195634697948]
								}, {
									"case":	139,
									"scores":	[-7.89195634697948]
								}, {
									"case":	140,
									"scores":	[-7.89195634697948]
								}, {
									"case":	141,
									"scores":	[-7.89195634697948]
								}, {
									"case":	142,
									"scores":	[-7.89195634697948]
								}, {
									"case":	143,
									"scores":	[-7.89195634697948]
								}, {
									"case":	144,
									"scores":	[-7.89195634697948]
								}, {
									"case":	145,
									"scores":	[-7.89195634697948]
								}, {
									"case":	146,
									"scores":	[-7.89195634697948]
								}, {
									"case":	147,
									"scores":	[-7.89195634697948]
								}, {
									"case":	148,
									"scores":	[-7.89195634697948]
								}, {
									"case":	149,
									"scores":	[-7.89195634697948]
								}, {
									"case":	150,
									"scores":	[-7.89195634697948]
								}, {
									"case":	151,
									"scores":	[-7.89195634697948]
								}, {
									"case":	152,
									"scores":	[-7.89195634697948]
								}, {
									"case":	153,
									"scores":	[-7.89195634697948]
								}, {
									"case":	154,
									"scores":	[-7.89195634697948]
								}, {
									"case":	155,
									"scores":	[-7.89195634697948]
								}, {
									"case":	156,
									"scores":	[-7.89195634697948]
								}, {
									"case":	157,
									"scores":	[-7.89195634697948]
								}, {
									"case":	158,
									"scores":	[-7.89195634697948]
								}, {
									"case":	159,
									"scores":	[-7.89195634697948]
								}, {
									"case":	160,
									"scores":	[-7.89195634697948]
								}, {
									"case":	161,
									"scores":	[-7.89195634697948]
								}, {
									"case":	162,
									"scores":	[-7.89195634697948]
								}, {
									"case":	163,
									"scores":	[-7.89195634697948]
								}, {
									"case":	164,
									"scores":	[-7.89195634697948]
								}, {
									"case":	165,
									"scores":	[-7.89195634697948]
								}, {
									"case":	166,
									"scores":	[-7.89195634697948]
								}, {
									"case":	167,
									"scores":	[-7.89195634697948]
								}, {
									"case":	168,
									"scores":	[-7.89195634697948]
								}, {
									"case":	169,
									"scores":	[-7.89195634697948]
								}, {
									"case":	170,
									"scores":	[-7.89195634697948]
								}, {
									"case":	171,
									"scores":	[-7.89195634697948]
								}, {
									"case":	172,
									"scores":	[-7.89195634697948]
								}, {
									"case":	173,
									"scores":	[-7.89195634697948]
								}, {
									"case":	174,
									"scores":	[-7.89195634697948]
								}, {
									"case":	175,
									"scores":	[-7.89195634697948]
								}, {
									"case":	176,
									"scores":	[-7.89195634697948]
								}, {
									"case":	177,
									"scores":	[-7.89195634697948]
								}]
						}, {
							"switch":	54,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	475,
							"begin_column":	3,
							"end_line":	481,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L475\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    float floatv;\n    if (TIFFGetField(in, tag, &floatv))\n        TIFFSetField(out, tag, floatv);\n} else if (count == (uint16)-1) {\n    float *floatav;\n    if (TIFFGetField(in, tag, &floatav))\n        TIFFSetField(out, tag, floatav);\n}\n", "if ((count == 1) || __is_neg(\"\", \"L475\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    float floatv;\n    if (TIFFGetField(in, tag, &floatv))\n        TIFFSetField(out, tag, floatv);\n} else if (count == (uint16)-1) {\n    float *floatav;\n    if (TIFFGetField(in, tag, &floatav))\n        TIFFSetField(out, tag, floatav);\n}\n", "if ((count == 1) && !__is_neg(\"\", \"L475\", 5, &(count), sizeof (count), &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(type), sizeof (type))) {\n    float floatv;\n    if (TIFFGetField(in, tag, &floatv))\n        TIFFSetField(out, tag, floatv);\n} else if (count == (uint16)-1) {\n    float *floatav;\n    if (TIFFGetField(in, tag, &floatav))\n        TIFFSetField(out, tag, floatav);\n}\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-2.9869092624281448, -5.5932243624281455, -5.5932243624281455, -4.3024312624281453, -5.0228602624281464]
								}, {
									"case":	2,
									"scores":	[-1.5758359254281471, -4.182151025428146, -4.182151025428146, -2.8913579254281463, -3.6117869254281461]
								}, {
									"case":	3,
									"scores":	[-1.5758359254281471, -4.182151025428146, -4.182151025428146, -2.8913579254281463, -3.6117869254281461]
								}]
						}]
				}, {
					"line":	483,
					"switches":	[]
				}, {
					"line":	482,
					"switches":	[{
							"switch":	61,
							"types":	[[], [], [], [], [178], [], [], [], [], [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [], [], [], [], [], []],
							"begin_line":	483,
							"begin_column":	0,
							"end_line":	483,
							"end_column":	0,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L483\", 5, &(in), sizeof (in), &(out), sizeof (out), &(tag), sizeof (tag), &(count), sizeof (count), &(type), sizeof (type)))\n    return;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.87175363966196]
								}, {
									"case":	2,
									"scores":	[-7.87175363966196]
								}, {
									"case":	3,
									"scores":	[-7.87175363966196]
								}, {
									"case":	4,
									"scores":	[-7.87175363966196]
								}, {
									"case":	5,
									"scores":	[-7.87175363966196]
								}, {
									"case":	6,
									"scores":	[-7.87175363966196]
								}, {
									"case":	7,
									"scores":	[-7.87175363966196]
								}, {
									"case":	8,
									"scores":	[-7.87175363966196]
								}, {
									"case":	9,
									"scores":	[-7.87175363966196]
								}, {
									"case":	10,
									"scores":	[-7.87175363966196]
								}, {
									"case":	11,
									"scores":	[-7.87175363966196]
								}, {
									"case":	12,
									"scores":	[-7.87175363966196]
								}, {
									"case":	13,
									"scores":	[-7.87175363966196]
								}, {
									"case":	14,
									"scores":	[-7.87175363966196]
								}, {
									"case":	15,
									"scores":	[-7.87175363966196]
								}, {
									"case":	16,
									"scores":	[-7.87175363966196]
								}, {
									"case":	17,
									"scores":	[-7.87175363966196]
								}, {
									"case":	18,
									"scores":	[-7.87175363966196]
								}, {
									"case":	19,
									"scores":	[-7.87175363966196]
								}, {
									"case":	20,
									"scores":	[-7.87175363966196]
								}, {
									"case":	21,
									"scores":	[-7.87175363966196]
								}, {
									"case":	22,
									"scores":	[-7.87175363966196]
								}, {
									"case":	23,
									"scores":	[-7.87175363966196]
								}, {
									"case":	24,
									"scores":	[-7.87175363966196]
								}, {
									"case":	25,
									"scores":	[-7.87175363966196]
								}, {
									"case":	26,
									"scores":	[-7.87175363966196]
								}, {
									"case":	27,
									"scores":	[-7.87175363966196]
								}, {
									"case":	28,
									"scores":	[-7.87175363966196]
								}, {
									"case":	29,
									"scores":	[-7.87175363966196]
								}, {
									"case":	30,
									"scores":	[-7.87175363966196]
								}, {
									"case":	31,
									"scores":	[-7.87175363966196]
								}, {
									"case":	32,
									"scores":	[-7.87175363966196]
								}, {
									"case":	33,
									"scores":	[-7.87175363966196]
								}, {
									"case":	34,
									"scores":	[-7.87175363966196]
								}, {
									"case":	35,
									"scores":	[-7.87175363966196]
								}, {
									"case":	36,
									"scores":	[-7.87175363966196]
								}, {
									"case":	37,
									"scores":	[-7.87175363966196]
								}, {
									"case":	38,
									"scores":	[-7.87175363966196]
								}, {
									"case":	39,
									"scores":	[-7.87175363966196]
								}, {
									"case":	40,
									"scores":	[-7.87175363966196]
								}, {
									"case":	41,
									"scores":	[-7.87175363966196]
								}, {
									"case":	42,
									"scores":	[-7.87175363966196]
								}, {
									"case":	43,
									"scores":	[-7.87175363966196]
								}, {
									"case":	44,
									"scores":	[-7.87175363966196]
								}, {
									"case":	45,
									"scores":	[-7.87175363966196]
								}, {
									"case":	46,
									"scores":	[-7.87175363966196]
								}, {
									"case":	47,
									"scores":	[-7.87175363966196]
								}, {
									"case":	48,
									"scores":	[-7.87175363966196]
								}, {
									"case":	49,
									"scores":	[-7.87175363966196]
								}, {
									"case":	50,
									"scores":	[-7.87175363966196]
								}, {
									"case":	51,
									"scores":	[-7.87175363966196]
								}, {
									"case":	52,
									"scores":	[-7.87175363966196]
								}, {
									"case":	53,
									"scores":	[-7.87175363966196]
								}, {
									"case":	54,
									"scores":	[-7.87175363966196]
								}, {
									"case":	55,
									"scores":	[-7.87175363966196]
								}, {
									"case":	56,
									"scores":	[-7.87175363966196]
								}, {
									"case":	57,
									"scores":	[-7.87175363966196]
								}, {
									"case":	58,
									"scores":	[-7.87175363966196]
								}, {
									"case":	59,
									"scores":	[-7.87175363966196]
								}, {
									"case":	60,
									"scores":	[-7.87175363966196]
								}, {
									"case":	61,
									"scores":	[-7.87175363966196]
								}, {
									"case":	62,
									"scores":	[-7.87175363966196]
								}, {
									"case":	63,
									"scores":	[-7.87175363966196]
								}, {
									"case":	64,
									"scores":	[-7.87175363966196]
								}, {
									"case":	65,
									"scores":	[-7.87175363966196]
								}, {
									"case":	66,
									"scores":	[-7.87175363966196]
								}, {
									"case":	67,
									"scores":	[-7.87175363966196]
								}, {
									"case":	68,
									"scores":	[-7.87175363966196]
								}, {
									"case":	69,
									"scores":	[-7.87175363966196]
								}, {
									"case":	70,
									"scores":	[-7.87175363966196]
								}, {
									"case":	71,
									"scores":	[-7.87175363966196]
								}, {
									"case":	72,
									"scores":	[-7.87175363966196]
								}, {
									"case":	73,
									"scores":	[-7.87175363966196]
								}, {
									"case":	74,
									"scores":	[-7.87175363966196]
								}, {
									"case":	75,
									"scores":	[-7.87175363966196]
								}, {
									"case":	76,
									"scores":	[-7.87175363966196]
								}, {
									"case":	77,
									"scores":	[-7.87175363966196]
								}, {
									"case":	78,
									"scores":	[-7.87175363966196]
								}, {
									"case":	79,
									"scores":	[-7.87175363966196]
								}, {
									"case":	80,
									"scores":	[-7.87175363966196]
								}, {
									"case":	81,
									"scores":	[-7.87175363966196]
								}, {
									"case":	82,
									"scores":	[-7.87175363966196]
								}, {
									"case":	83,
									"scores":	[-7.87175363966196]
								}, {
									"case":	84,
									"scores":	[-7.87175363966196]
								}, {
									"case":	85,
									"scores":	[-7.87175363966196]
								}, {
									"case":	86,
									"scores":	[-7.87175363966196]
								}, {
									"case":	87,
									"scores":	[-7.87175363966196]
								}, {
									"case":	88,
									"scores":	[-7.87175363966196]
								}, {
									"case":	89,
									"scores":	[-7.87175363966196]
								}, {
									"case":	90,
									"scores":	[-7.87175363966196]
								}, {
									"case":	91,
									"scores":	[-7.87175363966196]
								}, {
									"case":	92,
									"scores":	[-7.87175363966196]
								}, {
									"case":	93,
									"scores":	[-7.87175363966196]
								}, {
									"case":	94,
									"scores":	[-7.87175363966196]
								}, {
									"case":	95,
									"scores":	[-7.87175363966196]
								}, {
									"case":	96,
									"scores":	[-7.87175363966196]
								}, {
									"case":	97,
									"scores":	[-7.87175363966196]
								}, {
									"case":	98,
									"scores":	[-7.87175363966196]
								}, {
									"case":	99,
									"scores":	[-7.87175363966196]
								}, {
									"case":	100,
									"scores":	[-7.87175363966196]
								}, {
									"case":	101,
									"scores":	[-7.87175363966196]
								}, {
									"case":	102,
									"scores":	[-7.87175363966196]
								}, {
									"case":	103,
									"scores":	[-7.87175363966196]
								}, {
									"case":	104,
									"scores":	[-7.87175363966196]
								}, {
									"case":	105,
									"scores":	[-7.87175363966196]
								}, {
									"case":	106,
									"scores":	[-7.87175363966196]
								}, {
									"case":	107,
									"scores":	[-7.87175363966196]
								}, {
									"case":	108,
									"scores":	[-7.87175363966196]
								}, {
									"case":	109,
									"scores":	[-7.87175363966196]
								}, {
									"case":	110,
									"scores":	[-7.87175363966196]
								}, {
									"case":	111,
									"scores":	[-7.87175363966196]
								}, {
									"case":	112,
									"scores":	[-7.87175363966196]
								}, {
									"case":	113,
									"scores":	[-7.87175363966196]
								}, {
									"case":	114,
									"scores":	[-7.87175363966196]
								}, {
									"case":	115,
									"scores":	[-7.87175363966196]
								}, {
									"case":	116,
									"scores":	[-7.87175363966196]
								}, {
									"case":	117,
									"scores":	[-7.87175363966196]
								}, {
									"case":	118,
									"scores":	[-7.87175363966196]
								}, {
									"case":	119,
									"scores":	[-7.87175363966196]
								}, {
									"case":	120,
									"scores":	[-7.87175363966196]
								}, {
									"case":	121,
									"scores":	[-7.87175363966196]
								}, {
									"case":	122,
									"scores":	[-7.87175363966196]
								}, {
									"case":	123,
									"scores":	[-7.87175363966196]
								}, {
									"case":	124,
									"scores":	[-7.87175363966196]
								}, {
									"case":	125,
									"scores":	[-7.87175363966196]
								}, {
									"case":	126,
									"scores":	[-7.87175363966196]
								}, {
									"case":	127,
									"scores":	[-7.87175363966196]
								}, {
									"case":	128,
									"scores":	[-7.87175363966196]
								}, {
									"case":	129,
									"scores":	[-7.87175363966196]
								}, {
									"case":	130,
									"scores":	[-7.87175363966196]
								}, {
									"case":	131,
									"scores":	[-7.87175363966196]
								}, {
									"case":	132,
									"scores":	[-7.87175363966196]
								}, {
									"case":	133,
									"scores":	[-7.87175363966196]
								}, {
									"case":	134,
									"scores":	[-7.87175363966196]
								}, {
									"case":	135,
									"scores":	[-7.87175363966196]
								}, {
									"case":	136,
									"scores":	[-7.87175363966196]
								}, {
									"case":	137,
									"scores":	[-7.87175363966196]
								}, {
									"case":	138,
									"scores":	[-7.87175363966196]
								}, {
									"case":	139,
									"scores":	[-7.87175363966196]
								}, {
									"case":	140,
									"scores":	[-7.87175363966196]
								}, {
									"case":	141,
									"scores":	[-7.87175363966196]
								}, {
									"case":	142,
									"scores":	[-7.87175363966196]
								}, {
									"case":	143,
									"scores":	[-7.87175363966196]
								}, {
									"case":	144,
									"scores":	[-7.87175363966196]
								}, {
									"case":	145,
									"scores":	[-7.87175363966196]
								}, {
									"case":	146,
									"scores":	[-7.87175363966196]
								}, {
									"case":	147,
									"scores":	[-7.87175363966196]
								}, {
									"case":	148,
									"scores":	[-7.87175363966196]
								}, {
									"case":	149,
									"scores":	[-7.87175363966196]
								}, {
									"case":	150,
									"scores":	[-7.87175363966196]
								}, {
									"case":	151,
									"scores":	[-7.87175363966196]
								}, {
									"case":	152,
									"scores":	[-7.87175363966196]
								}, {
									"case":	153,
									"scores":	[-7.87175363966196]
								}, {
									"case":	154,
									"scores":	[-7.87175363966196]
								}, {
									"case":	155,
									"scores":	[-7.87175363966196]
								}, {
									"case":	156,
									"scores":	[-7.87175363966196]
								}, {
									"case":	157,
									"scores":	[-7.87175363966196]
								}, {
									"case":	158,
									"scores":	[-7.87175363966196]
								}, {
									"case":	159,
									"scores":	[-7.87175363966196]
								}, {
									"case":	160,
									"scores":	[-7.87175363966196]
								}, {
									"case":	161,
									"scores":	[-7.87175363966196]
								}, {
									"case":	162,
									"scores":	[-7.87175363966196]
								}, {
									"case":	163,
									"scores":	[-7.87175363966196]
								}, {
									"case":	164,
									"scores":	[-7.87175363966196]
								}, {
									"case":	165,
									"scores":	[-7.87175363966196]
								}, {
									"case":	166,
									"scores":	[-7.87175363966196]
								}, {
									"case":	167,
									"scores":	[-7.87175363966196]
								}, {
									"case":	168,
									"scores":	[-7.87175363966196]
								}, {
									"case":	169,
									"scores":	[-7.87175363966196]
								}, {
									"case":	170,
									"scores":	[-7.87175363966196]
								}, {
									"case":	171,
									"scores":	[-7.87175363966196]
								}, {
									"case":	172,
									"scores":	[-7.87175363966196]
								}, {
									"case":	173,
									"scores":	[-7.87175363966196]
								}, {
									"case":	174,
									"scores":	[-7.87175363966196]
								}, {
									"case":	175,
									"scores":	[-7.87175363966196]
								}, {
									"case":	176,
									"scores":	[-7.87175363966196]
								}, {
									"case":	177,
									"scores":	[-7.87175363966196]
								}, {
									"case":	178,
									"scores":	[-10.04296815966196, -10.04296815966196, -9.63553045966196, -11.468926347661961, -10.705111159661961]
								}]
						}]
				}, {
					"line":	489,
					"switches":	[]
				}, {
					"line":	488,
					"switches":	[{
							"switch":	62,
							"types":	[[], [], [], [], [], [], [], [], [], [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [], [], [], [], [], []],
							"begin_line":	489,
							"begin_column":	1,
							"end_line":	489,
							"end_column":	1,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (4)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (4)", "compression = (count)", "compression = (tag)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (4)", "config = (count)", "config = (tag)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (4)", "defcompression = (count)", "defcompression = (tag)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (4)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (4)", "defpredictor = (count)", "defpredictor = (tag)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (4)", "fillorder = (count)", "fillorder = (tag)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (4)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (4)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (4)", "orientation = (count)", "orientation = (tag)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (4)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (4)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (4)", "predictor = (count)", "predictor = (tag)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (4)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (4)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (4)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (4)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	2,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	3,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	4,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	5,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	6,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	7,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	8,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	9,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	10,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	11,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	12,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	13,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	14,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	15,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	16,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	17,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	18,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	19,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	20,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	21,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	22,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	23,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	24,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	25,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	26,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	27,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	28,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	29,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	30,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	31,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	32,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	33,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	34,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	35,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	36,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	37,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	38,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	39,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	40,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	41,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	42,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	43,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	44,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	45,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	46,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	47,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	48,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	49,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	50,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	51,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	52,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	53,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	54,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	55,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	56,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	57,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	58,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	59,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	60,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	61,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	62,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	63,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	64,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	65,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	66,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	67,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	68,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	69,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	70,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	71,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	72,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	73,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	74,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	75,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	76,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	77,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	78,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	79,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	80,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	81,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	82,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	83,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	84,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	85,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	86,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	87,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	88,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	89,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	90,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	91,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	92,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	93,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	94,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	95,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	96,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	97,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	98,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	99,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	100,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	101,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	102,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	103,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	104,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	105,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	106,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	107,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	108,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	109,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	110,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	111,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	112,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	113,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	114,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	115,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	116,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	117,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	118,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	119,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	120,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	121,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	122,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	123,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	124,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	125,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	126,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	127,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	128,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	129,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	130,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	131,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	132,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	133,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	134,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	135,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	136,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	137,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	138,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	139,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	140,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	141,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	142,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	143,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	144,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	145,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	146,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	147,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	148,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	149,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	150,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	151,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	152,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	153,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	154,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	155,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	156,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	157,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	158,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	159,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	160,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	161,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	162,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	163,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	164,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	165,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	166,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	167,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	168,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	169,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	170,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	171,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	172,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	173,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	174,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	175,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	176,
									"scores":	[-7.4474967859940531]
								}, {
									"case":	177,
									"scores":	[-7.4474967859940531]
								}]
						}]
				}, {
					"line":	564,
					"switches":	[{
							"switch":	63,
							"types":	[[], [], [], [], [1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247], [1, 2, 3], [], [], [], [1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], [], [], [], [], [], []],
							"begin_line":	565,
							"begin_column":	0,
							"end_line":	565,
							"end_column":	0,
							"patch_codes":	["memset(&p->count, 0, sizeof (*(&p->count)))", "memset(&p->tag, 0, sizeof (*(&p->tag)))", "memset(&p->type, 0, sizeof (*(&p->type)))", "TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 256, width)", "TIFFSetField((in), 257, length)", "TIFFSetField((in), 258, bitspersample)", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 262, samplesperpixel == 1 ? 32844 : 32845)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 277, samplesperpixel)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 256, width)", "TIFFSetField((out), 257, length)", "TIFFSetField((out), 258, bitspersample)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 262, samplesperpixel == 1 ? 32844 : 32845)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 277, samplesperpixel)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "cf = (cf)", "cf = pickCopyFunc((in), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((out), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (in), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (out), bitspersample, samplesperpixel)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (256)", "comma = (257)", "comma = (258)", "comma = (259)", "comma = (262)", "comma = (266)", "comma = (274)", "comma = (277)", "comma = (278)", "comma = (284)", "comma = (292)", "comma = (293)", "comma = (297)", "comma = (3)", "comma = (301)", "comma = (317)", "comma = (320)", "comma = (322)", "comma = (323)", "comma = (326)", "comma = (327)", "comma = (328)", "comma = (32844)", "comma = (32845)", "comma = (32946)", "comma = (333)", "comma = (334)", "comma = (34661)", "comma = (34675)", "comma = (34676)", "comma = (34677)", "comma = (34908)", "comma = (34909)", "comma = (34910)", "comma = (34911)", "comma = (4)", "comma = (5)", "comma = (6)", "comma = (65537)", "comma = (65538)", "comma = (7)", "comma = (8)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (256)", "compression = (257)", "compression = (258)", "compression = (259)", "compression = (262)", "compression = (266)", "compression = (274)", "compression = (277)", "compression = (278)", "compression = (284)", "compression = (292)", "compression = (293)", "compression = (297)", "compression = (3)", "compression = (301)", "compression = (317)", "compression = (320)", "compression = (322)", "compression = (323)", "compression = (326)", "compression = (327)", "compression = (328)", "compression = (32844)", "compression = (32845)", "compression = (32946)", "compression = (333)", "compression = (334)", "compression = (34661)", "compression = (34675)", "compression = (34676)", "compression = (34677)", "compression = (34908)", "compression = (34909)", "compression = (34910)", "compression = (34911)", "compression = (4)", "compression = (5)", "compression = (6)", "compression = (65537)", "compression = (65538)", "compression = (7)", "compression = (8)", "compression = (bitspersample)", "compression = (samplesperpixel)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (256)", "config = (257)", "config = (258)", "config = (259)", "config = (262)", "config = (266)", "config = (274)", "config = (277)", "config = (278)", "config = (284)", "config = (292)", "config = (293)", "config = (297)", "config = (3)", "config = (301)", "config = (317)", "config = (320)", "config = (322)", "config = (323)", "config = (326)", "config = (327)", "config = (328)", "config = (32844)", "config = (32845)", "config = (32946)", "config = (333)", "config = (334)", "config = (34661)", "config = (34675)", "config = (34676)", "config = (34677)", "config = (34908)", "config = (34909)", "config = (34910)", "config = (34911)", "config = (4)", "config = (5)", "config = (6)", "config = (65537)", "config = (65538)", "config = (7)", "config = (8)", "config = (bitspersample)", "config = (samplesperpixel)", "cpTag((in), out, 262, 1, TIFF_SHORT)", "cpTag((in), out, 266, 1, TIFF_SHORT)", "cpTag((in), out, 293, 1, TIFF_LONG)", "cpTag((in), out, 301, 4, TIFF_SHORT)", "cpTag((in), out, 320, 4, TIFF_SHORT)", "cpTag((in), out, 326, 1, TIFF_LONG)", "cpTag((in), out, 327, 1, TIFF_LONG)", "cpTag((in), out, 328, 1, TIFF_LONG)", "cpTag((in), out, 34908, 1, TIFF_LONG)", "cpTag((in), out, 34909, 1, TIFF_ASCII)", "cpTag((in), out, 34910, 1, TIFF_LONG)", "cpTag((in), out, 34911, 1, TIFF_ASCII)", "cpTag((in), out, p->tag, p->count, p->type)", "cpTag((out), out, 262, 1, TIFF_SHORT)", "cpTag((out), out, 266, 1, TIFF_SHORT)", "cpTag((out), out, 293, 1, TIFF_LONG)", "cpTag((out), out, 301, 4, TIFF_SHORT)", "cpTag((out), out, 320, 4, TIFF_SHORT)", "cpTag((out), out, 326, 1, TIFF_LONG)", "cpTag((out), out, 327, 1, TIFF_LONG)", "cpTag((out), out, 328, 1, TIFF_LONG)", "cpTag((out), out, 34908, 1, TIFF_LONG)", "cpTag((out), out, 34909, 1, TIFF_ASCII)", "cpTag((out), out, 34910, 1, TIFF_LONG)", "cpTag((out), out, 34911, 1, TIFF_ASCII)", "cpTag((out), out, p->tag, p->count, p->type)", "cpTag(in, (in), 262, 1, TIFF_SHORT)", "cpTag(in, (in), 266, 1, TIFF_SHORT)", "cpTag(in, (in), 293, 1, TIFF_LONG)", "cpTag(in, (in), 301, 4, TIFF_SHORT)", "cpTag(in, (in), 320, 4, TIFF_SHORT)", "cpTag(in, (in), 326, 1, TIFF_LONG)", "cpTag(in, (in), 327, 1, TIFF_LONG)", "cpTag(in, (in), 328, 1, TIFF_LONG)", "cpTag(in, (in), 34908, 1, TIFF_LONG)", "cpTag(in, (in), 34909, 1, TIFF_ASCII)", "cpTag(in, (in), 34910, 1, TIFF_LONG)", "cpTag(in, (in), 34911, 1, TIFF_ASCII)", "cpTag(in, (in), p->tag, p->count, p->type)", "cpTag(in, (out), 262, 1, TIFF_SHORT)", "cpTag(in, (out), 266, 1, TIFF_SHORT)", "cpTag(in, (out), 293, 1, TIFF_LONG)", "cpTag(in, (out), 301, 4, TIFF_SHORT)", "cpTag(in, (out), 320, 4, TIFF_SHORT)", "cpTag(in, (out), 326, 1, TIFF_LONG)", "cpTag(in, (out), 327, 1, TIFF_LONG)", "cpTag(in, (out), 328, 1, TIFF_LONG)", "cpTag(in, (out), 34908, 1, TIFF_LONG)", "cpTag(in, (out), 34909, 1, TIFF_ASCII)", "cpTag(in, (out), 34910, 1, TIFF_LONG)", "cpTag(in, (out), 34911, 1, TIFF_ASCII)", "cpTag(in, (out), p->tag, p->count, p->type)", "cpTag(in, out, (p)->tag, p->count, p->type)", "cpTag(in, out, 262, 1, (TIFF_ASCII))", "cpTag(in, out, 262, 1, (TIFF_BYTE))", "cpTag(in, out, 262, 1, (TIFF_DOUBLE))", "cpTag(in, out, 262, 1, (TIFF_FLOAT))", "cpTag(in, out, 262, 1, (TIFF_IFD))", "cpTag(in, out, 262, 1, (TIFF_IFD8))", "cpTag(in, out, 262, 1, (TIFF_LONG))", "cpTag(in, out, 262, 1, (TIFF_LONG8))", "cpTag(in, out, 262, 1, (TIFF_NOTYPE))", "cpTag(in, out, 262, 1, (TIFF_RATIONAL))", "cpTag(in, out, 262, 1, (TIFF_SBYTE))", "cpTag(in, out, 262, 1, (TIFF_SHORT))", "cpTag(in, out, 262, 1, (TIFF_SLONG))", "cpTag(in, out, 262, 1, (TIFF_SLONG8))", "cpTag(in, out, 262, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 262, 1, (TIFF_SSHORT))", "cpTag(in, out, 262, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 266, 1, (TIFF_ASCII))", "cpTag(in, out, 266, 1, (TIFF_BYTE))", "cpTag(in, out, 266, 1, (TIFF_DOUBLE))", "cpTag(in, out, 266, 1, (TIFF_FLOAT))", "cpTag(in, out, 266, 1, (TIFF_IFD))", "cpTag(in, out, 266, 1, (TIFF_IFD8))", "cpTag(in, out, 266, 1, (TIFF_LONG))", "cpTag(in, out, 266, 1, (TIFF_LONG8))", "cpTag(in, out, 266, 1, (TIFF_NOTYPE))", "cpTag(in, out, 266, 1, (TIFF_RATIONAL))", "cpTag(in, out, 266, 1, (TIFF_SBYTE))", "cpTag(in, out, 266, 1, (TIFF_SHORT))", "cpTag(in, out, 266, 1, (TIFF_SLONG))", "cpTag(in, out, 266, 1, (TIFF_SLONG8))", "cpTag(in, out, 266, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 266, 1, (TIFF_SSHORT))", "cpTag(in, out, 266, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 293, 1, (TIFF_ASCII))", "cpTag(in, out, 293, 1, (TIFF_BYTE))", "cpTag(in, out, 293, 1, (TIFF_DOUBLE))", "cpTag(in, out, 293, 1, (TIFF_FLOAT))", "cpTag(in, out, 293, 1, (TIFF_IFD))", "cpTag(in, out, 293, 1, (TIFF_IFD8))", "cpTag(in, out, 293, 1, (TIFF_LONG))", "cpTag(in, out, 293, 1, (TIFF_LONG8))", "cpTag(in, out, 293, 1, (TIFF_NOTYPE))", "cpTag(in, out, 293, 1, (TIFF_RATIONAL))", "cpTag(in, out, 293, 1, (TIFF_SBYTE))", "cpTag(in, out, 293, 1, (TIFF_SHORT))", "cpTag(in, out, 293, 1, (TIFF_SLONG))", "cpTag(in, out, 293, 1, (TIFF_SLONG8))", "cpTag(in, out, 293, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 293, 1, (TIFF_SSHORT))", "cpTag(in, out, 293, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 301, 4, (TIFF_ASCII))", "cpTag(in, out, 301, 4, (TIFF_BYTE))", "cpTag(in, out, 301, 4, (TIFF_DOUBLE))", "cpTag(in, out, 301, 4, (TIFF_FLOAT))", "cpTag(in, out, 301, 4, (TIFF_IFD))", "cpTag(in, out, 301, 4, (TIFF_IFD8))", "cpTag(in, out, 301, 4, (TIFF_LONG))", "cpTag(in, out, 301, 4, (TIFF_LONG8))", "cpTag(in, out, 301, 4, (TIFF_NOTYPE))", "cpTag(in, out, 301, 4, (TIFF_RATIONAL))", "cpTag(in, out, 301, 4, (TIFF_SBYTE))", "cpTag(in, out, 301, 4, (TIFF_SHORT))", "cpTag(in, out, 301, 4, (TIFF_SLONG))", "cpTag(in, out, 301, 4, (TIFF_SLONG8))", "cpTag(in, out, 301, 4, (TIFF_SRATIONAL))", "cpTag(in, out, 301, 4, (TIFF_SSHORT))", "cpTag(in, out, 301, 4, (TIFF_UNDEFINED))", "cpTag(in, out, 320, 4, (TIFF_ASCII))", "cpTag(in, out, 320, 4, (TIFF_BYTE))", "cpTag(in, out, 320, 4, (TIFF_DOUBLE))", "cpTag(in, out, 320, 4, (TIFF_FLOAT))", "cpTag(in, out, 320, 4, (TIFF_IFD))", "cpTag(in, out, 320, 4, (TIFF_IFD8))", "cpTag(in, out, 320, 4, (TIFF_LONG))", "cpTag(in, out, 320, 4, (TIFF_LONG8))", "cpTag(in, out, 320, 4, (TIFF_NOTYPE))", "cpTag(in, out, 320, 4, (TIFF_RATIONAL))", "cpTag(in, out, 320, 4, (TIFF_SBYTE))", "cpTag(in, out, 320, 4, (TIFF_SHORT))", "cpTag(in, out, 320, 4, (TIFF_SLONG))", "cpTag(in, out, 320, 4, (TIFF_SLONG8))", "cpTag(in, out, 320, 4, (TIFF_SRATIONAL))", "cpTag(in, out, 320, 4, (TIFF_SSHORT))", "cpTag(in, out, 320, 4, (TIFF_UNDEFINED))", "cpTag(in, out, 326, 1, (TIFF_ASCII))", "cpTag(in, out, 326, 1, (TIFF_BYTE))", "cpTag(in, out, 326, 1, (TIFF_DOUBLE))", "cpTag(in, out, 326, 1, (TIFF_FLOAT))", "cpTag(in, out, 326, 1, (TIFF_IFD))", "cpTag(in, out, 326, 1, (TIFF_IFD8))", "cpTag(in, out, 326, 1, (TIFF_LONG))", "cpTag(in, out, 326, 1, (TIFF_LONG8))", "cpTag(in, out, 326, 1, (TIFF_NOTYPE))", "cpTag(in, out, 326, 1, (TIFF_RATIONAL))", "cpTag(in, out, 326, 1, (TIFF_SBYTE))", "cpTag(in, out, 326, 1, (TIFF_SHORT))", "cpTag(in, out, 326, 1, (TIFF_SLONG))", "cpTag(in, out, 326, 1, (TIFF_SLONG8))", "cpTag(in, out, 326, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 326, 1, (TIFF_SSHORT))", "cpTag(in, out, 326, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 327, 1, (TIFF_ASCII))", "cpTag(in, out, 327, 1, (TIFF_BYTE))", "cpTag(in, out, 327, 1, (TIFF_DOUBLE))", "cpTag(in, out, 327, 1, (TIFF_FLOAT))", "cpTag(in, out, 327, 1, (TIFF_IFD))", "cpTag(in, out, 327, 1, (TIFF_IFD8))", "cpTag(in, out, 327, 1, (TIFF_LONG))", "cpTag(in, out, 327, 1, (TIFF_LONG8))", "cpTag(in, out, 327, 1, (TIFF_NOTYPE))", "cpTag(in, out, 327, 1, (TIFF_RATIONAL))", "cpTag(in, out, 327, 1, (TIFF_SBYTE))", "cpTag(in, out, 327, 1, (TIFF_SHORT))", "cpTag(in, out, 327, 1, (TIFF_SLONG))", "cpTag(in, out, 327, 1, (TIFF_SLONG8))", "cpTag(in, out, 327, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 327, 1, (TIFF_SSHORT))", "cpTag(in, out, 327, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 328, 1, (TIFF_ASCII))", "cpTag(in, out, 328, 1, (TIFF_BYTE))", "cpTag(in, out, 328, 1, (TIFF_DOUBLE))", "cpTag(in, out, 328, 1, (TIFF_FLOAT))", "cpTag(in, out, 328, 1, (TIFF_IFD))", "cpTag(in, out, 328, 1, (TIFF_IFD8))", "cpTag(in, out, 328, 1, (TIFF_LONG))", "cpTag(in, out, 328, 1, (TIFF_LONG8))", "cpTag(in, out, 328, 1, (TIFF_NOTYPE))", "cpTag(in, out, 328, 1, (TIFF_RATIONAL))", "cpTag(in, out, 328, 1, (TIFF_SBYTE))", "cpTag(in, out, 328, 1, (TIFF_SHORT))", "cpTag(in, out, 328, 1, (TIFF_SLONG))", "cpTag(in, out, 328, 1, (TIFF_SLONG8))", "cpTag(in, out, 328, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 328, 1, (TIFF_SSHORT))", "cpTag(in, out, 328, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 34908, 1, (TIFF_ASCII))", "cpTag(in, out, 34908, 1, (TIFF_BYTE))", "cpTag(in, out, 34908, 1, (TIFF_DOUBLE))", "cpTag(in, out, 34908, 1, (TIFF_FLOAT))", "cpTag(in, out, 34908, 1, (TIFF_IFD))", "cpTag(in, out, 34908, 1, (TIFF_IFD8))", "cpTag(in, out, 34908, 1, (TIFF_LONG))", "cpTag(in, out, 34908, 1, (TIFF_LONG8))", "cpTag(in, out, 34908, 1, (TIFF_NOTYPE))", "cpTag(in, out, 34908, 1, (TIFF_RATIONAL))", "cpTag(in, out, 34908, 1, (TIFF_SBYTE))", "cpTag(in, out, 34908, 1, (TIFF_SHORT))", "cpTag(in, out, 34908, 1, (TIFF_SLONG))", "cpTag(in, out, 34908, 1, (TIFF_SLONG8))", "cpTag(in, out, 34908, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 34908, 1, (TIFF_SSHORT))", "cpTag(in, out, 34908, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 34909, 1, (TIFF_ASCII))", "cpTag(in, out, 34909, 1, (TIFF_BYTE))", "cpTag(in, out, 34909, 1, (TIFF_DOUBLE))", "cpTag(in, out, 34909, 1, (TIFF_FLOAT))", "cpTag(in, out, 34909, 1, (TIFF_IFD))", "cpTag(in, out, 34909, 1, (TIFF_IFD8))", "cpTag(in, out, 34909, 1, (TIFF_LONG))", "cpTag(in, out, 34909, 1, (TIFF_LONG8))", "cpTag(in, out, 34909, 1, (TIFF_NOTYPE))", "cpTag(in, out, 34909, 1, (TIFF_RATIONAL))", "cpTag(in, out, 34909, 1, (TIFF_SBYTE))", "cpTag(in, out, 34909, 1, (TIFF_SHORT))", "cpTag(in, out, 34909, 1, (TIFF_SLONG))", "cpTag(in, out, 34909, 1, (TIFF_SLONG8))", "cpTag(in, out, 34909, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 34909, 1, (TIFF_SSHORT))", "cpTag(in, out, 34909, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 34910, 1, (TIFF_ASCII))", "cpTag(in, out, 34910, 1, (TIFF_BYTE))", "cpTag(in, out, 34910, 1, (TIFF_DOUBLE))", "cpTag(in, out, 34910, 1, (TIFF_FLOAT))", "cpTag(in, out, 34910, 1, (TIFF_IFD))", "cpTag(in, out, 34910, 1, (TIFF_IFD8))", "cpTag(in, out, 34910, 1, (TIFF_LONG))", "cpTag(in, out, 34910, 1, (TIFF_LONG8))", "cpTag(in, out, 34910, 1, (TIFF_NOTYPE))", "cpTag(in, out, 34910, 1, (TIFF_RATIONAL))", "cpTag(in, out, 34910, 1, (TIFF_SBYTE))", "cpTag(in, out, 34910, 1, (TIFF_SHORT))", "cpTag(in, out, 34910, 1, (TIFF_SLONG))", "cpTag(in, out, 34910, 1, (TIFF_SLONG8))", "cpTag(in, out, 34910, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 34910, 1, (TIFF_SSHORT))", "cpTag(in, out, 34910, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 34911, 1, (TIFF_ASCII))", "cpTag(in, out, 34911, 1, (TIFF_BYTE))", "cpTag(in, out, 34911, 1, (TIFF_DOUBLE))", "cpTag(in, out, 34911, 1, (TIFF_FLOAT))", "cpTag(in, out, 34911, 1, (TIFF_IFD))", "cpTag(in, out, 34911, 1, (TIFF_IFD8))", "cpTag(in, out, 34911, 1, (TIFF_LONG))", "cpTag(in, out, 34911, 1, (TIFF_LONG8))", "cpTag(in, out, 34911, 1, (TIFF_NOTYPE))", "cpTag(in, out, 34911, 1, (TIFF_RATIONAL))", "cpTag(in, out, 34911, 1, (TIFF_SBYTE))", "cpTag(in, out, 34911, 1, (TIFF_SHORT))", "cpTag(in, out, 34911, 1, (TIFF_SLONG))", "cpTag(in, out, 34911, 1, (TIFF_SLONG8))", "cpTag(in, out, 34911, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 34911, 1, (TIFF_SSHORT))", "cpTag(in, out, 34911, 1, (TIFF_UNDEFINED))", "cpTag(in, out, p->tag, (p)->count, p->type)", "cpTag(in, out, p->tag, p->count, (p)->type)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (256)", "defcompression = (257)", "defcompression = (258)", "defcompression = (259)", "defcompression = (262)", "defcompression = (266)", "defcompression = (274)", "defcompression = (277)", "defcompression = (278)", "defcompression = (284)", "defcompression = (292)", "defcompression = (293)", "defcompression = (297)", "defcompression = (3)", "defcompression = (301)", "defcompression = (317)", "defcompression = (320)", "defcompression = (322)", "defcompression = (323)", "defcompression = (326)", "defcompression = (327)", "defcompression = (328)", "defcompression = (32844)", "defcompression = (32845)", "defcompression = (32946)", "defcompression = (333)", "defcompression = (334)", "defcompression = (34661)", "defcompression = (34675)", "defcompression = (34676)", "defcompression = (34677)", "defcompression = (34908)", "defcompression = (34909)", "defcompression = (34910)", "defcompression = (34911)", "defcompression = (4)", "defcompression = (5)", "defcompression = (6)", "defcompression = (65537)", "defcompression = (65538)", "defcompression = (7)", "defcompression = (8)", "defcompression = (bitspersample)", "defcompression = (samplesperpixel)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (256)", "defg3opts = (257)", "defg3opts = (258)", "defg3opts = (259)", "defg3opts = (262)", "defg3opts = (266)", "defg3opts = (274)", "defg3opts = (277)", "defg3opts = (278)", "defg3opts = (284)", "defg3opts = (292)", "defg3opts = (293)", "defg3opts = (297)", "defg3opts = (3)", "defg3opts = (301)", "defg3opts = (317)", "defg3opts = (320)", "defg3opts = (322)", "defg3opts = (323)", "defg3opts = (326)", "defg3opts = (327)", "defg3opts = (328)", "defg3opts = (32844)", "defg3opts = (32845)", "defg3opts = (32946)", "defg3opts = (333)", "defg3opts = (334)", "defg3opts = (34661)", "defg3opts = (34675)", "defg3opts = (34676)", "defg3opts = (34677)", "defg3opts = (34908)", "defg3opts = (34909)", "defg3opts = (34910)", "defg3opts = (34911)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (6)", "defg3opts = (65537)", "defg3opts = (65538)", "defg3opts = (7)", "defg3opts = (8)", "defg3opts = (length)", "defg3opts = (width)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (256)", "defpredictor = (257)", "defpredictor = (258)", "defpredictor = (259)", "defpredictor = (262)", "defpredictor = (266)", "defpredictor = (274)", "defpredictor = (277)", "defpredictor = (278)", "defpredictor = (284)", "defpredictor = (292)", "defpredictor = (293)", "defpredictor = (297)", "defpredictor = (3)", "defpredictor = (301)", "defpredictor = (317)", "defpredictor = (320)", "defpredictor = (322)", "defpredictor = (323)", "defpredictor = (326)", "defpredictor = (327)", "defpredictor = (328)", "defpredictor = (32844)", "defpredictor = (32845)", "defpredictor = (32946)", "defpredictor = (333)", "defpredictor = (334)", "defpredictor = (34661)", "defpredictor = (34675)", "defpredictor = (34676)", "defpredictor = (34677)", "defpredictor = (34908)", "defpredictor = (34909)", "defpredictor = (34910)", "defpredictor = (34911)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (6)", "defpredictor = (65537)", "defpredictor = (65538)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = (bitspersample)", "defpredictor = (samplesperpixel)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (256)", "fillorder = (257)", "fillorder = (258)", "fillorder = (259)", "fillorder = (262)", "fillorder = (266)", "fillorder = (274)", "fillorder = (277)", "fillorder = (278)", "fillorder = (284)", "fillorder = (292)", "fillorder = (293)", "fillorder = (297)", "fillorder = (3)", "fillorder = (301)", "fillorder = (317)", "fillorder = (320)", "fillorder = (322)", "fillorder = (323)", "fillorder = (326)", "fillorder = (327)", "fillorder = (328)", "fillorder = (32844)", "fillorder = (32845)", "fillorder = (32946)", "fillorder = (333)", "fillorder = (334)", "fillorder = (34661)", "fillorder = (34675)", "fillorder = (34676)", "fillorder = (34677)", "fillorder = (34908)", "fillorder = (34909)", "fillorder = (34910)", "fillorder = (34911)", "fillorder = (4)", "fillorder = (5)", "fillorder = (6)", "fillorder = (65537)", "fillorder = (65538)", "fillorder = (7)", "fillorder = (8)", "fillorder = (bitspersample)", "fillorder = (samplesperpixel)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (256)", "g3opts = (257)", "g3opts = (258)", "g3opts = (259)", "g3opts = (262)", "g3opts = (266)", "g3opts = (274)", "g3opts = (277)", "g3opts = (278)", "g3opts = (284)", "g3opts = (292)", "g3opts = (293)", "g3opts = (297)", "g3opts = (3)", "g3opts = (301)", "g3opts = (317)", "g3opts = (320)", "g3opts = (322)", "g3opts = (323)", "g3opts = (326)", "g3opts = (327)", "g3opts = (328)", "g3opts = (32844)", "g3opts = (32845)", "g3opts = (32946)", "g3opts = (333)", "g3opts = (334)", "g3opts = (34661)", "g3opts = (34675)", "g3opts = (34676)", "g3opts = (34677)", "g3opts = (34908)", "g3opts = (34909)", "g3opts = (34910)", "g3opts = (34911)", "g3opts = (4)", "g3opts = (5)", "g3opts = (6)", "g3opts = (65537)", "g3opts = (65538)", "g3opts = (7)", "g3opts = (8)", "g3opts = (length)", "g3opts = (width)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (256)", "jpegcolormode = (257)", "jpegcolormode = (258)", "jpegcolormode = (259)", "jpegcolormode = (262)", "jpegcolormode = (266)", "jpegcolormode = (274)", "jpegcolormode = (277)", "jpegcolormode = (278)", "jpegcolormode = (284)", "jpegcolormode = (292)", "jpegcolormode = (293)", "jpegcolormode = (297)", "jpegcolormode = (3)", "jpegcolormode = (301)", "jpegcolormode = (317)", "jpegcolormode = (320)", "jpegcolormode = (322)", "jpegcolormode = (323)", "jpegcolormode = (326)", "jpegcolormode = (327)", "jpegcolormode = (328)", "jpegcolormode = (32844)", "jpegcolormode = (32845)", "jpegcolormode = (32946)", "jpegcolormode = (333)", "jpegcolormode = (334)", "jpegcolormode = (34661)", "jpegcolormode = (34675)", "jpegcolormode = (34676)", "jpegcolormode = (34677)", "jpegcolormode = (34908)", "jpegcolormode = (34909)", "jpegcolormode = (34910)", "jpegcolormode = (34911)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (6)", "jpegcolormode = (65537)", "jpegcolormode = (65538)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (256)", "orientation = (257)", "orientation = (258)", "orientation = (259)", "orientation = (262)", "orientation = (266)", "orientation = (274)", "orientation = (277)", "orientation = (278)", "orientation = (284)", "orientation = (292)", "orientation = (293)", "orientation = (297)", "orientation = (3)", "orientation = (301)", "orientation = (317)", "orientation = (320)", "orientation = (322)", "orientation = (323)", "orientation = (326)", "orientation = (327)", "orientation = (328)", "orientation = (32844)", "orientation = (32845)", "orientation = (32946)", "orientation = (333)", "orientation = (334)", "orientation = (34661)", "orientation = (34675)", "orientation = (34676)", "orientation = (34677)", "orientation = (34908)", "orientation = (34909)", "orientation = (34910)", "orientation = (34911)", "orientation = (4)", "orientation = (5)", "orientation = (6)", "orientation = (65537)", "orientation = (65538)", "orientation = (7)", "orientation = (8)", "orientation = (bitspersample)", "orientation = (samplesperpixel)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (256)", "outtiled = (257)", "outtiled = (258)", "outtiled = (259)", "outtiled = (262)", "outtiled = (266)", "outtiled = (274)", "outtiled = (277)", "outtiled = (278)", "outtiled = (284)", "outtiled = (292)", "outtiled = (293)", "outtiled = (297)", "outtiled = (3)", "outtiled = (301)", "outtiled = (317)", "outtiled = (320)", "outtiled = (322)", "outtiled = (323)", "outtiled = (326)", "outtiled = (327)", "outtiled = (328)", "outtiled = (32844)", "outtiled = (32845)", "outtiled = (32946)", "outtiled = (333)", "outtiled = (334)", "outtiled = (34661)", "outtiled = (34675)", "outtiled = (34676)", "outtiled = (34677)", "outtiled = (34908)", "outtiled = (34909)", "outtiled = (34910)", "outtiled = (34911)", "outtiled = (4)", "outtiled = (5)", "outtiled = (6)", "outtiled = (65537)", "outtiled = (65538)", "outtiled = (7)", "outtiled = (8)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (256)", "pageNum = (257)", "pageNum = (258)", "pageNum = (259)", "pageNum = (262)", "pageNum = (266)", "pageNum = (274)", "pageNum = (277)", "pageNum = (278)", "pageNum = (284)", "pageNum = (292)", "pageNum = (293)", "pageNum = (297)", "pageNum = (3)", "pageNum = (301)", "pageNum = (317)", "pageNum = (320)", "pageNum = (322)", "pageNum = (323)", "pageNum = (326)", "pageNum = (327)", "pageNum = (328)", "pageNum = (32844)", "pageNum = (32845)", "pageNum = (32946)", "pageNum = (333)", "pageNum = (334)", "pageNum = (34661)", "pageNum = (34675)", "pageNum = (34676)", "pageNum = (34677)", "pageNum = (34908)", "pageNum = (34909)", "pageNum = (34910)", "pageNum = (34911)", "pageNum = (4)", "pageNum = (5)", "pageNum = (6)", "pageNum = (65537)", "pageNum = (65538)", "pageNum = (7)", "pageNum = (8)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (256)", "predictor = (257)", "predictor = (258)", "predictor = (259)", "predictor = (262)", "predictor = (266)", "predictor = (274)", "predictor = (277)", "predictor = (278)", "predictor = (284)", "predictor = (292)", "predictor = (293)", "predictor = (297)", "predictor = (3)", "predictor = (301)", "predictor = (317)", "predictor = (320)", "predictor = (322)", "predictor = (323)", "predictor = (326)", "predictor = (327)", "predictor = (328)", "predictor = (32844)", "predictor = (32845)", "predictor = (32946)", "predictor = (333)", "predictor = (334)", "predictor = (34661)", "predictor = (34675)", "predictor = (34676)", "predictor = (34677)", "predictor = (34908)", "predictor = (34909)", "predictor = (34910)", "predictor = (34911)", "predictor = (4)", "predictor = (5)", "predictor = (6)", "predictor = (65537)", "predictor = (65538)", "predictor = (7)", "predictor = (8)", "predictor = (bitspersample)", "predictor = (samplesperpixel)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (256)", "quality = (257)", "quality = (258)", "quality = (259)", "quality = (262)", "quality = (266)", "quality = (274)", "quality = (277)", "quality = (278)", "quality = (284)", "quality = (292)", "quality = (293)", "quality = (297)", "quality = (3)", "quality = (301)", "quality = (317)", "quality = (320)", "quality = (322)", "quality = (323)", "quality = (326)", "quality = (327)", "quality = (328)", "quality = (32844)", "quality = (32845)", "quality = (32946)", "quality = (333)", "quality = (334)", "quality = (34661)", "quality = (34675)", "quality = (34676)", "quality = (34677)", "quality = (34908)", "quality = (34909)", "quality = (34910)", "quality = (34911)", "quality = (4)", "quality = (5)", "quality = (6)", "quality = (65537)", "quality = (65538)", "quality = (7)", "quality = (8)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (256)", "rowsperstrip = (257)", "rowsperstrip = (258)", "rowsperstrip = (259)", "rowsperstrip = (262)", "rowsperstrip = (266)", "rowsperstrip = (274)", "rowsperstrip = (277)", "rowsperstrip = (278)", "rowsperstrip = (284)", "rowsperstrip = (292)", "rowsperstrip = (293)", "rowsperstrip = (297)", "rowsperstrip = (3)", "rowsperstrip = (301)", "rowsperstrip = (317)", "rowsperstrip = (320)", "rowsperstrip = (322)", "rowsperstrip = (323)", "rowsperstrip = (326)", "rowsperstrip = (327)", "rowsperstrip = (328)", "rowsperstrip = (32844)", "rowsperstrip = (32845)", "rowsperstrip = (32946)", "rowsperstrip = (333)", "rowsperstrip = (334)", "rowsperstrip = (34661)", "rowsperstrip = (34675)", "rowsperstrip = (34676)", "rowsperstrip = (34677)", "rowsperstrip = (34908)", "rowsperstrip = (34909)", "rowsperstrip = (34910)", "rowsperstrip = (34911)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (6)", "rowsperstrip = (65537)", "rowsperstrip = (65538)", "rowsperstrip = (7)", "rowsperstrip = (8)", "rowsperstrip = (length)", "rowsperstrip = (width)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (256)", "tilelength = (257)", "tilelength = (258)", "tilelength = (259)", "tilelength = (262)", "tilelength = (266)", "tilelength = (274)", "tilelength = (277)", "tilelength = (278)", "tilelength = (284)", "tilelength = (292)", "tilelength = (293)", "tilelength = (297)", "tilelength = (3)", "tilelength = (301)", "tilelength = (317)", "tilelength = (320)", "tilelength = (322)", "tilelength = (323)", "tilelength = (326)", "tilelength = (327)", "tilelength = (328)", "tilelength = (32844)", "tilelength = (32845)", "tilelength = (32946)", "tilelength = (333)", "tilelength = (334)", "tilelength = (34661)", "tilelength = (34675)", "tilelength = (34676)", "tilelength = (34677)", "tilelength = (34908)", "tilelength = (34909)", "tilelength = (34910)", "tilelength = (34911)", "tilelength = (4)", "tilelength = (5)", "tilelength = (6)", "tilelength = (65537)", "tilelength = (65538)", "tilelength = (7)", "tilelength = (8)", "tilelength = (length)", "tilelength = (width)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (256)", "tilewidth = (257)", "tilewidth = (258)", "tilewidth = (259)", "tilewidth = (262)", "tilewidth = (266)", "tilewidth = (274)", "tilewidth = (277)", "tilewidth = (278)", "tilewidth = (284)", "tilewidth = (292)", "tilewidth = (293)", "tilewidth = (297)", "tilewidth = (3)", "tilewidth = (301)", "tilewidth = (317)", "tilewidth = (320)", "tilewidth = (322)", "tilewidth = (323)", "tilewidth = (326)", "tilewidth = (327)", "tilewidth = (328)", "tilewidth = (32844)", "tilewidth = (32845)", "tilewidth = (32946)", "tilewidth = (333)", "tilewidth = (334)", "tilewidth = (34661)", "tilewidth = (34675)", "tilewidth = (34676)", "tilewidth = (34677)", "tilewidth = (34908)", "tilewidth = (34909)", "tilewidth = (34910)", "tilewidth = (34911)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (6)", "tilewidth = (65537)", "tilewidth = (65538)", "tilewidth = (7)", "tilewidth = (8)", "tilewidth = (length)", "tilewidth = (width)", "TIFFDefaultTileSize(out, &tilewidth, &tilelength)", "TIFFGetField(in, 322, &tilewidth)", "TIFFGetField(in, 323, &tilelength)", "TIFFGetFieldDefaulted(in, 274, &orientation)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "TIFFSetField(in, 65538, 1)", "TIFFSetField(out, 256, width)", "TIFFSetField(out, 257, length)", "TIFFSetField(out, 258, bitspersample)", "TIFFSetField(out, 259, compression)", "TIFFSetField(out, 262, 2)", "TIFFSetField(out, 262, 6)", "TIFFSetField(out, 262, samplesperpixel == 1 ? 32844 : 32845)", "TIFFSetField(out, 266, fillorder)", "TIFFSetField(out, 274, orientation)", "TIFFSetField(out, 277, samplesperpixel)", "TIFFSetField(out, 278, rowsperstrip)", "TIFFSetField(out, 284, config)", "TIFFSetField(out, 292, g3opts)", "TIFFSetField(out, 297, pageNum++, 0)", "TIFFSetField(out, 317, predictor)", "TIFFSetField(out, 322, tilewidth)", "TIFFSetField(out, 323, tilelength)", "TIFFSetField(out, 65538, jpegcolormode)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "cf = pickCopyFunc(in, out, bitspersample, samplesperpixel)", "compression = defcompression", "cpTag(in, out, 262, 1, TIFF_SHORT)", "cpTag(in, out, 266, 1, TIFF_SHORT)", "cpTag(in, out, 293, 1, TIFF_LONG)", "cpTag(in, out, 301, 4, TIFF_SHORT)", "cpTag(in, out, 320, 4, TIFF_SHORT)", "cpTag(in, out, 326, 1, TIFF_LONG)", "cpTag(in, out, 327, 1, TIFF_LONG)", "cpTag(in, out, 328, 1, TIFF_LONG)", "cpTag(in, out, 34908, 1, TIFF_LONG)", "cpTag(in, out, 34909, 1, TIFF_ASCII)", "cpTag(in, out, 34910, 1, TIFF_LONG)", "cpTag(in, out, 34911, 1, TIFF_ASCII)", "cpTag(in, out, p->tag, p->count, p->type)", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "outtiled = TIFFIsTiled(in)", "pageNum = -1", "predictor = defpredictor", "rowsperstrip = TIFFDefaultStripSize(out, rowsperstrip)", "rowsperstrip = length", "usage()", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return -1;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 0;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 1;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 256;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 257;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 258;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 259;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 262;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 266;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 274;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 277;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 278;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 284;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 292;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 293;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 297;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 2;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 301;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 317;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 320;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 322;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 323;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 326;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 327;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 32844;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 32845;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 328;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 32946;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 333;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 334;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 34661;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 34675;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 34676;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 34677;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 34908;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 34909;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 34910;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 34911;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 3;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 4;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 5;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 65537;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 65538;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 6;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 7;\n", "if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    return 8;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	2,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	3,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	4,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	5,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	6,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	7,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	8,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	9,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	10,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	11,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	12,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	13,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	14,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	15,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	16,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	17,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	18,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	19,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	20,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	21,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	22,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	23,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	24,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	25,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	26,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	27,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	28,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	29,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	30,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	31,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	32,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	33,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	34,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	35,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	36,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	37,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	38,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	39,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	40,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	41,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	42,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	43,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	44,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	45,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	46,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	47,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	48,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	49,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	50,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	51,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	52,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	53,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	54,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	55,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	56,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	57,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	58,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	59,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	60,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	61,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	62,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	63,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	64,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	65,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	66,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	67,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	68,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	69,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	70,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	71,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	72,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	73,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	74,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	75,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	76,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	77,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	78,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	79,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	80,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	81,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	82,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	83,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	84,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	85,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	86,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	87,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	88,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	89,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	90,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	91,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	92,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	93,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	94,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	95,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	96,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	97,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	98,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	99,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	100,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	101,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	102,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	103,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	104,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	105,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	106,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	107,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	108,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	109,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	110,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	111,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	112,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	113,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	114,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	115,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	116,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	117,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	118,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	119,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	120,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	121,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	122,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	123,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	124,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	125,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	126,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	127,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	128,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	129,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	130,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	131,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	132,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	133,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	134,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	135,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	136,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	137,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	138,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	139,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	140,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	141,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	142,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	143,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	144,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	145,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	146,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	147,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	148,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	149,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	150,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	151,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	152,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	153,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	154,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	155,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	156,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	157,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	158,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	159,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	160,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	161,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	162,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	163,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	164,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	165,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	166,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	167,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	168,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	169,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	170,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	171,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	172,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	173,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	174,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	175,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	176,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	177,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	178,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	179,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	180,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	181,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	182,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	183,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	184,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	185,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	186,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	187,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	188,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	189,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	190,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	191,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	192,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	193,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	194,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	195,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	196,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	197,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	198,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	199,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	200,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	201,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	202,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	203,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	204,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	205,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	206,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	207,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	208,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	209,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	210,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	211,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	212,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	213,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	214,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	215,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	216,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	217,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	218,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	219,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	220,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	221,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	222,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	223,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	224,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	225,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	226,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	227,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	228,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	229,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	230,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	231,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	232,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	233,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	234,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	235,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	236,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	237,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	238,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	239,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	240,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	241,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	242,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	243,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	244,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	245,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	246,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	247,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	248,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	249,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	250,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	251,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	252,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	253,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	254,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	255,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	256,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	257,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	258,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	259,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	260,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	261,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	262,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	263,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	264,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	265,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	266,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	267,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	268,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	269,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	270,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	271,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	272,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	273,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	274,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	275,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	276,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	277,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	278,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	279,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	280,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	281,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	282,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	283,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	284,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	285,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	286,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	287,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	288,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	289,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	290,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	291,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	292,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	293,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	294,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	295,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	296,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	297,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	298,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	299,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	300,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	301,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	302,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	303,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	304,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	305,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	306,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	307,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	308,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	309,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	310,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	311,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	312,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	313,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	314,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	315,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	316,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	317,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	318,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	319,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	320,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	321,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	322,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	323,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	324,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	325,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	326,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	327,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	328,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	329,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	330,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	331,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	332,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	333,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	334,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	335,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	336,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	337,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	338,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	339,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	340,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	341,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	342,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	343,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	344,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	345,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	346,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	347,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	348,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	349,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	350,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	351,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	352,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	353,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	354,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	355,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	356,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	357,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	358,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	359,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	360,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	361,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	362,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	363,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	364,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	365,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	366,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	367,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	368,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	369,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	370,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	371,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	372,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	373,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	374,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	375,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	376,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	377,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	378,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	379,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	380,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	381,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	382,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	383,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	384,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	385,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	386,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	387,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	388,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	389,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	390,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	391,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	392,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	393,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	394,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	395,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	396,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	397,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	398,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	399,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	400,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	401,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	402,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	403,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	404,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	405,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	406,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	407,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	408,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	409,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	410,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	411,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	412,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	413,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	414,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	415,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	416,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	417,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	418,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	419,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	420,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	421,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	422,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	423,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	424,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	425,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	426,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	427,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	428,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	429,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	430,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	431,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	432,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	433,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	434,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	435,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	436,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	437,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	438,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	439,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	440,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	441,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	442,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	443,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	444,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	445,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	446,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	447,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	448,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	449,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	450,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	451,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	452,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	453,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	454,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	455,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	456,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	457,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	458,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	459,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	460,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	461,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	462,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	463,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	464,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	465,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	466,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	467,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	468,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	469,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	470,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	471,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	472,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	473,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	474,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	475,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	476,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	477,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	478,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	479,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	480,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	481,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	482,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	483,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	484,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	485,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	486,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	487,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	488,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	489,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	490,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	491,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	492,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	493,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	494,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	495,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	496,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	497,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	498,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	499,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	500,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	501,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	502,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	503,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	504,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	505,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	506,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	507,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	508,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	509,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	510,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	511,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	512,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	513,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	514,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	515,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	516,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	517,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	518,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	519,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	520,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	521,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	522,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	523,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	524,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	525,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	526,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	527,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	528,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	529,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	530,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	531,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	532,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	533,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	534,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	535,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	536,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	537,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	538,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	539,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	540,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	541,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	542,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	543,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	544,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	545,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	546,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	547,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	548,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	549,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	550,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	551,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	552,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	553,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	554,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	555,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	556,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	557,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	558,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	559,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	560,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	561,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	562,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	563,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	564,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	565,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	566,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	567,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	568,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	569,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	570,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	571,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	572,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	573,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	574,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	575,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	576,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	577,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	578,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	579,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	580,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	581,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	582,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	583,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	584,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	585,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	586,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	587,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	588,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	589,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	590,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	591,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	592,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	593,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	594,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	595,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	596,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	597,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	598,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	599,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	600,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	601,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	602,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	603,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	604,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	605,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	606,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	607,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	608,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	609,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	610,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	611,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	612,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	613,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	614,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	615,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	616,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	617,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	618,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	619,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	620,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	621,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	622,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	623,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	624,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	625,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	626,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	627,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	628,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	629,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	630,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	631,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	632,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	633,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	634,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	635,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	636,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	637,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	638,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	639,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	640,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	641,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	642,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	643,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	644,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	645,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	646,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	647,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	648,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	649,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	650,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	651,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	652,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	653,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	654,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	655,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	656,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	657,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	658,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	659,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	660,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	661,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	662,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	663,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	664,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	665,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	666,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	667,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	668,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	669,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	670,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	671,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	672,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	673,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	674,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	675,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	676,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	677,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	678,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	679,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	680,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	681,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	682,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	683,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	684,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	685,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	686,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	687,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	688,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	689,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	690,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	691,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	692,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	693,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	694,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	695,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	696,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	697,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	698,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	699,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	700,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	701,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	702,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	703,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	704,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	705,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	706,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	707,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	708,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	709,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	710,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	711,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	712,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	713,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	714,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	715,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	716,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	717,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	718,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	719,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	720,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	721,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	722,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	723,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	724,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	725,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	726,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	727,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	728,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	729,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	730,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	731,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	732,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	733,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	734,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	735,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	736,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	737,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	738,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	739,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	740,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	741,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	742,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	743,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	744,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	745,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	746,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	747,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	748,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	749,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	750,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	751,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	752,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	753,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	754,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	755,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	756,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	757,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	758,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	759,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	760,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	761,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	762,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	763,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	764,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	765,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	766,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	767,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	768,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	769,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	770,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	771,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	772,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	773,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	774,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	775,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	776,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	777,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	778,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	779,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	780,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	781,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	782,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	783,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	784,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	785,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	786,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	787,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	788,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	789,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	790,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	791,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	792,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	793,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	794,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	795,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	796,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	797,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	798,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	799,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	800,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	801,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	802,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	803,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	804,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	805,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	806,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	807,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	808,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	809,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	810,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	811,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	812,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	813,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	814,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	815,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	816,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	817,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	818,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	819,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	820,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	821,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	822,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	823,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	824,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	825,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	826,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	827,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	828,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	829,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	830,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	831,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	832,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	833,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	834,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	835,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	836,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	837,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	838,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	839,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	840,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	841,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	842,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	843,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	844,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	845,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	846,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	847,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	848,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	849,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	850,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	851,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	852,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	853,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	854,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	855,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	856,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	857,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	858,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	859,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	860,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	861,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	862,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	863,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	864,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	865,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	866,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	867,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	868,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	869,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	870,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	871,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	872,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	873,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	874,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	875,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	876,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	877,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	878,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	879,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	880,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	881,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	882,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	883,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	884,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	885,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	886,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	887,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	888,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	889,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	890,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	891,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	892,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	893,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	894,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	895,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	896,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	897,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	898,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	899,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	900,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	901,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	902,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	903,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	904,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	905,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	906,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	907,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	908,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	909,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	910,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	911,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	912,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	913,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	914,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	915,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	916,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	917,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	918,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	919,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	920,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	921,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	922,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	923,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	924,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	925,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	926,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	927,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	928,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	929,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	930,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	931,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	932,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	933,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	934,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	935,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	936,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	937,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	938,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	939,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	940,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	941,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	942,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	943,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	944,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	945,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	946,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	947,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	948,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	949,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	950,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	951,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	952,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	953,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	954,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	955,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	956,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	957,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	958,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	959,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	960,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	961,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	962,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	963,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	964,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	965,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	966,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	967,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	968,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	969,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	970,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	971,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	972,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	973,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	974,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	975,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	976,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	977,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	978,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	979,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	980,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	981,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	982,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	983,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	984,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	985,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	986,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	987,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	988,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	989,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	990,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	991,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	992,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	993,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	994,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	995,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	996,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	997,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	998,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	999,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1000,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1001,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1002,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1003,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1004,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1005,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1006,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1007,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1008,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1009,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1010,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1011,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1012,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1013,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1014,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1015,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1016,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1017,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1018,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1019,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1020,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1021,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1022,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1023,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1024,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1025,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1026,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1027,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1028,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1029,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1030,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1031,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1032,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1033,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1034,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1035,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1036,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1037,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1038,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1039,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1040,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1041,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1042,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1043,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1044,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1045,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1046,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1047,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1048,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1049,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1050,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1051,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1052,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1053,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1054,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1055,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1056,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1057,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1058,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1059,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1060,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1061,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1062,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1063,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1064,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1065,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1066,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1067,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1068,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1069,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1070,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1071,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1072,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1073,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1074,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1075,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1076,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1077,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1078,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1079,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1080,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1081,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1082,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1083,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1084,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1085,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1086,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1087,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1088,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1089,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1090,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1091,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1092,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1093,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1094,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1095,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1096,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1097,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1098,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1099,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1100,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1101,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1102,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1103,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1104,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1105,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1106,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1107,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1108,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1109,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1110,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1111,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1112,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1113,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1114,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1115,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1116,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1117,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1118,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1119,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1120,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1121,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1122,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1123,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1124,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1125,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1126,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1127,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1128,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1129,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1130,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1131,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1132,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1133,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1134,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1135,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1136,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1137,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1138,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1139,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1140,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1141,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1142,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1143,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1144,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1145,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1146,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1147,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1148,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1149,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1150,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1151,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1152,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1153,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1154,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1155,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1156,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1157,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1158,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1159,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1160,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1161,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1162,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1163,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1164,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1165,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1166,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1167,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1168,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1169,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1170,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1171,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1172,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1173,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1174,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1175,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1176,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1177,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1178,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1179,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1180,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1181,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1182,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1183,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1184,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1185,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1186,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1187,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1188,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1189,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1190,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1191,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1192,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1193,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1194,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1195,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1196,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1197,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1198,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1199,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1200,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1201,
									"scores":	[-6.6999966152458317]
								}, {
									"case":	1202,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1203,
									"scores":	[-10.420798715245832, -10.63102713524583, -10.63102713524583, -12.842594028545832, -11.514704028545832, -10.879628028545833, -11.002083935245832, -12.301237165245832, -12.168419165245833, -12.257089275245832, -11.510943165245832, -11.510943165245832, -10.875867165245833, -11.510943165245832, -11.510943165245832, -11.510943165245832, -11.510943165245832, -11.510943165245832, -11.510943165245832, -10.964659535245833, -11.002083935245832]
								}, {
									"case":	1204,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1205,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1206,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1207,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1208,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1209,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1210,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1211,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1212,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1213,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1214,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1215,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1216,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1217,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1218,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1219,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1220,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1221,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1222,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1223,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1224,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1225,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1226,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1227,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1228,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1229,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1230,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1231,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1232,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1233,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1234,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1235,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1236,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1237,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1238,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1239,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1240,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1241,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1242,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1243,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1244,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1245,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1246,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}, {
									"case":	1247,
									"scores":	[-12.439244715245831, -12.649473135245831, -12.649473135245831, -14.861040028545832, -13.533150028545831, -12.898074028545832, -13.020529935245833, -14.319683165245831, -14.186865165245832, -14.275535275245831, -13.529389165245831, -13.529389165245831, -12.894313165245832, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -13.529389165245831, -12.983105535245832, -13.020529935245833]
								}]
						}, {
							"switch":	64,
							"types":	[[3], [2], [], [], [], [], [], [], [], [], [], [], [1], [], [], [], []],
							"begin_line":	565,
							"begin_column":	2,
							"end_line":	568,
							"end_column":	3,
							"patch_codes":	["if (__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    TIFFSetField(out, 259, compression);\nelse if (TIFFGetField(in, 259, &compression))\n    TIFFSetField(out, 259, compression);\n", "if ((compression != (uint16)-1) || __is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    TIFFSetField(out, 259, compression);\nelse if (TIFFGetField(in, 259, &compression))\n    TIFFSetField(out, 259, compression);\n", "if ((compression != (uint16)-1) && !__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    TIFFSetField(out, 259, compression);\nelse if (TIFFGetField(in, 259, &compression))\n    TIFFSetField(out, 259, compression);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-5.1564854109281448, -7.3071245799281463, -7.3071245799281463, -7.7705000739281456, -6.4418810739281458, -6.0823127889281459, -6.3126417309281457, -7.6182607109281459, -7.6917530109281458, -7.7113594109281465, -6.8636627109281463, -6.8636627109281463, -6.5040944259281464, -6.8636627109281463, -6.8636627109281463, -6.8636627109281463, -6.8636627109281463, -6.8636627109281463, -6.8636627109281463, -7.1155938309281463, -6.3126417309281457]
								}, {
									"case":	2,
									"scores":	[-3.2004773724281459, -5.3511165414281461, -5.3511165414281461, -5.8144920354281462, -4.4858730354281455, -4.1263047504281456, -4.3566336924281464, -5.6622526724281457, -5.7357449724281455, -5.7553513724281462, -4.907654672428146, -4.907654672428146, -4.5480863874281461, -4.907654672428146, -4.907654672428146, -4.907654672428146, -4.907654672428146, -4.907654672428146, -4.907654672428146, -5.1595857924281461, -4.3566336924281464]
								}, {
									"case":	3,
									"scores":	[-3.2004773724281459, -5.3511165414281461, -5.3511165414281461, -5.8144920354281462, -4.4858730354281455, -4.1263047504281456, -4.3566336924281464, -5.6622526724281457, -5.7357449724281455, -5.7553513724281462, -4.907654672428146, -4.907654672428146, -4.5480863874281461, -4.907654672428146, -4.907654672428146, -4.907654672428146, -4.907654672428146, -4.907654672428146, -4.907654672428146, -5.1595857924281461, -4.3566336924281464]
								}]
						}, {
							"switch":	65,
							"types":	[[], [], [1], [2], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	565,
							"begin_column":	2,
							"end_line":	568,
							"end_column":	3,
							"patch_codes":	["if (!__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)))\n    if (compression != (uint16)-1)\n        TIFFSetField(out, 259, compression);\n    else if (TIFFGetField(in, 259, &compression))\n        TIFFSetField(out, 259, compression);\n", "if (!__is_neg(\"\", \"L565\", 21, &(compression), sizeof (compression), &(in), sizeof (in), &(out), sizeof (out), &(samplesperpixel), sizeof (samplesperpixel), &(bitspersample), sizeof (bitspersample), &(length), sizeof (length), &(width), sizeof (width), &(jpegcolormode), sizeof (jpegcolormode), &(fillorder), sizeof (fillorder), &(orientation), sizeof (orientation), &(outtiled), sizeof (outtiled), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength), &(rowsperstrip), sizeof (rowsperstrip), &(config), sizeof (config), &(quality), sizeof (quality), &(predictor), sizeof (predictor), &(g3opts), sizeof (g3opts), &(pageNum), sizeof (pageNum), &(p), sizeof (p), &(cf), sizeof (cf)) && (compression != (uint16)-1))\n    TIFFSetField(out, 259, compression);\nelse if (TIFFGetField(in, 259, &compression))\n    TIFFSetField(out, 259, compression);\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.3974853752458314, -9.54812454424583, -9.54812454424583, -7.25120003824583, -8.68288103824583, -8.32331275324583, -8.55364169524583, -7.8233096752458318, -9.93275297524583, -9.95235937524583, -9.10466267524583, -9.10466267524583, -8.74509439024583, -9.10466267524583, -9.10466267524583, -9.10466267524583, -9.10466267524583, -9.10466267524583, -9.10466267524583, -9.35659379524583, -8.55364169524583]
								}, {
									"case":	2,
									"scores":	[-7.0183499022458316, -9.16898907124583, -9.16898907124583, -9.63236456524583, -8.30374556524583, -7.9441772802458317, -8.17450622224583, -9.48012520224583, -9.55361750224583, -9.57322390224583, -8.72552720224583, -8.72552720224583, -8.36595891724583, -8.72552720224583, -8.72552720224583, -8.72552720224583, -8.72552720224583, -8.72552720224583, -8.72552720224583, -8.97745832224583, -8.17450622224583]
								}]
						}]
				}, {
					"line":	745,
					"switches":	[{
							"switch":	66,
							"types":	[[], [], [], [], [1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247], [1, 2, 3], [], [], [], [1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], [], [], [], [], [], []],
							"begin_line":	746,
							"begin_column":	0,
							"end_line":	746,
							"end_column":	0,
							"patch_codes":	["memset(&p->count, 0, sizeof (*(&p->count)))", "memset(&p->tag, 0, sizeof (*(&p->tag)))", "memset(&p->type, 0, sizeof (*(&p->type)))", "TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 256, width)", "TIFFSetField((in), 257, length)", "TIFFSetField((in), 258, bitspersample)", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 262, samplesperpixel == 1 ? 32844 : 32845)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 277, samplesperpixel)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 256, width)", "TIFFSetField((out), 257, length)", "TIFFSetField((out), 258, bitspersample)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 262, samplesperpixel == 1 ? 32844 : 32845)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 277, samplesperpixel)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "cf = (cf)", "cf = pickCopyFunc((in), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((out), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (in), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (out), bitspersample, samplesperpixel)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (2)", "comma = (256)", "comma = (257)", "comma = (258)", "comma = (259)", "comma = (262)", "comma = (266)", "comma = (274)", "comma = (277)", "comma = (278)", "comma = (284)", "comma = (292)", "comma = (293)", "comma = (297)", "comma = (3)", "comma = (301)", "comma = (317)", "comma = (320)", "comma = (322)", "comma = (323)", "comma = (326)", "comma = (327)", "comma = (328)", "comma = (32844)", "comma = (32845)", "comma = (32946)", "comma = (333)", "comma = (334)", "comma = (34661)", "comma = (34675)", "comma = (34676)", "comma = (34677)", "comma = (34908)", "comma = (34909)", "comma = (34910)", "comma = (34911)", "comma = (4)", "comma = (5)", "comma = (6)", "comma = (65537)", "comma = (65538)", "comma = (7)", "comma = (8)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (2)", "compression = (256)", "compression = (257)", "compression = (258)", "compression = (259)", "compression = (262)", "compression = (266)", "compression = (274)", "compression = (277)", "compression = (278)", "compression = (284)", "compression = (292)", "compression = (293)", "compression = (297)", "compression = (3)", "compression = (301)", "compression = (317)", "compression = (320)", "compression = (322)", "compression = (323)", "compression = (326)", "compression = (327)", "compression = (328)", "compression = (32844)", "compression = (32845)", "compression = (32946)", "compression = (333)", "compression = (334)", "compression = (34661)", "compression = (34675)", "compression = (34676)", "compression = (34677)", "compression = (34908)", "compression = (34909)", "compression = (34910)", "compression = (34911)", "compression = (4)", "compression = (5)", "compression = (6)", "compression = (65537)", "compression = (65538)", "compression = (7)", "compression = (8)", "compression = (bitspersample)", "compression = (samplesperpixel)", "config = (-1)", "config = (0)", "config = (1)", "config = (2)", "config = (256)", "config = (257)", "config = (258)", "config = (259)", "config = (262)", "config = (266)", "config = (274)", "config = (277)", "config = (278)", "config = (284)", "config = (292)", "config = (293)", "config = (297)", "config = (3)", "config = (301)", "config = (317)", "config = (320)", "config = (322)", "config = (323)", "config = (326)", "config = (327)", "config = (328)", "config = (32844)", "config = (32845)", "config = (32946)", "config = (333)", "config = (334)", "config = (34661)", "config = (34675)", "config = (34676)", "config = (34677)", "config = (34908)", "config = (34909)", "config = (34910)", "config = (34911)", "config = (4)", "config = (5)", "config = (6)", "config = (65537)", "config = (65538)", "config = (7)", "config = (8)", "config = (bitspersample)", "config = (samplesperpixel)", "cpTag((in), out, 262, 1, TIFF_SHORT)", "cpTag((in), out, 266, 1, TIFF_SHORT)", "cpTag((in), out, 293, 1, TIFF_LONG)", "cpTag((in), out, 301, 4, TIFF_SHORT)", "cpTag((in), out, 320, 4, TIFF_SHORT)", "cpTag((in), out, 326, 1, TIFF_LONG)", "cpTag((in), out, 327, 1, TIFF_LONG)", "cpTag((in), out, 328, 1, TIFF_LONG)", "cpTag((in), out, 34908, 1, TIFF_LONG)", "cpTag((in), out, 34909, 1, TIFF_ASCII)", "cpTag((in), out, 34910, 1, TIFF_LONG)", "cpTag((in), out, 34911, 1, TIFF_ASCII)", "cpTag((in), out, p->tag, p->count, p->type)", "cpTag((out), out, 262, 1, TIFF_SHORT)", "cpTag((out), out, 266, 1, TIFF_SHORT)", "cpTag((out), out, 293, 1, TIFF_LONG)", "cpTag((out), out, 301, 4, TIFF_SHORT)", "cpTag((out), out, 320, 4, TIFF_SHORT)", "cpTag((out), out, 326, 1, TIFF_LONG)", "cpTag((out), out, 327, 1, TIFF_LONG)", "cpTag((out), out, 328, 1, TIFF_LONG)", "cpTag((out), out, 34908, 1, TIFF_LONG)", "cpTag((out), out, 34909, 1, TIFF_ASCII)", "cpTag((out), out, 34910, 1, TIFF_LONG)", "cpTag((out), out, 34911, 1, TIFF_ASCII)", "cpTag((out), out, p->tag, p->count, p->type)", "cpTag(in, (in), 262, 1, TIFF_SHORT)", "cpTag(in, (in), 266, 1, TIFF_SHORT)", "cpTag(in, (in), 293, 1, TIFF_LONG)", "cpTag(in, (in), 301, 4, TIFF_SHORT)", "cpTag(in, (in), 320, 4, TIFF_SHORT)", "cpTag(in, (in), 326, 1, TIFF_LONG)", "cpTag(in, (in), 327, 1, TIFF_LONG)", "cpTag(in, (in), 328, 1, TIFF_LONG)", "cpTag(in, (in), 34908, 1, TIFF_LONG)", "cpTag(in, (in), 34909, 1, TIFF_ASCII)", "cpTag(in, (in), 34910, 1, TIFF_LONG)", "cpTag(in, (in), 34911, 1, TIFF_ASCII)", "cpTag(in, (in), p->tag, p->count, p->type)", "cpTag(in, (out), 262, 1, TIFF_SHORT)", "cpTag(in, (out), 266, 1, TIFF_SHORT)", "cpTag(in, (out), 293, 1, TIFF_LONG)", "cpTag(in, (out), 301, 4, TIFF_SHORT)", "cpTag(in, (out), 320, 4, TIFF_SHORT)", "cpTag(in, (out), 326, 1, TIFF_LONG)", "cpTag(in, (out), 327, 1, TIFF_LONG)", "cpTag(in, (out), 328, 1, TIFF_LONG)", "cpTag(in, (out), 34908, 1, TIFF_LONG)", "cpTag(in, (out), 34909, 1, TIFF_ASCII)", "cpTag(in, (out), 34910, 1, TIFF_LONG)", "cpTag(in, (out), 34911, 1, TIFF_ASCII)", "cpTag(in, (out), p->tag, p->count, p->type)", "cpTag(in, out, (p)->tag, p->count, p->type)", "cpTag(in, out, 262, 1, (TIFF_ASCII))", "cpTag(in, out, 262, 1, (TIFF_BYTE))", "cpTag(in, out, 262, 1, (TIFF_DOUBLE))", "cpTag(in, out, 262, 1, (TIFF_FLOAT))", "cpTag(in, out, 262, 1, (TIFF_IFD))", "cpTag(in, out, 262, 1, (TIFF_IFD8))", "cpTag(in, out, 262, 1, (TIFF_LONG))", "cpTag(in, out, 262, 1, (TIFF_LONG8))", "cpTag(in, out, 262, 1, (TIFF_NOTYPE))", "cpTag(in, out, 262, 1, (TIFF_RATIONAL))", "cpTag(in, out, 262, 1, (TIFF_SBYTE))", "cpTag(in, out, 262, 1, (TIFF_SHORT))", "cpTag(in, out, 262, 1, (TIFF_SLONG))", "cpTag(in, out, 262, 1, (TIFF_SLONG8))", "cpTag(in, out, 262, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 262, 1, (TIFF_SSHORT))", "cpTag(in, out, 262, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 266, 1, (TIFF_ASCII))", "cpTag(in, out, 266, 1, (TIFF_BYTE))", "cpTag(in, out, 266, 1, (TIFF_DOUBLE))", "cpTag(in, out, 266, 1, (TIFF_FLOAT))", "cpTag(in, out, 266, 1, (TIFF_IFD))", "cpTag(in, out, 266, 1, (TIFF_IFD8))", "cpTag(in, out, 266, 1, (TIFF_LONG))", "cpTag(in, out, 266, 1, (TIFF_LONG8))", "cpTag(in, out, 266, 1, (TIFF_NOTYPE))", "cpTag(in, out, 266, 1, (TIFF_RATIONAL))", "cpTag(in, out, 266, 1, (TIFF_SBYTE))", "cpTag(in, out, 266, 1, (TIFF_SHORT))", "cpTag(in, out, 266, 1, (TIFF_SLONG))", "cpTag(in, out, 266, 1, (TIFF_SLONG8))", "cpTag(in, out, 266, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 266, 1, (TIFF_SSHORT))", "cpTag(in, out, 266, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 293, 1, (TIFF_ASCII))", "cpTag(in, out, 293, 1, (TIFF_BYTE))", "cpTag(in, out, 293, 1, (TIFF_DOUBLE))", "cpTag(in, out, 293, 1, (TIFF_FLOAT))", "cpTag(in, out, 293, 1, (TIFF_IFD))", "cpTag(in, out, 293, 1, (TIFF_IFD8))", "cpTag(in, out, 293, 1, (TIFF_LONG))", "cpTag(in, out, 293, 1, (TIFF_LONG8))", "cpTag(in, out, 293, 1, (TIFF_NOTYPE))", "cpTag(in, out, 293, 1, (TIFF_RATIONAL))", "cpTag(in, out, 293, 1, (TIFF_SBYTE))", "cpTag(in, out, 293, 1, (TIFF_SHORT))", "cpTag(in, out, 293, 1, (TIFF_SLONG))", "cpTag(in, out, 293, 1, (TIFF_SLONG8))", "cpTag(in, out, 293, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 293, 1, (TIFF_SSHORT))", "cpTag(in, out, 293, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 301, 4, (TIFF_ASCII))", "cpTag(in, out, 301, 4, (TIFF_BYTE))", "cpTag(in, out, 301, 4, (TIFF_DOUBLE))", "cpTag(in, out, 301, 4, (TIFF_FLOAT))", "cpTag(in, out, 301, 4, (TIFF_IFD))", "cpTag(in, out, 301, 4, (TIFF_IFD8))", "cpTag(in, out, 301, 4, (TIFF_LONG))", "cpTag(in, out, 301, 4, (TIFF_LONG8))", "cpTag(in, out, 301, 4, (TIFF_NOTYPE))", "cpTag(in, out, 301, 4, (TIFF_RATIONAL))", "cpTag(in, out, 301, 4, (TIFF_SBYTE))", "cpTag(in, out, 301, 4, (TIFF_SHORT))", "cpTag(in, out, 301, 4, (TIFF_SLONG))", "cpTag(in, out, 301, 4, (TIFF_SLONG8))", "cpTag(in, out, 301, 4, (TIFF_SRATIONAL))", "cpTag(in, out, 301, 4, (TIFF_SSHORT))", "cpTag(in, out, 301, 4, (TIFF_UNDEFINED))", "cpTag(in, out, 320, 4, (TIFF_ASCII))", "cpTag(in, out, 320, 4, (TIFF_BYTE))", "cpTag(in, out, 320, 4, (TIFF_DOUBLE))", "cpTag(in, out, 320, 4, (TIFF_FLOAT))", "cpTag(in, out, 320, 4, (TIFF_IFD))", "cpTag(in, out, 320, 4, (TIFF_IFD8))", "cpTag(in, out, 320, 4, (TIFF_LONG))", "cpTag(in, out, 320, 4, (TIFF_LONG8))", "cpTag(in, out, 320, 4, (TIFF_NOTYPE))", "cpTag(in, out, 320, 4, (TIFF_RATIONAL))", "cpTag(in, out, 320, 4, (TIFF_SBYTE))", "cpTag(in, out, 320, 4, (TIFF_SHORT))", "cpTag(in, out, 320, 4, (TIFF_SLONG))", "cpTag(in, out, 320, 4, (TIFF_SLONG8))", "cpTag(in, out, 320, 4, (TIFF_SRATIONAL))", "cpTag(in, out, 320, 4, (TIFF_SSHORT))", "cpTag(in, out, 320, 4, (TIFF_UNDEFINED))", "cpTag(in, out, 326, 1, (TIFF_ASCII))", "cpTag(in, out, 326, 1, (TIFF_BYTE))", "cpTag(in, out, 326, 1, (TIFF_DOUBLE))", "cpTag(in, out, 326, 1, (TIFF_FLOAT))", "cpTag(in, out, 326, 1, (TIFF_IFD))", "cpTag(in, out, 326, 1, (TIFF_IFD8))", "cpTag(in, out, 326, 1, (TIFF_LONG))", "cpTag(in, out, 326, 1, (TIFF_LONG8))", "cpTag(in, out, 326, 1, (TIFF_NOTYPE))", "cpTag(in, out, 326, 1, (TIFF_RATIONAL))", "cpTag(in, out, 326, 1, (TIFF_SBYTE))", "cpTag(in, out, 326, 1, (TIFF_SHORT))", "cpTag(in, out, 326, 1, (TIFF_SLONG))", "cpTag(in, out, 326, 1, (TIFF_SLONG8))", "cpTag(in, out, 326, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 326, 1, (TIFF_SSHORT))", "cpTag(in, out, 326, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 327, 1, (TIFF_ASCII))", "cpTag(in, out, 327, 1, (TIFF_BYTE))", "cpTag(in, out, 327, 1, (TIFF_DOUBLE))", "cpTag(in, out, 327, 1, (TIFF_FLOAT))", "cpTag(in, out, 327, 1, (TIFF_IFD))", "cpTag(in, out, 327, 1, (TIFF_IFD8))", "cpTag(in, out, 327, 1, (TIFF_LONG))", "cpTag(in, out, 327, 1, (TIFF_LONG8))", "cpTag(in, out, 327, 1, (TIFF_NOTYPE))", "cpTag(in, out, 327, 1, (TIFF_RATIONAL))", "cpTag(in, out, 327, 1, (TIFF_SBYTE))", "cpTag(in, out, 327, 1, (TIFF_SHORT))", "cpTag(in, out, 327, 1, (TIFF_SLONG))", "cpTag(in, out, 327, 1, (TIFF_SLONG8))", "cpTag(in, out, 327, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 327, 1, (TIFF_SSHORT))", "cpTag(in, out, 327, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 328, 1, (TIFF_ASCII))", "cpTag(in, out, 328, 1, (TIFF_BYTE))", "cpTag(in, out, 328, 1, (TIFF_DOUBLE))", "cpTag(in, out, 328, 1, (TIFF_FLOAT))", "cpTag(in, out, 328, 1, (TIFF_IFD))", "cpTag(in, out, 328, 1, (TIFF_IFD8))", "cpTag(in, out, 328, 1, (TIFF_LONG))", "cpTag(in, out, 328, 1, (TIFF_LONG8))", "cpTag(in, out, 328, 1, (TIFF_NOTYPE))", "cpTag(in, out, 328, 1, (TIFF_RATIONAL))", "cpTag(in, out, 328, 1, (TIFF_SBYTE))", "cpTag(in, out, 328, 1, (TIFF_SHORT))", "cpTag(in, out, 328, 1, (TIFF_SLONG))", "cpTag(in, out, 328, 1, (TIFF_SLONG8))", "cpTag(in, out, 328, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 328, 1, (TIFF_SSHORT))", "cpTag(in, out, 328, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 34908, 1, (TIFF_ASCII))", "cpTag(in, out, 34908, 1, (TIFF_BYTE))", "cpTag(in, out, 34908, 1, (TIFF_DOUBLE))", "cpTag(in, out, 34908, 1, (TIFF_FLOAT))", "cpTag(in, out, 34908, 1, (TIFF_IFD))", "cpTag(in, out, 34908, 1, (TIFF_IFD8))", "cpTag(in, out, 34908, 1, (TIFF_LONG))", "cpTag(in, out, 34908, 1, (TIFF_LONG8))", "cpTag(in, out, 34908, 1, (TIFF_NOTYPE))", "cpTag(in, out, 34908, 1, (TIFF_RATIONAL))", "cpTag(in, out, 34908, 1, (TIFF_SBYTE))", "cpTag(in, out, 34908, 1, (TIFF_SHORT))", "cpTag(in, out, 34908, 1, (TIFF_SLONG))", "cpTag(in, out, 34908, 1, (TIFF_SLONG8))", "cpTag(in, out, 34908, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 34908, 1, (TIFF_SSHORT))", "cpTag(in, out, 34908, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 34909, 1, (TIFF_ASCII))", "cpTag(in, out, 34909, 1, (TIFF_BYTE))", "cpTag(in, out, 34909, 1, (TIFF_DOUBLE))", "cpTag(in, out, 34909, 1, (TIFF_FLOAT))", "cpTag(in, out, 34909, 1, (TIFF_IFD))", "cpTag(in, out, 34909, 1, (TIFF_IFD8))", "cpTag(in, out, 34909, 1, (TIFF_LONG))", "cpTag(in, out, 34909, 1, (TIFF_LONG8))", "cpTag(in, out, 34909, 1, (TIFF_NOTYPE))", "cpTag(in, out, 34909, 1, (TIFF_RATIONAL))", "cpTag(in, out, 34909, 1, (TIFF_SBYTE))", "cpTag(in, out, 34909, 1, (TIFF_SHORT))", "cpTag(in, out, 34909, 1, (TIFF_SLONG))", "cpTag(in, out, 34909, 1, (TIFF_SLONG8))", "cpTag(in, out, 34909, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 34909, 1, (TIFF_SSHORT))", "cpTag(in, out, 34909, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 34910, 1, (TIFF_ASCII))", "cpTag(in, out, 34910, 1, (TIFF_BYTE))", "cpTag(in, out, 34910, 1, (TIFF_DOUBLE))", "cpTag(in, out, 34910, 1, (TIFF_FLOAT))", "cpTag(in, out, 34910, 1, (TIFF_IFD))", "cpTag(in, out, 34910, 1, (TIFF_IFD8))", "cpTag(in, out, 34910, 1, (TIFF_LONG))", "cpTag(in, out, 34910, 1, (TIFF_LONG8))", "cpTag(in, out, 34910, 1, (TIFF_NOTYPE))", "cpTag(in, out, 34910, 1, (TIFF_RATIONAL))", "cpTag(in, out, 34910, 1, (TIFF_SBYTE))", "cpTag(in, out, 34910, 1, (TIFF_SHORT))", "cpTag(in, out, 34910, 1, (TIFF_SLONG))", "cpTag(in, out, 34910, 1, (TIFF_SLONG8))", "cpTag(in, out, 34910, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 34910, 1, (TIFF_SSHORT))", "cpTag(in, out, 34910, 1, (TIFF_UNDEFINED))", "cpTag(in, out, 34911, 1, (TIFF_ASCII))", "cpTag(in, out, 34911, 1, (TIFF_BYTE))", "cpTag(in, out, 34911, 1, (TIFF_DOUBLE))", "cpTag(in, out, 34911, 1, (TIFF_FLOAT))", "cpTag(in, out, 34911, 1, (TIFF_IFD))", "cpTag(in, out, 34911, 1, (TIFF_IFD8))", "cpTag(in, out, 34911, 1, (TIFF_LONG))", "cpTag(in, out, 34911, 1, (TIFF_LONG8))", "cpTag(in, out, 34911, 1, (TIFF_NOTYPE))", "cpTag(in, out, 34911, 1, (TIFF_RATIONAL))", "cpTag(in, out, 34911, 1, (TIFF_SBYTE))", "cpTag(in, out, 34911, 1, (TIFF_SHORT))", "cpTag(in, out, 34911, 1, (TIFF_SLONG))", "cpTag(in, out, 34911, 1, (TIFF_SLONG8))", "cpTag(in, out, 34911, 1, (TIFF_SRATIONAL))", "cpTag(in, out, 34911, 1, (TIFF_SSHORT))", "cpTag(in, out, 34911, 1, (TIFF_UNDEFINED))", "cpTag(in, out, p->tag, (p)->count, p->type)", "cpTag(in, out, p->tag, p->count, (p)->type)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (2)", "defcompression = (256)", "defcompression = (257)", "defcompression = (258)", "defcompression = (259)", "defcompression = (262)", "defcompression = (266)", "defcompression = (274)", "defcompression = (277)", "defcompression = (278)", "defcompression = (284)", "defcompression = (292)", "defcompression = (293)", "defcompression = (297)", "defcompression = (3)", "defcompression = (301)", "defcompression = (317)", "defcompression = (320)", "defcompression = (322)", "defcompression = (323)", "defcompression = (326)", "defcompression = (327)", "defcompression = (328)", "defcompression = (32844)", "defcompression = (32845)", "defcompression = (32946)", "defcompression = (333)", "defcompression = (334)", "defcompression = (34661)", "defcompression = (34675)", "defcompression = (34676)", "defcompression = (34677)", "defcompression = (34908)", "defcompression = (34909)", "defcompression = (34910)", "defcompression = (34911)", "defcompression = (4)", "defcompression = (5)", "defcompression = (6)", "defcompression = (65537)", "defcompression = (65538)", "defcompression = (7)", "defcompression = (8)", "defcompression = (bitspersample)", "defcompression = (samplesperpixel)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (2)", "defg3opts = (256)", "defg3opts = (257)", "defg3opts = (258)", "defg3opts = (259)", "defg3opts = (262)", "defg3opts = (266)", "defg3opts = (274)", "defg3opts = (277)", "defg3opts = (278)", "defg3opts = (284)", "defg3opts = (292)", "defg3opts = (293)", "defg3opts = (297)", "defg3opts = (3)", "defg3opts = (301)", "defg3opts = (317)", "defg3opts = (320)", "defg3opts = (322)", "defg3opts = (323)", "defg3opts = (326)", "defg3opts = (327)", "defg3opts = (328)", "defg3opts = (32844)", "defg3opts = (32845)", "defg3opts = (32946)", "defg3opts = (333)", "defg3opts = (334)", "defg3opts = (34661)", "defg3opts = (34675)", "defg3opts = (34676)", "defg3opts = (34677)", "defg3opts = (34908)", "defg3opts = (34909)", "defg3opts = (34910)", "defg3opts = (34911)", "defg3opts = (4)", "defg3opts = (5)", "defg3opts = (6)", "defg3opts = (65537)", "defg3opts = (65538)", "defg3opts = (7)", "defg3opts = (8)", "defg3opts = (length)", "defg3opts = (width)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (2)", "defpredictor = (256)", "defpredictor = (257)", "defpredictor = (258)", "defpredictor = (259)", "defpredictor = (262)", "defpredictor = (266)", "defpredictor = (274)", "defpredictor = (277)", "defpredictor = (278)", "defpredictor = (284)", "defpredictor = (292)", "defpredictor = (293)", "defpredictor = (297)", "defpredictor = (3)", "defpredictor = (301)", "defpredictor = (317)", "defpredictor = (320)", "defpredictor = (322)", "defpredictor = (323)", "defpredictor = (326)", "defpredictor = (327)", "defpredictor = (328)", "defpredictor = (32844)", "defpredictor = (32845)", "defpredictor = (32946)", "defpredictor = (333)", "defpredictor = (334)", "defpredictor = (34661)", "defpredictor = (34675)", "defpredictor = (34676)", "defpredictor = (34677)", "defpredictor = (34908)", "defpredictor = (34909)", "defpredictor = (34910)", "defpredictor = (34911)", "defpredictor = (4)", "defpredictor = (5)", "defpredictor = (6)", "defpredictor = (65537)", "defpredictor = (65538)", "defpredictor = (7)", "defpredictor = (8)", "defpredictor = (bitspersample)", "defpredictor = (samplesperpixel)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (2)", "fillorder = (256)", "fillorder = (257)", "fillorder = (258)", "fillorder = (259)", "fillorder = (262)", "fillorder = (266)", "fillorder = (274)", "fillorder = (277)", "fillorder = (278)", "fillorder = (284)", "fillorder = (292)", "fillorder = (293)", "fillorder = (297)", "fillorder = (3)", "fillorder = (301)", "fillorder = (317)", "fillorder = (320)", "fillorder = (322)", "fillorder = (323)", "fillorder = (326)", "fillorder = (327)", "fillorder = (328)", "fillorder = (32844)", "fillorder = (32845)", "fillorder = (32946)", "fillorder = (333)", "fillorder = (334)", "fillorder = (34661)", "fillorder = (34675)", "fillorder = (34676)", "fillorder = (34677)", "fillorder = (34908)", "fillorder = (34909)", "fillorder = (34910)", "fillorder = (34911)", "fillorder = (4)", "fillorder = (5)", "fillorder = (6)", "fillorder = (65537)", "fillorder = (65538)", "fillorder = (7)", "fillorder = (8)", "fillorder = (bitspersample)", "fillorder = (samplesperpixel)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (2)", "g3opts = (256)", "g3opts = (257)", "g3opts = (258)", "g3opts = (259)", "g3opts = (262)", "g3opts = (266)", "g3opts = (274)", "g3opts = (277)", "g3opts = (278)", "g3opts = (284)", "g3opts = (292)", "g3opts = (293)", "g3opts = (297)", "g3opts = (3)", "g3opts = (301)", "g3opts = (317)", "g3opts = (320)", "g3opts = (322)", "g3opts = (323)", "g3opts = (326)", "g3opts = (327)", "g3opts = (328)", "g3opts = (32844)", "g3opts = (32845)", "g3opts = (32946)", "g3opts = (333)", "g3opts = (334)", "g3opts = (34661)", "g3opts = (34675)", "g3opts = (34676)", "g3opts = (34677)", "g3opts = (34908)", "g3opts = (34909)", "g3opts = (34910)", "g3opts = (34911)", "g3opts = (4)", "g3opts = (5)", "g3opts = (6)", "g3opts = (65537)", "g3opts = (65538)", "g3opts = (7)", "g3opts = (8)", "g3opts = (length)", "g3opts = (width)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (2)", "jpegcolormode = (256)", "jpegcolormode = (257)", "jpegcolormode = (258)", "jpegcolormode = (259)", "jpegcolormode = (262)", "jpegcolormode = (266)", "jpegcolormode = (274)", "jpegcolormode = (277)", "jpegcolormode = (278)", "jpegcolormode = (284)", "jpegcolormode = (292)", "jpegcolormode = (293)", "jpegcolormode = (297)", "jpegcolormode = (3)", "jpegcolormode = (301)", "jpegcolormode = (317)", "jpegcolormode = (320)", "jpegcolormode = (322)", "jpegcolormode = (323)", "jpegcolormode = (326)", "jpegcolormode = (327)", "jpegcolormode = (328)", "jpegcolormode = (32844)", "jpegcolormode = (32845)", "jpegcolormode = (32946)", "jpegcolormode = (333)", "jpegcolormode = (334)", "jpegcolormode = (34661)", "jpegcolormode = (34675)", "jpegcolormode = (34676)", "jpegcolormode = (34677)", "jpegcolormode = (34908)", "jpegcolormode = (34909)", "jpegcolormode = (34910)", "jpegcolormode = (34911)", "jpegcolormode = (4)", "jpegcolormode = (5)", "jpegcolormode = (6)", "jpegcolormode = (65537)", "jpegcolormode = (65538)", "jpegcolormode = (7)", "jpegcolormode = (8)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (2)", "orientation = (256)", "orientation = (257)", "orientation = (258)", "orientation = (259)", "orientation = (262)", "orientation = (266)", "orientation = (274)", "orientation = (277)", "orientation = (278)", "orientation = (284)", "orientation = (292)", "orientation = (293)", "orientation = (297)", "orientation = (3)", "orientation = (301)", "orientation = (317)", "orientation = (320)", "orientation = (322)", "orientation = (323)", "orientation = (326)", "orientation = (327)", "orientation = (328)", "orientation = (32844)", "orientation = (32845)", "orientation = (32946)", "orientation = (333)", "orientation = (334)", "orientation = (34661)", "orientation = (34675)", "orientation = (34676)", "orientation = (34677)", "orientation = (34908)", "orientation = (34909)", "orientation = (34910)", "orientation = (34911)", "orientation = (4)", "orientation = (5)", "orientation = (6)", "orientation = (65537)", "orientation = (65538)", "orientation = (7)", "orientation = (8)", "orientation = (bitspersample)", "orientation = (samplesperpixel)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (2)", "outtiled = (256)", "outtiled = (257)", "outtiled = (258)", "outtiled = (259)", "outtiled = (262)", "outtiled = (266)", "outtiled = (274)", "outtiled = (277)", "outtiled = (278)", "outtiled = (284)", "outtiled = (292)", "outtiled = (293)", "outtiled = (297)", "outtiled = (3)", "outtiled = (301)", "outtiled = (317)", "outtiled = (320)", "outtiled = (322)", "outtiled = (323)", "outtiled = (326)", "outtiled = (327)", "outtiled = (328)", "outtiled = (32844)", "outtiled = (32845)", "outtiled = (32946)", "outtiled = (333)", "outtiled = (334)", "outtiled = (34661)", "outtiled = (34675)", "outtiled = (34676)", "outtiled = (34677)", "outtiled = (34908)", "outtiled = (34909)", "outtiled = (34910)", "outtiled = (34911)", "outtiled = (4)", "outtiled = (5)", "outtiled = (6)", "outtiled = (65537)", "outtiled = (65538)", "outtiled = (7)", "outtiled = (8)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (2)", "pageNum = (256)", "pageNum = (257)", "pageNum = (258)", "pageNum = (259)", "pageNum = (262)", "pageNum = (266)", "pageNum = (274)", "pageNum = (277)", "pageNum = (278)", "pageNum = (284)", "pageNum = (292)", "pageNum = (293)", "pageNum = (297)", "pageNum = (3)", "pageNum = (301)", "pageNum = (317)", "pageNum = (320)", "pageNum = (322)", "pageNum = (323)", "pageNum = (326)", "pageNum = (327)", "pageNum = (328)", "pageNum = (32844)", "pageNum = (32845)", "pageNum = (32946)", "pageNum = (333)", "pageNum = (334)", "pageNum = (34661)", "pageNum = (34675)", "pageNum = (34676)", "pageNum = (34677)", "pageNum = (34908)", "pageNum = (34909)", "pageNum = (34910)", "pageNum = (34911)", "pageNum = (4)", "pageNum = (5)", "pageNum = (6)", "pageNum = (65537)", "pageNum = (65538)", "pageNum = (7)", "pageNum = (8)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (2)", "predictor = (256)", "predictor = (257)", "predictor = (258)", "predictor = (259)", "predictor = (262)", "predictor = (266)", "predictor = (274)", "predictor = (277)", "predictor = (278)", "predictor = (284)", "predictor = (292)", "predictor = (293)", "predictor = (297)", "predictor = (3)", "predictor = (301)", "predictor = (317)", "predictor = (320)", "predictor = (322)", "predictor = (323)", "predictor = (326)", "predictor = (327)", "predictor = (328)", "predictor = (32844)", "predictor = (32845)", "predictor = (32946)", "predictor = (333)", "predictor = (334)", "predictor = (34661)", "predictor = (34675)", "predictor = (34676)", "predictor = (34677)", "predictor = (34908)", "predictor = (34909)", "predictor = (34910)", "predictor = (34911)", "predictor = (4)", "predictor = (5)", "predictor = (6)", "predictor = (65537)", "predictor = (65538)", "predictor = (7)", "predictor = (8)", "predictor = (bitspersample)", "predictor = (samplesperpixel)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (2)", "quality = (256)", "quality = (257)", "quality = (258)", "quality = (259)", "quality = (262)", "quality = (266)", "quality = (274)", "quality = (277)", "quality = (278)", "quality = (284)", "quality = (292)", "quality = (293)", "quality = (297)", "quality = (3)", "quality = (301)", "quality = (317)", "quality = (320)", "quality = (322)", "quality = (323)", "quality = (326)", "quality = (327)", "quality = (328)", "quality = (32844)", "quality = (32845)", "quality = (32946)", "quality = (333)", "quality = (334)", "quality = (34661)", "quality = (34675)", "quality = (34676)", "quality = (34677)", "quality = (34908)", "quality = (34909)", "quality = (34910)", "quality = (34911)", "quality = (4)", "quality = (5)", "quality = (6)", "quality = (65537)", "quality = (65538)", "quality = (7)", "quality = (8)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (2)", "rowsperstrip = (256)", "rowsperstrip = (257)", "rowsperstrip = (258)", "rowsperstrip = (259)", "rowsperstrip = (262)", "rowsperstrip = (266)", "rowsperstrip = (274)", "rowsperstrip = (277)", "rowsperstrip = (278)", "rowsperstrip = (284)", "rowsperstrip = (292)", "rowsperstrip = (293)", "rowsperstrip = (297)", "rowsperstrip = (3)", "rowsperstrip = (301)", "rowsperstrip = (317)", "rowsperstrip = (320)", "rowsperstrip = (322)", "rowsperstrip = (323)", "rowsperstrip = (326)", "rowsperstrip = (327)", "rowsperstrip = (328)", "rowsperstrip = (32844)", "rowsperstrip = (32845)", "rowsperstrip = (32946)", "rowsperstrip = (333)", "rowsperstrip = (334)", "rowsperstrip = (34661)", "rowsperstrip = (34675)", "rowsperstrip = (34676)", "rowsperstrip = (34677)", "rowsperstrip = (34908)", "rowsperstrip = (34909)", "rowsperstrip = (34910)", "rowsperstrip = (34911)", "rowsperstrip = (4)", "rowsperstrip = (5)", "rowsperstrip = (6)", "rowsperstrip = (65537)", "rowsperstrip = (65538)", "rowsperstrip = (7)", "rowsperstrip = (8)", "rowsperstrip = (length)", "rowsperstrip = (width)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (2)", "tilelength = (256)", "tilelength = (257)", "tilelength = (258)", "tilelength = (259)", "tilelength = (262)", "tilelength = (266)", "tilelength = (274)", "tilelength = (277)", "tilelength = (278)", "tilelength = (284)", "tilelength = (292)", "tilelength = (293)", "tilelength = (297)", "tilelength = (3)", "tilelength = (301)", "tilelength = (317)", "tilelength = (320)", "tilelength = (322)", "tilelength = (323)", "tilelength = (326)", "tilelength = (327)", "tilelength = (328)", "tilelength = (32844)", "tilelength = (32845)", "tilelength = (32946)", "tilelength = (333)", "tilelength = (334)", "tilelength = (34661)", "tilelength = (34675)", "tilelength = (34676)", "tilelength = (34677)", "tilelength = (34908)", "tilelength = (34909)", "tilelength = (34910)", "tilelength = (34911)", "tilelength = (4)", "tilelength = (5)", "tilelength = (6)", "tilelength = (65537)", "tilelength = (65538)", "tilelength = (7)", "tilelength = (8)", "tilelength = (length)", "tilelength = (width)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (2)", "tilewidth = (256)", "tilewidth = (257)", "tilewidth = (258)", "tilewidth = (259)", "tilewidth = (262)", "tilewidth = (266)", "tilewidth = (274)", "tilewidth = (277)", "tilewidth = (278)", "tilewidth = (284)", "tilewidth = (292)", "tilewidth = (293)", "tilewidth = (297)", "tilewidth = (3)", "tilewidth = (301)", "tilewidth = (317)", "tilewidth = (320)", "tilewidth = (322)", "tilewidth = (323)", "tilewidth = (326)", "tilewidth = (327)", "tilewidth = (328)", "tilewidth = (32844)", "tilewidth = (32845)", "tilewidth = (32946)", "tilewidth = (333)", "tilewidth = (334)", "tilewidth = (34661)", "tilewidth = (34675)", "tilewidth = (34676)", "tilewidth = (34677)", "tilewidth = (34908)", "tilewidth = (34909)", "tilewidth = (34910)", "tilewidth = (34911)", "tilewidth = (4)", "tilewidth = (5)", "tilewidth = (6)", "tilewidth = (65537)", "tilewidth = (65538)", "tilewidth = (7)", "tilewidth = (8)", "tilewidth = (length)", "tilewidth = (width)", "TIFFDefaultTileSize(out, &tilewidth, &tilelength)", "TIFFGetField(in, 322, &tilewidth)", "TIFFGetField(in, 323, &tilelength)", "TIFFGetFieldDefaulted(in, 274, &orientation)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "TIFFSetField(in, 65538, 1)", "TIFFSetField(out, 256, width)", "TIFFSetField(out, 257, length)", "TIFFSetField(out, 258, bitspersample)", "TIFFSetField(out, 259, compression)", "TIFFSetField(out, 262, 2)", "TIFFSetField(out, 262, 6)", "TIFFSetField(out, 262, samplesperpixel == 1 ? 32844 : 32845)", "TIFFSetField(out, 266, fillorder)", "TIFFSetField(out, 274, orientation)", "TIFFSetField(out, 277, samplesperpixel)", "TIFFSetField(out, 278, rowsperstrip)", "TIFFSetField(out, 284, config)", "TIFFSetField(out, 292, g3opts)", "TIFFSetField(out, 297, pageNum++, 0)", "TIFFSetField(out, 317, predictor)", "TIFFSetField(out, 322, tilewidth)", "TIFFSetField(out, 323, tilelength)", "TIFFSetField(out, 65538, jpegcolormode)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "cf = pickCopyFunc(in, out, bitspersample, samplesperpixel)", "compression = defcompression", "cpTag(in, out, 262, 1, TIFF_SHORT)", "cpTag(in, out, 266, 1, TIFF_SHORT)", "cpTag(in, out, 293, 1, TIFF_LONG)", "cpTag(in, out, 301, 4, TIFF_SHORT)", "cpTag(in, out, 320, 4, TIFF_SHORT)", "cpTag(in, out, 326, 1, TIFF_LONG)", "cpTag(in, out, 327, 1, TIFF_LONG)", "cpTag(in, out, 328, 1, TIFF_LONG)", "cpTag(in, out, 34908, 1, TIFF_LONG)", "cpTag(in, out, 34909, 1, TIFF_ASCII)", "cpTag(in, out, 34910, 1, TIFF_LONG)", "cpTag(in, out, 34911, 1, TIFF_ASCII)", "cpTag(in, out, p->tag, p->count, p->type)", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "outtiled = TIFFIsTiled(in)", "pageNum = -1", "predictor = defpredictor", "rowsperstrip = TIFFDefaultStripSize(out, rowsperstrip)", "rowsperstrip = length", "usage()", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return -1;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 0;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 1;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 256;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 257;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 258;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 259;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 262;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 266;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 274;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 277;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 278;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 284;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 292;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 293;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 297;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 2;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 301;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 317;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 320;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 322;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 323;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 326;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 327;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 32844;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 32845;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 328;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 32946;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 333;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 334;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 34661;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 34675;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 34676;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 34677;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 34908;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 34909;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 34910;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 34911;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 3;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 4;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 5;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 65537;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 65538;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 6;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 7;\n", "if (__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    return 8;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.14445617623126]
								}, {
									"case":	2,
									"scores":	[-7.14445617623126]
								}, {
									"case":	3,
									"scores":	[-7.14445617623126]
								}, {
									"case":	4,
									"scores":	[-7.14445617623126]
								}, {
									"case":	5,
									"scores":	[-7.14445617623126]
								}, {
									"case":	6,
									"scores":	[-7.14445617623126]
								}, {
									"case":	7,
									"scores":	[-7.14445617623126]
								}, {
									"case":	8,
									"scores":	[-7.14445617623126]
								}, {
									"case":	9,
									"scores":	[-7.14445617623126]
								}, {
									"case":	10,
									"scores":	[-7.14445617623126]
								}, {
									"case":	11,
									"scores":	[-7.14445617623126]
								}, {
									"case":	12,
									"scores":	[-7.14445617623126]
								}, {
									"case":	13,
									"scores":	[-7.14445617623126]
								}, {
									"case":	14,
									"scores":	[-7.14445617623126]
								}, {
									"case":	15,
									"scores":	[-7.14445617623126]
								}, {
									"case":	16,
									"scores":	[-7.14445617623126]
								}, {
									"case":	17,
									"scores":	[-7.14445617623126]
								}, {
									"case":	18,
									"scores":	[-7.14445617623126]
								}, {
									"case":	19,
									"scores":	[-7.14445617623126]
								}, {
									"case":	20,
									"scores":	[-7.14445617623126]
								}, {
									"case":	21,
									"scores":	[-7.14445617623126]
								}, {
									"case":	22,
									"scores":	[-7.14445617623126]
								}, {
									"case":	23,
									"scores":	[-7.14445617623126]
								}, {
									"case":	24,
									"scores":	[-7.14445617623126]
								}, {
									"case":	25,
									"scores":	[-7.14445617623126]
								}, {
									"case":	26,
									"scores":	[-7.14445617623126]
								}, {
									"case":	27,
									"scores":	[-7.14445617623126]
								}, {
									"case":	28,
									"scores":	[-7.14445617623126]
								}, {
									"case":	29,
									"scores":	[-7.14445617623126]
								}, {
									"case":	30,
									"scores":	[-7.14445617623126]
								}, {
									"case":	31,
									"scores":	[-7.14445617623126]
								}, {
									"case":	32,
									"scores":	[-7.14445617623126]
								}, {
									"case":	33,
									"scores":	[-7.14445617623126]
								}, {
									"case":	34,
									"scores":	[-7.14445617623126]
								}, {
									"case":	35,
									"scores":	[-7.14445617623126]
								}, {
									"case":	36,
									"scores":	[-7.14445617623126]
								}, {
									"case":	37,
									"scores":	[-7.14445617623126]
								}, {
									"case":	38,
									"scores":	[-7.14445617623126]
								}, {
									"case":	39,
									"scores":	[-7.14445617623126]
								}, {
									"case":	40,
									"scores":	[-7.14445617623126]
								}, {
									"case":	41,
									"scores":	[-7.14445617623126]
								}, {
									"case":	42,
									"scores":	[-7.14445617623126]
								}, {
									"case":	43,
									"scores":	[-7.14445617623126]
								}, {
									"case":	44,
									"scores":	[-7.14445617623126]
								}, {
									"case":	45,
									"scores":	[-7.14445617623126]
								}, {
									"case":	46,
									"scores":	[-7.14445617623126]
								}, {
									"case":	47,
									"scores":	[-7.14445617623126]
								}, {
									"case":	48,
									"scores":	[-7.14445617623126]
								}, {
									"case":	49,
									"scores":	[-7.14445617623126]
								}, {
									"case":	50,
									"scores":	[-7.14445617623126]
								}, {
									"case":	51,
									"scores":	[-7.14445617623126]
								}, {
									"case":	52,
									"scores":	[-7.14445617623126]
								}, {
									"case":	53,
									"scores":	[-7.14445617623126]
								}, {
									"case":	54,
									"scores":	[-7.14445617623126]
								}, {
									"case":	55,
									"scores":	[-7.14445617623126]
								}, {
									"case":	56,
									"scores":	[-7.14445617623126]
								}, {
									"case":	57,
									"scores":	[-7.14445617623126]
								}, {
									"case":	58,
									"scores":	[-7.14445617623126]
								}, {
									"case":	59,
									"scores":	[-7.14445617623126]
								}, {
									"case":	60,
									"scores":	[-7.14445617623126]
								}, {
									"case":	61,
									"scores":	[-7.14445617623126]
								}, {
									"case":	62,
									"scores":	[-7.14445617623126]
								}, {
									"case":	63,
									"scores":	[-7.14445617623126]
								}, {
									"case":	64,
									"scores":	[-7.14445617623126]
								}, {
									"case":	65,
									"scores":	[-7.14445617623126]
								}, {
									"case":	66,
									"scores":	[-7.14445617623126]
								}, {
									"case":	67,
									"scores":	[-7.14445617623126]
								}, {
									"case":	68,
									"scores":	[-7.14445617623126]
								}, {
									"case":	69,
									"scores":	[-7.14445617623126]
								}, {
									"case":	70,
									"scores":	[-7.14445617623126]
								}, {
									"case":	71,
									"scores":	[-7.14445617623126]
								}, {
									"case":	72,
									"scores":	[-7.14445617623126]
								}, {
									"case":	73,
									"scores":	[-7.14445617623126]
								}, {
									"case":	74,
									"scores":	[-7.14445617623126]
								}, {
									"case":	75,
									"scores":	[-7.14445617623126]
								}, {
									"case":	76,
									"scores":	[-7.14445617623126]
								}, {
									"case":	77,
									"scores":	[-7.14445617623126]
								}, {
									"case":	78,
									"scores":	[-7.14445617623126]
								}, {
									"case":	79,
									"scores":	[-7.14445617623126]
								}, {
									"case":	80,
									"scores":	[-7.14445617623126]
								}, {
									"case":	81,
									"scores":	[-7.14445617623126]
								}, {
									"case":	82,
									"scores":	[-7.14445617623126]
								}, {
									"case":	83,
									"scores":	[-7.14445617623126]
								}, {
									"case":	84,
									"scores":	[-7.14445617623126]
								}, {
									"case":	85,
									"scores":	[-7.14445617623126]
								}, {
									"case":	86,
									"scores":	[-7.14445617623126]
								}, {
									"case":	87,
									"scores":	[-7.14445617623126]
								}, {
									"case":	88,
									"scores":	[-7.14445617623126]
								}, {
									"case":	89,
									"scores":	[-7.14445617623126]
								}, {
									"case":	90,
									"scores":	[-7.14445617623126]
								}, {
									"case":	91,
									"scores":	[-7.14445617623126]
								}, {
									"case":	92,
									"scores":	[-7.14445617623126]
								}, {
									"case":	93,
									"scores":	[-7.14445617623126]
								}, {
									"case":	94,
									"scores":	[-7.14445617623126]
								}, {
									"case":	95,
									"scores":	[-7.14445617623126]
								}, {
									"case":	96,
									"scores":	[-7.14445617623126]
								}, {
									"case":	97,
									"scores":	[-7.14445617623126]
								}, {
									"case":	98,
									"scores":	[-7.14445617623126]
								}, {
									"case":	99,
									"scores":	[-7.14445617623126]
								}, {
									"case":	100,
									"scores":	[-7.14445617623126]
								}, {
									"case":	101,
									"scores":	[-7.14445617623126]
								}, {
									"case":	102,
									"scores":	[-7.14445617623126]
								}, {
									"case":	103,
									"scores":	[-7.14445617623126]
								}, {
									"case":	104,
									"scores":	[-7.14445617623126]
								}, {
									"case":	105,
									"scores":	[-7.14445617623126]
								}, {
									"case":	106,
									"scores":	[-7.14445617623126]
								}, {
									"case":	107,
									"scores":	[-7.14445617623126]
								}, {
									"case":	108,
									"scores":	[-7.14445617623126]
								}, {
									"case":	109,
									"scores":	[-7.14445617623126]
								}, {
									"case":	110,
									"scores":	[-7.14445617623126]
								}, {
									"case":	111,
									"scores":	[-7.14445617623126]
								}, {
									"case":	112,
									"scores":	[-7.14445617623126]
								}, {
									"case":	113,
									"scores":	[-7.14445617623126]
								}, {
									"case":	114,
									"scores":	[-7.14445617623126]
								}, {
									"case":	115,
									"scores":	[-7.14445617623126]
								}, {
									"case":	116,
									"scores":	[-7.14445617623126]
								}, {
									"case":	117,
									"scores":	[-7.14445617623126]
								}, {
									"case":	118,
									"scores":	[-7.14445617623126]
								}, {
									"case":	119,
									"scores":	[-7.14445617623126]
								}, {
									"case":	120,
									"scores":	[-7.14445617623126]
								}, {
									"case":	121,
									"scores":	[-7.14445617623126]
								}, {
									"case":	122,
									"scores":	[-7.14445617623126]
								}, {
									"case":	123,
									"scores":	[-7.14445617623126]
								}, {
									"case":	124,
									"scores":	[-7.14445617623126]
								}, {
									"case":	125,
									"scores":	[-7.14445617623126]
								}, {
									"case":	126,
									"scores":	[-7.14445617623126]
								}, {
									"case":	127,
									"scores":	[-7.14445617623126]
								}, {
									"case":	128,
									"scores":	[-7.14445617623126]
								}, {
									"case":	129,
									"scores":	[-7.14445617623126]
								}, {
									"case":	130,
									"scores":	[-7.14445617623126]
								}, {
									"case":	131,
									"scores":	[-7.14445617623126]
								}, {
									"case":	132,
									"scores":	[-7.14445617623126]
								}, {
									"case":	133,
									"scores":	[-7.14445617623126]
								}, {
									"case":	134,
									"scores":	[-7.14445617623126]
								}, {
									"case":	135,
									"scores":	[-7.14445617623126]
								}, {
									"case":	136,
									"scores":	[-7.14445617623126]
								}, {
									"case":	137,
									"scores":	[-7.14445617623126]
								}, {
									"case":	138,
									"scores":	[-7.14445617623126]
								}, {
									"case":	139,
									"scores":	[-7.14445617623126]
								}, {
									"case":	140,
									"scores":	[-7.14445617623126]
								}, {
									"case":	141,
									"scores":	[-7.14445617623126]
								}, {
									"case":	142,
									"scores":	[-7.14445617623126]
								}, {
									"case":	143,
									"scores":	[-7.14445617623126]
								}, {
									"case":	144,
									"scores":	[-7.14445617623126]
								}, {
									"case":	145,
									"scores":	[-7.14445617623126]
								}, {
									"case":	146,
									"scores":	[-7.14445617623126]
								}, {
									"case":	147,
									"scores":	[-7.14445617623126]
								}, {
									"case":	148,
									"scores":	[-7.14445617623126]
								}, {
									"case":	149,
									"scores":	[-7.14445617623126]
								}, {
									"case":	150,
									"scores":	[-7.14445617623126]
								}, {
									"case":	151,
									"scores":	[-7.14445617623126]
								}, {
									"case":	152,
									"scores":	[-7.14445617623126]
								}, {
									"case":	153,
									"scores":	[-7.14445617623126]
								}, {
									"case":	154,
									"scores":	[-7.14445617623126]
								}, {
									"case":	155,
									"scores":	[-7.14445617623126]
								}, {
									"case":	156,
									"scores":	[-7.14445617623126]
								}, {
									"case":	157,
									"scores":	[-7.14445617623126]
								}, {
									"case":	158,
									"scores":	[-7.14445617623126]
								}, {
									"case":	159,
									"scores":	[-7.14445617623126]
								}, {
									"case":	160,
									"scores":	[-7.14445617623126]
								}, {
									"case":	161,
									"scores":	[-7.14445617623126]
								}, {
									"case":	162,
									"scores":	[-7.14445617623126]
								}, {
									"case":	163,
									"scores":	[-7.14445617623126]
								}, {
									"case":	164,
									"scores":	[-7.14445617623126]
								}, {
									"case":	165,
									"scores":	[-7.14445617623126]
								}, {
									"case":	166,
									"scores":	[-7.14445617623126]
								}, {
									"case":	167,
									"scores":	[-7.14445617623126]
								}, {
									"case":	168,
									"scores":	[-7.14445617623126]
								}, {
									"case":	169,
									"scores":	[-7.14445617623126]
								}, {
									"case":	170,
									"scores":	[-7.14445617623126]
								}, {
									"case":	171,
									"scores":	[-7.14445617623126]
								}, {
									"case":	172,
									"scores":	[-7.14445617623126]
								}, {
									"case":	173,
									"scores":	[-7.14445617623126]
								}, {
									"case":	174,
									"scores":	[-7.14445617623126]
								}, {
									"case":	175,
									"scores":	[-7.14445617623126]
								}, {
									"case":	176,
									"scores":	[-7.14445617623126]
								}, {
									"case":	177,
									"scores":	[-7.14445617623126]
								}, {
									"case":	178,
									"scores":	[-7.14445617623126]
								}, {
									"case":	179,
									"scores":	[-7.14445617623126]
								}, {
									"case":	180,
									"scores":	[-7.14445617623126]
								}, {
									"case":	181,
									"scores":	[-7.14445617623126]
								}, {
									"case":	182,
									"scores":	[-7.14445617623126]
								}, {
									"case":	183,
									"scores":	[-7.14445617623126]
								}, {
									"case":	184,
									"scores":	[-7.14445617623126]
								}, {
									"case":	185,
									"scores":	[-7.14445617623126]
								}, {
									"case":	186,
									"scores":	[-7.14445617623126]
								}, {
									"case":	187,
									"scores":	[-7.14445617623126]
								}, {
									"case":	188,
									"scores":	[-7.14445617623126]
								}, {
									"case":	189,
									"scores":	[-7.14445617623126]
								}, {
									"case":	190,
									"scores":	[-7.14445617623126]
								}, {
									"case":	191,
									"scores":	[-7.14445617623126]
								}, {
									"case":	192,
									"scores":	[-7.14445617623126]
								}, {
									"case":	193,
									"scores":	[-7.14445617623126]
								}, {
									"case":	194,
									"scores":	[-7.14445617623126]
								}, {
									"case":	195,
									"scores":	[-7.14445617623126]
								}, {
									"case":	196,
									"scores":	[-7.14445617623126]
								}, {
									"case":	197,
									"scores":	[-7.14445617623126]
								}, {
									"case":	198,
									"scores":	[-7.14445617623126]
								}, {
									"case":	199,
									"scores":	[-7.14445617623126]
								}, {
									"case":	200,
									"scores":	[-7.14445617623126]
								}, {
									"case":	201,
									"scores":	[-7.14445617623126]
								}, {
									"case":	202,
									"scores":	[-7.14445617623126]
								}, {
									"case":	203,
									"scores":	[-7.14445617623126]
								}, {
									"case":	204,
									"scores":	[-7.14445617623126]
								}, {
									"case":	205,
									"scores":	[-7.14445617623126]
								}, {
									"case":	206,
									"scores":	[-7.14445617623126]
								}, {
									"case":	207,
									"scores":	[-7.14445617623126]
								}, {
									"case":	208,
									"scores":	[-7.14445617623126]
								}, {
									"case":	209,
									"scores":	[-7.14445617623126]
								}, {
									"case":	210,
									"scores":	[-7.14445617623126]
								}, {
									"case":	211,
									"scores":	[-7.14445617623126]
								}, {
									"case":	212,
									"scores":	[-7.14445617623126]
								}, {
									"case":	213,
									"scores":	[-7.14445617623126]
								}, {
									"case":	214,
									"scores":	[-7.14445617623126]
								}, {
									"case":	215,
									"scores":	[-7.14445617623126]
								}, {
									"case":	216,
									"scores":	[-7.14445617623126]
								}, {
									"case":	217,
									"scores":	[-7.14445617623126]
								}, {
									"case":	218,
									"scores":	[-7.14445617623126]
								}, {
									"case":	219,
									"scores":	[-7.14445617623126]
								}, {
									"case":	220,
									"scores":	[-7.14445617623126]
								}, {
									"case":	221,
									"scores":	[-7.14445617623126]
								}, {
									"case":	222,
									"scores":	[-7.14445617623126]
								}, {
									"case":	223,
									"scores":	[-7.14445617623126]
								}, {
									"case":	224,
									"scores":	[-7.14445617623126]
								}, {
									"case":	225,
									"scores":	[-7.14445617623126]
								}, {
									"case":	226,
									"scores":	[-7.14445617623126]
								}, {
									"case":	227,
									"scores":	[-7.14445617623126]
								}, {
									"case":	228,
									"scores":	[-7.14445617623126]
								}, {
									"case":	229,
									"scores":	[-7.14445617623126]
								}, {
									"case":	230,
									"scores":	[-7.14445617623126]
								}, {
									"case":	231,
									"scores":	[-7.14445617623126]
								}, {
									"case":	232,
									"scores":	[-7.14445617623126]
								}, {
									"case":	233,
									"scores":	[-7.14445617623126]
								}, {
									"case":	234,
									"scores":	[-7.14445617623126]
								}, {
									"case":	235,
									"scores":	[-7.14445617623126]
								}, {
									"case":	236,
									"scores":	[-7.14445617623126]
								}, {
									"case":	237,
									"scores":	[-7.14445617623126]
								}, {
									"case":	238,
									"scores":	[-7.14445617623126]
								}, {
									"case":	239,
									"scores":	[-7.14445617623126]
								}, {
									"case":	240,
									"scores":	[-7.14445617623126]
								}, {
									"case":	241,
									"scores":	[-7.14445617623126]
								}, {
									"case":	242,
									"scores":	[-7.14445617623126]
								}, {
									"case":	243,
									"scores":	[-7.14445617623126]
								}, {
									"case":	244,
									"scores":	[-7.14445617623126]
								}, {
									"case":	245,
									"scores":	[-7.14445617623126]
								}, {
									"case":	246,
									"scores":	[-7.14445617623126]
								}, {
									"case":	247,
									"scores":	[-7.14445617623126]
								}, {
									"case":	248,
									"scores":	[-7.14445617623126]
								}, {
									"case":	249,
									"scores":	[-7.14445617623126]
								}, {
									"case":	250,
									"scores":	[-7.14445617623126]
								}, {
									"case":	251,
									"scores":	[-7.14445617623126]
								}, {
									"case":	252,
									"scores":	[-7.14445617623126]
								}, {
									"case":	253,
									"scores":	[-7.14445617623126]
								}, {
									"case":	254,
									"scores":	[-7.14445617623126]
								}, {
									"case":	255,
									"scores":	[-7.14445617623126]
								}, {
									"case":	256,
									"scores":	[-7.14445617623126]
								}, {
									"case":	257,
									"scores":	[-7.14445617623126]
								}, {
									"case":	258,
									"scores":	[-7.14445617623126]
								}, {
									"case":	259,
									"scores":	[-7.14445617623126]
								}, {
									"case":	260,
									"scores":	[-7.14445617623126]
								}, {
									"case":	261,
									"scores":	[-7.14445617623126]
								}, {
									"case":	262,
									"scores":	[-7.14445617623126]
								}, {
									"case":	263,
									"scores":	[-7.14445617623126]
								}, {
									"case":	264,
									"scores":	[-7.14445617623126]
								}, {
									"case":	265,
									"scores":	[-7.14445617623126]
								}, {
									"case":	266,
									"scores":	[-7.14445617623126]
								}, {
									"case":	267,
									"scores":	[-7.14445617623126]
								}, {
									"case":	268,
									"scores":	[-7.14445617623126]
								}, {
									"case":	269,
									"scores":	[-7.14445617623126]
								}, {
									"case":	270,
									"scores":	[-7.14445617623126]
								}, {
									"case":	271,
									"scores":	[-7.14445617623126]
								}, {
									"case":	272,
									"scores":	[-7.14445617623126]
								}, {
									"case":	273,
									"scores":	[-7.14445617623126]
								}, {
									"case":	274,
									"scores":	[-7.14445617623126]
								}, {
									"case":	275,
									"scores":	[-7.14445617623126]
								}, {
									"case":	276,
									"scores":	[-7.14445617623126]
								}, {
									"case":	277,
									"scores":	[-7.14445617623126]
								}, {
									"case":	278,
									"scores":	[-7.14445617623126]
								}, {
									"case":	279,
									"scores":	[-7.14445617623126]
								}, {
									"case":	280,
									"scores":	[-7.14445617623126]
								}, {
									"case":	281,
									"scores":	[-7.14445617623126]
								}, {
									"case":	282,
									"scores":	[-7.14445617623126]
								}, {
									"case":	283,
									"scores":	[-7.14445617623126]
								}, {
									"case":	284,
									"scores":	[-7.14445617623126]
								}, {
									"case":	285,
									"scores":	[-7.14445617623126]
								}, {
									"case":	286,
									"scores":	[-7.14445617623126]
								}, {
									"case":	287,
									"scores":	[-7.14445617623126]
								}, {
									"case":	288,
									"scores":	[-7.14445617623126]
								}, {
									"case":	289,
									"scores":	[-7.14445617623126]
								}, {
									"case":	290,
									"scores":	[-7.14445617623126]
								}, {
									"case":	291,
									"scores":	[-7.14445617623126]
								}, {
									"case":	292,
									"scores":	[-7.14445617623126]
								}, {
									"case":	293,
									"scores":	[-7.14445617623126]
								}, {
									"case":	294,
									"scores":	[-7.14445617623126]
								}, {
									"case":	295,
									"scores":	[-7.14445617623126]
								}, {
									"case":	296,
									"scores":	[-7.14445617623126]
								}, {
									"case":	297,
									"scores":	[-7.14445617623126]
								}, {
									"case":	298,
									"scores":	[-7.14445617623126]
								}, {
									"case":	299,
									"scores":	[-7.14445617623126]
								}, {
									"case":	300,
									"scores":	[-7.14445617623126]
								}, {
									"case":	301,
									"scores":	[-7.14445617623126]
								}, {
									"case":	302,
									"scores":	[-7.14445617623126]
								}, {
									"case":	303,
									"scores":	[-7.14445617623126]
								}, {
									"case":	304,
									"scores":	[-7.14445617623126]
								}, {
									"case":	305,
									"scores":	[-7.14445617623126]
								}, {
									"case":	306,
									"scores":	[-7.14445617623126]
								}, {
									"case":	307,
									"scores":	[-7.14445617623126]
								}, {
									"case":	308,
									"scores":	[-7.14445617623126]
								}, {
									"case":	309,
									"scores":	[-7.14445617623126]
								}, {
									"case":	310,
									"scores":	[-7.14445617623126]
								}, {
									"case":	311,
									"scores":	[-7.14445617623126]
								}, {
									"case":	312,
									"scores":	[-7.14445617623126]
								}, {
									"case":	313,
									"scores":	[-7.14445617623126]
								}, {
									"case":	314,
									"scores":	[-7.14445617623126]
								}, {
									"case":	315,
									"scores":	[-7.14445617623126]
								}, {
									"case":	316,
									"scores":	[-7.14445617623126]
								}, {
									"case":	317,
									"scores":	[-7.14445617623126]
								}, {
									"case":	318,
									"scores":	[-7.14445617623126]
								}, {
									"case":	319,
									"scores":	[-7.14445617623126]
								}, {
									"case":	320,
									"scores":	[-7.14445617623126]
								}, {
									"case":	321,
									"scores":	[-7.14445617623126]
								}, {
									"case":	322,
									"scores":	[-7.14445617623126]
								}, {
									"case":	323,
									"scores":	[-7.14445617623126]
								}, {
									"case":	324,
									"scores":	[-7.14445617623126]
								}, {
									"case":	325,
									"scores":	[-7.14445617623126]
								}, {
									"case":	326,
									"scores":	[-7.14445617623126]
								}, {
									"case":	327,
									"scores":	[-7.14445617623126]
								}, {
									"case":	328,
									"scores":	[-7.14445617623126]
								}, {
									"case":	329,
									"scores":	[-7.14445617623126]
								}, {
									"case":	330,
									"scores":	[-7.14445617623126]
								}, {
									"case":	331,
									"scores":	[-7.14445617623126]
								}, {
									"case":	332,
									"scores":	[-7.14445617623126]
								}, {
									"case":	333,
									"scores":	[-7.14445617623126]
								}, {
									"case":	334,
									"scores":	[-7.14445617623126]
								}, {
									"case":	335,
									"scores":	[-7.14445617623126]
								}, {
									"case":	336,
									"scores":	[-7.14445617623126]
								}, {
									"case":	337,
									"scores":	[-7.14445617623126]
								}, {
									"case":	338,
									"scores":	[-7.14445617623126]
								}, {
									"case":	339,
									"scores":	[-7.14445617623126]
								}, {
									"case":	340,
									"scores":	[-7.14445617623126]
								}, {
									"case":	341,
									"scores":	[-7.14445617623126]
								}, {
									"case":	342,
									"scores":	[-7.14445617623126]
								}, {
									"case":	343,
									"scores":	[-7.14445617623126]
								}, {
									"case":	344,
									"scores":	[-7.14445617623126]
								}, {
									"case":	345,
									"scores":	[-7.14445617623126]
								}, {
									"case":	346,
									"scores":	[-7.14445617623126]
								}, {
									"case":	347,
									"scores":	[-7.14445617623126]
								}, {
									"case":	348,
									"scores":	[-7.14445617623126]
								}, {
									"case":	349,
									"scores":	[-7.14445617623126]
								}, {
									"case":	350,
									"scores":	[-7.14445617623126]
								}, {
									"case":	351,
									"scores":	[-7.14445617623126]
								}, {
									"case":	352,
									"scores":	[-7.14445617623126]
								}, {
									"case":	353,
									"scores":	[-7.14445617623126]
								}, {
									"case":	354,
									"scores":	[-7.14445617623126]
								}, {
									"case":	355,
									"scores":	[-7.14445617623126]
								}, {
									"case":	356,
									"scores":	[-7.14445617623126]
								}, {
									"case":	357,
									"scores":	[-7.14445617623126]
								}, {
									"case":	358,
									"scores":	[-7.14445617623126]
								}, {
									"case":	359,
									"scores":	[-7.14445617623126]
								}, {
									"case":	360,
									"scores":	[-7.14445617623126]
								}, {
									"case":	361,
									"scores":	[-7.14445617623126]
								}, {
									"case":	362,
									"scores":	[-7.14445617623126]
								}, {
									"case":	363,
									"scores":	[-7.14445617623126]
								}, {
									"case":	364,
									"scores":	[-7.14445617623126]
								}, {
									"case":	365,
									"scores":	[-7.14445617623126]
								}, {
									"case":	366,
									"scores":	[-7.14445617623126]
								}, {
									"case":	367,
									"scores":	[-7.14445617623126]
								}, {
									"case":	368,
									"scores":	[-7.14445617623126]
								}, {
									"case":	369,
									"scores":	[-7.14445617623126]
								}, {
									"case":	370,
									"scores":	[-7.14445617623126]
								}, {
									"case":	371,
									"scores":	[-7.14445617623126]
								}, {
									"case":	372,
									"scores":	[-7.14445617623126]
								}, {
									"case":	373,
									"scores":	[-7.14445617623126]
								}, {
									"case":	374,
									"scores":	[-7.14445617623126]
								}, {
									"case":	375,
									"scores":	[-7.14445617623126]
								}, {
									"case":	376,
									"scores":	[-7.14445617623126]
								}, {
									"case":	377,
									"scores":	[-7.14445617623126]
								}, {
									"case":	378,
									"scores":	[-7.14445617623126]
								}, {
									"case":	379,
									"scores":	[-7.14445617623126]
								}, {
									"case":	380,
									"scores":	[-7.14445617623126]
								}, {
									"case":	381,
									"scores":	[-7.14445617623126]
								}, {
									"case":	382,
									"scores":	[-7.14445617623126]
								}, {
									"case":	383,
									"scores":	[-7.14445617623126]
								}, {
									"case":	384,
									"scores":	[-7.14445617623126]
								}, {
									"case":	385,
									"scores":	[-7.14445617623126]
								}, {
									"case":	386,
									"scores":	[-7.14445617623126]
								}, {
									"case":	387,
									"scores":	[-7.14445617623126]
								}, {
									"case":	388,
									"scores":	[-7.14445617623126]
								}, {
									"case":	389,
									"scores":	[-7.14445617623126]
								}, {
									"case":	390,
									"scores":	[-7.14445617623126]
								}, {
									"case":	391,
									"scores":	[-7.14445617623126]
								}, {
									"case":	392,
									"scores":	[-7.14445617623126]
								}, {
									"case":	393,
									"scores":	[-7.14445617623126]
								}, {
									"case":	394,
									"scores":	[-7.14445617623126]
								}, {
									"case":	395,
									"scores":	[-7.14445617623126]
								}, {
									"case":	396,
									"scores":	[-7.14445617623126]
								}, {
									"case":	397,
									"scores":	[-7.14445617623126]
								}, {
									"case":	398,
									"scores":	[-7.14445617623126]
								}, {
									"case":	399,
									"scores":	[-7.14445617623126]
								}, {
									"case":	400,
									"scores":	[-7.14445617623126]
								}, {
									"case":	401,
									"scores":	[-7.14445617623126]
								}, {
									"case":	402,
									"scores":	[-7.14445617623126]
								}, {
									"case":	403,
									"scores":	[-7.14445617623126]
								}, {
									"case":	404,
									"scores":	[-7.14445617623126]
								}, {
									"case":	405,
									"scores":	[-7.14445617623126]
								}, {
									"case":	406,
									"scores":	[-7.14445617623126]
								}, {
									"case":	407,
									"scores":	[-7.14445617623126]
								}, {
									"case":	408,
									"scores":	[-7.14445617623126]
								}, {
									"case":	409,
									"scores":	[-7.14445617623126]
								}, {
									"case":	410,
									"scores":	[-7.14445617623126]
								}, {
									"case":	411,
									"scores":	[-7.14445617623126]
								}, {
									"case":	412,
									"scores":	[-7.14445617623126]
								}, {
									"case":	413,
									"scores":	[-7.14445617623126]
								}, {
									"case":	414,
									"scores":	[-7.14445617623126]
								}, {
									"case":	415,
									"scores":	[-7.14445617623126]
								}, {
									"case":	416,
									"scores":	[-7.14445617623126]
								}, {
									"case":	417,
									"scores":	[-7.14445617623126]
								}, {
									"case":	418,
									"scores":	[-7.14445617623126]
								}, {
									"case":	419,
									"scores":	[-7.14445617623126]
								}, {
									"case":	420,
									"scores":	[-7.14445617623126]
								}, {
									"case":	421,
									"scores":	[-7.14445617623126]
								}, {
									"case":	422,
									"scores":	[-7.14445617623126]
								}, {
									"case":	423,
									"scores":	[-7.14445617623126]
								}, {
									"case":	424,
									"scores":	[-7.14445617623126]
								}, {
									"case":	425,
									"scores":	[-7.14445617623126]
								}, {
									"case":	426,
									"scores":	[-7.14445617623126]
								}, {
									"case":	427,
									"scores":	[-7.14445617623126]
								}, {
									"case":	428,
									"scores":	[-7.14445617623126]
								}, {
									"case":	429,
									"scores":	[-7.14445617623126]
								}, {
									"case":	430,
									"scores":	[-7.14445617623126]
								}, {
									"case":	431,
									"scores":	[-7.14445617623126]
								}, {
									"case":	432,
									"scores":	[-7.14445617623126]
								}, {
									"case":	433,
									"scores":	[-7.14445617623126]
								}, {
									"case":	434,
									"scores":	[-7.14445617623126]
								}, {
									"case":	435,
									"scores":	[-7.14445617623126]
								}, {
									"case":	436,
									"scores":	[-7.14445617623126]
								}, {
									"case":	437,
									"scores":	[-7.14445617623126]
								}, {
									"case":	438,
									"scores":	[-7.14445617623126]
								}, {
									"case":	439,
									"scores":	[-7.14445617623126]
								}, {
									"case":	440,
									"scores":	[-7.14445617623126]
								}, {
									"case":	441,
									"scores":	[-7.14445617623126]
								}, {
									"case":	442,
									"scores":	[-7.14445617623126]
								}, {
									"case":	443,
									"scores":	[-7.14445617623126]
								}, {
									"case":	444,
									"scores":	[-7.14445617623126]
								}, {
									"case":	445,
									"scores":	[-7.14445617623126]
								}, {
									"case":	446,
									"scores":	[-7.14445617623126]
								}, {
									"case":	447,
									"scores":	[-7.14445617623126]
								}, {
									"case":	448,
									"scores":	[-7.14445617623126]
								}, {
									"case":	449,
									"scores":	[-7.14445617623126]
								}, {
									"case":	450,
									"scores":	[-7.14445617623126]
								}, {
									"case":	451,
									"scores":	[-7.14445617623126]
								}, {
									"case":	452,
									"scores":	[-7.14445617623126]
								}, {
									"case":	453,
									"scores":	[-7.14445617623126]
								}, {
									"case":	454,
									"scores":	[-7.14445617623126]
								}, {
									"case":	455,
									"scores":	[-7.14445617623126]
								}, {
									"case":	456,
									"scores":	[-7.14445617623126]
								}, {
									"case":	457,
									"scores":	[-7.14445617623126]
								}, {
									"case":	458,
									"scores":	[-7.14445617623126]
								}, {
									"case":	459,
									"scores":	[-7.14445617623126]
								}, {
									"case":	460,
									"scores":	[-7.14445617623126]
								}, {
									"case":	461,
									"scores":	[-7.14445617623126]
								}, {
									"case":	462,
									"scores":	[-7.14445617623126]
								}, {
									"case":	463,
									"scores":	[-7.14445617623126]
								}, {
									"case":	464,
									"scores":	[-7.14445617623126]
								}, {
									"case":	465,
									"scores":	[-7.14445617623126]
								}, {
									"case":	466,
									"scores":	[-7.14445617623126]
								}, {
									"case":	467,
									"scores":	[-7.14445617623126]
								}, {
									"case":	468,
									"scores":	[-7.14445617623126]
								}, {
									"case":	469,
									"scores":	[-7.14445617623126]
								}, {
									"case":	470,
									"scores":	[-7.14445617623126]
								}, {
									"case":	471,
									"scores":	[-7.14445617623126]
								}, {
									"case":	472,
									"scores":	[-7.14445617623126]
								}, {
									"case":	473,
									"scores":	[-7.14445617623126]
								}, {
									"case":	474,
									"scores":	[-7.14445617623126]
								}, {
									"case":	475,
									"scores":	[-7.14445617623126]
								}, {
									"case":	476,
									"scores":	[-7.14445617623126]
								}, {
									"case":	477,
									"scores":	[-7.14445617623126]
								}, {
									"case":	478,
									"scores":	[-7.14445617623126]
								}, {
									"case":	479,
									"scores":	[-7.14445617623126]
								}, {
									"case":	480,
									"scores":	[-7.14445617623126]
								}, {
									"case":	481,
									"scores":	[-7.14445617623126]
								}, {
									"case":	482,
									"scores":	[-7.14445617623126]
								}, {
									"case":	483,
									"scores":	[-7.14445617623126]
								}, {
									"case":	484,
									"scores":	[-7.14445617623126]
								}, {
									"case":	485,
									"scores":	[-7.14445617623126]
								}, {
									"case":	486,
									"scores":	[-7.14445617623126]
								}, {
									"case":	487,
									"scores":	[-7.14445617623126]
								}, {
									"case":	488,
									"scores":	[-7.14445617623126]
								}, {
									"case":	489,
									"scores":	[-7.14445617623126]
								}, {
									"case":	490,
									"scores":	[-7.14445617623126]
								}, {
									"case":	491,
									"scores":	[-7.14445617623126]
								}, {
									"case":	492,
									"scores":	[-7.14445617623126]
								}, {
									"case":	493,
									"scores":	[-7.14445617623126]
								}, {
									"case":	494,
									"scores":	[-7.14445617623126]
								}, {
									"case":	495,
									"scores":	[-7.14445617623126]
								}, {
									"case":	496,
									"scores":	[-7.14445617623126]
								}, {
									"case":	497,
									"scores":	[-7.14445617623126]
								}, {
									"case":	498,
									"scores":	[-7.14445617623126]
								}, {
									"case":	499,
									"scores":	[-7.14445617623126]
								}, {
									"case":	500,
									"scores":	[-7.14445617623126]
								}, {
									"case":	501,
									"scores":	[-7.14445617623126]
								}, {
									"case":	502,
									"scores":	[-7.14445617623126]
								}, {
									"case":	503,
									"scores":	[-7.14445617623126]
								}, {
									"case":	504,
									"scores":	[-7.14445617623126]
								}, {
									"case":	505,
									"scores":	[-7.14445617623126]
								}, {
									"case":	506,
									"scores":	[-7.14445617623126]
								}, {
									"case":	507,
									"scores":	[-7.14445617623126]
								}, {
									"case":	508,
									"scores":	[-7.14445617623126]
								}, {
									"case":	509,
									"scores":	[-7.14445617623126]
								}, {
									"case":	510,
									"scores":	[-7.14445617623126]
								}, {
									"case":	511,
									"scores":	[-7.14445617623126]
								}, {
									"case":	512,
									"scores":	[-7.14445617623126]
								}, {
									"case":	513,
									"scores":	[-7.14445617623126]
								}, {
									"case":	514,
									"scores":	[-7.14445617623126]
								}, {
									"case":	515,
									"scores":	[-7.14445617623126]
								}, {
									"case":	516,
									"scores":	[-7.14445617623126]
								}, {
									"case":	517,
									"scores":	[-7.14445617623126]
								}, {
									"case":	518,
									"scores":	[-7.14445617623126]
								}, {
									"case":	519,
									"scores":	[-7.14445617623126]
								}, {
									"case":	520,
									"scores":	[-7.14445617623126]
								}, {
									"case":	521,
									"scores":	[-7.14445617623126]
								}, {
									"case":	522,
									"scores":	[-7.14445617623126]
								}, {
									"case":	523,
									"scores":	[-7.14445617623126]
								}, {
									"case":	524,
									"scores":	[-7.14445617623126]
								}, {
									"case":	525,
									"scores":	[-7.14445617623126]
								}, {
									"case":	526,
									"scores":	[-7.14445617623126]
								}, {
									"case":	527,
									"scores":	[-7.14445617623126]
								}, {
									"case":	528,
									"scores":	[-7.14445617623126]
								}, {
									"case":	529,
									"scores":	[-7.14445617623126]
								}, {
									"case":	530,
									"scores":	[-7.14445617623126]
								}, {
									"case":	531,
									"scores":	[-7.14445617623126]
								}, {
									"case":	532,
									"scores":	[-7.14445617623126]
								}, {
									"case":	533,
									"scores":	[-7.14445617623126]
								}, {
									"case":	534,
									"scores":	[-7.14445617623126]
								}, {
									"case":	535,
									"scores":	[-7.14445617623126]
								}, {
									"case":	536,
									"scores":	[-7.14445617623126]
								}, {
									"case":	537,
									"scores":	[-7.14445617623126]
								}, {
									"case":	538,
									"scores":	[-7.14445617623126]
								}, {
									"case":	539,
									"scores":	[-7.14445617623126]
								}, {
									"case":	540,
									"scores":	[-7.14445617623126]
								}, {
									"case":	541,
									"scores":	[-7.14445617623126]
								}, {
									"case":	542,
									"scores":	[-7.14445617623126]
								}, {
									"case":	543,
									"scores":	[-7.14445617623126]
								}, {
									"case":	544,
									"scores":	[-7.14445617623126]
								}, {
									"case":	545,
									"scores":	[-7.14445617623126]
								}, {
									"case":	546,
									"scores":	[-7.14445617623126]
								}, {
									"case":	547,
									"scores":	[-7.14445617623126]
								}, {
									"case":	548,
									"scores":	[-7.14445617623126]
								}, {
									"case":	549,
									"scores":	[-7.14445617623126]
								}, {
									"case":	550,
									"scores":	[-7.14445617623126]
								}, {
									"case":	551,
									"scores":	[-7.14445617623126]
								}, {
									"case":	552,
									"scores":	[-7.14445617623126]
								}, {
									"case":	553,
									"scores":	[-7.14445617623126]
								}, {
									"case":	554,
									"scores":	[-7.14445617623126]
								}, {
									"case":	555,
									"scores":	[-7.14445617623126]
								}, {
									"case":	556,
									"scores":	[-7.14445617623126]
								}, {
									"case":	557,
									"scores":	[-7.14445617623126]
								}, {
									"case":	558,
									"scores":	[-7.14445617623126]
								}, {
									"case":	559,
									"scores":	[-7.14445617623126]
								}, {
									"case":	560,
									"scores":	[-7.14445617623126]
								}, {
									"case":	561,
									"scores":	[-7.14445617623126]
								}, {
									"case":	562,
									"scores":	[-7.14445617623126]
								}, {
									"case":	563,
									"scores":	[-7.14445617623126]
								}, {
									"case":	564,
									"scores":	[-7.14445617623126]
								}, {
									"case":	565,
									"scores":	[-7.14445617623126]
								}, {
									"case":	566,
									"scores":	[-7.14445617623126]
								}, {
									"case":	567,
									"scores":	[-7.14445617623126]
								}, {
									"case":	568,
									"scores":	[-7.14445617623126]
								}, {
									"case":	569,
									"scores":	[-7.14445617623126]
								}, {
									"case":	570,
									"scores":	[-7.14445617623126]
								}, {
									"case":	571,
									"scores":	[-7.14445617623126]
								}, {
									"case":	572,
									"scores":	[-7.14445617623126]
								}, {
									"case":	573,
									"scores":	[-7.14445617623126]
								}, {
									"case":	574,
									"scores":	[-7.14445617623126]
								}, {
									"case":	575,
									"scores":	[-7.14445617623126]
								}, {
									"case":	576,
									"scores":	[-7.14445617623126]
								}, {
									"case":	577,
									"scores":	[-7.14445617623126]
								}, {
									"case":	578,
									"scores":	[-7.14445617623126]
								}, {
									"case":	579,
									"scores":	[-7.14445617623126]
								}, {
									"case":	580,
									"scores":	[-7.14445617623126]
								}, {
									"case":	581,
									"scores":	[-7.14445617623126]
								}, {
									"case":	582,
									"scores":	[-7.14445617623126]
								}, {
									"case":	583,
									"scores":	[-7.14445617623126]
								}, {
									"case":	584,
									"scores":	[-7.14445617623126]
								}, {
									"case":	585,
									"scores":	[-7.14445617623126]
								}, {
									"case":	586,
									"scores":	[-7.14445617623126]
								}, {
									"case":	587,
									"scores":	[-7.14445617623126]
								}, {
									"case":	588,
									"scores":	[-7.14445617623126]
								}, {
									"case":	589,
									"scores":	[-7.14445617623126]
								}, {
									"case":	590,
									"scores":	[-7.14445617623126]
								}, {
									"case":	591,
									"scores":	[-7.14445617623126]
								}, {
									"case":	592,
									"scores":	[-7.14445617623126]
								}, {
									"case":	593,
									"scores":	[-7.14445617623126]
								}, {
									"case":	594,
									"scores":	[-7.14445617623126]
								}, {
									"case":	595,
									"scores":	[-7.14445617623126]
								}, {
									"case":	596,
									"scores":	[-7.14445617623126]
								}, {
									"case":	597,
									"scores":	[-7.14445617623126]
								}, {
									"case":	598,
									"scores":	[-7.14445617623126]
								}, {
									"case":	599,
									"scores":	[-7.14445617623126]
								}, {
									"case":	600,
									"scores":	[-7.14445617623126]
								}, {
									"case":	601,
									"scores":	[-7.14445617623126]
								}, {
									"case":	602,
									"scores":	[-7.14445617623126]
								}, {
									"case":	603,
									"scores":	[-7.14445617623126]
								}, {
									"case":	604,
									"scores":	[-7.14445617623126]
								}, {
									"case":	605,
									"scores":	[-7.14445617623126]
								}, {
									"case":	606,
									"scores":	[-7.14445617623126]
								}, {
									"case":	607,
									"scores":	[-7.14445617623126]
								}, {
									"case":	608,
									"scores":	[-7.14445617623126]
								}, {
									"case":	609,
									"scores":	[-7.14445617623126]
								}, {
									"case":	610,
									"scores":	[-7.14445617623126]
								}, {
									"case":	611,
									"scores":	[-7.14445617623126]
								}, {
									"case":	612,
									"scores":	[-7.14445617623126]
								}, {
									"case":	613,
									"scores":	[-7.14445617623126]
								}, {
									"case":	614,
									"scores":	[-7.14445617623126]
								}, {
									"case":	615,
									"scores":	[-7.14445617623126]
								}, {
									"case":	616,
									"scores":	[-7.14445617623126]
								}, {
									"case":	617,
									"scores":	[-7.14445617623126]
								}, {
									"case":	618,
									"scores":	[-7.14445617623126]
								}, {
									"case":	619,
									"scores":	[-7.14445617623126]
								}, {
									"case":	620,
									"scores":	[-7.14445617623126]
								}, {
									"case":	621,
									"scores":	[-7.14445617623126]
								}, {
									"case":	622,
									"scores":	[-7.14445617623126]
								}, {
									"case":	623,
									"scores":	[-7.14445617623126]
								}, {
									"case":	624,
									"scores":	[-7.14445617623126]
								}, {
									"case":	625,
									"scores":	[-7.14445617623126]
								}, {
									"case":	626,
									"scores":	[-7.14445617623126]
								}, {
									"case":	627,
									"scores":	[-7.14445617623126]
								}, {
									"case":	628,
									"scores":	[-7.14445617623126]
								}, {
									"case":	629,
									"scores":	[-7.14445617623126]
								}, {
									"case":	630,
									"scores":	[-7.14445617623126]
								}, {
									"case":	631,
									"scores":	[-7.14445617623126]
								}, {
									"case":	632,
									"scores":	[-7.14445617623126]
								}, {
									"case":	633,
									"scores":	[-7.14445617623126]
								}, {
									"case":	634,
									"scores":	[-7.14445617623126]
								}, {
									"case":	635,
									"scores":	[-7.14445617623126]
								}, {
									"case":	636,
									"scores":	[-7.14445617623126]
								}, {
									"case":	637,
									"scores":	[-7.14445617623126]
								}, {
									"case":	638,
									"scores":	[-7.14445617623126]
								}, {
									"case":	639,
									"scores":	[-7.14445617623126]
								}, {
									"case":	640,
									"scores":	[-7.14445617623126]
								}, {
									"case":	641,
									"scores":	[-7.14445617623126]
								}, {
									"case":	642,
									"scores":	[-7.14445617623126]
								}, {
									"case":	643,
									"scores":	[-7.14445617623126]
								}, {
									"case":	644,
									"scores":	[-7.14445617623126]
								}, {
									"case":	645,
									"scores":	[-7.14445617623126]
								}, {
									"case":	646,
									"scores":	[-7.14445617623126]
								}, {
									"case":	647,
									"scores":	[-7.14445617623126]
								}, {
									"case":	648,
									"scores":	[-7.14445617623126]
								}, {
									"case":	649,
									"scores":	[-7.14445617623126]
								}, {
									"case":	650,
									"scores":	[-7.14445617623126]
								}, {
									"case":	651,
									"scores":	[-7.14445617623126]
								}, {
									"case":	652,
									"scores":	[-7.14445617623126]
								}, {
									"case":	653,
									"scores":	[-7.14445617623126]
								}, {
									"case":	654,
									"scores":	[-7.14445617623126]
								}, {
									"case":	655,
									"scores":	[-7.14445617623126]
								}, {
									"case":	656,
									"scores":	[-7.14445617623126]
								}, {
									"case":	657,
									"scores":	[-7.14445617623126]
								}, {
									"case":	658,
									"scores":	[-7.14445617623126]
								}, {
									"case":	659,
									"scores":	[-7.14445617623126]
								}, {
									"case":	660,
									"scores":	[-7.14445617623126]
								}, {
									"case":	661,
									"scores":	[-7.14445617623126]
								}, {
									"case":	662,
									"scores":	[-7.14445617623126]
								}, {
									"case":	663,
									"scores":	[-7.14445617623126]
								}, {
									"case":	664,
									"scores":	[-7.14445617623126]
								}, {
									"case":	665,
									"scores":	[-7.14445617623126]
								}, {
									"case":	666,
									"scores":	[-7.14445617623126]
								}, {
									"case":	667,
									"scores":	[-7.14445617623126]
								}, {
									"case":	668,
									"scores":	[-7.14445617623126]
								}, {
									"case":	669,
									"scores":	[-7.14445617623126]
								}, {
									"case":	670,
									"scores":	[-7.14445617623126]
								}, {
									"case":	671,
									"scores":	[-7.14445617623126]
								}, {
									"case":	672,
									"scores":	[-7.14445617623126]
								}, {
									"case":	673,
									"scores":	[-7.14445617623126]
								}, {
									"case":	674,
									"scores":	[-7.14445617623126]
								}, {
									"case":	675,
									"scores":	[-7.14445617623126]
								}, {
									"case":	676,
									"scores":	[-7.14445617623126]
								}, {
									"case":	677,
									"scores":	[-7.14445617623126]
								}, {
									"case":	678,
									"scores":	[-7.14445617623126]
								}, {
									"case":	679,
									"scores":	[-7.14445617623126]
								}, {
									"case":	680,
									"scores":	[-7.14445617623126]
								}, {
									"case":	681,
									"scores":	[-7.14445617623126]
								}, {
									"case":	682,
									"scores":	[-7.14445617623126]
								}, {
									"case":	683,
									"scores":	[-7.14445617623126]
								}, {
									"case":	684,
									"scores":	[-7.14445617623126]
								}, {
									"case":	685,
									"scores":	[-7.14445617623126]
								}, {
									"case":	686,
									"scores":	[-7.14445617623126]
								}, {
									"case":	687,
									"scores":	[-7.14445617623126]
								}, {
									"case":	688,
									"scores":	[-7.14445617623126]
								}, {
									"case":	689,
									"scores":	[-7.14445617623126]
								}, {
									"case":	690,
									"scores":	[-7.14445617623126]
								}, {
									"case":	691,
									"scores":	[-7.14445617623126]
								}, {
									"case":	692,
									"scores":	[-7.14445617623126]
								}, {
									"case":	693,
									"scores":	[-7.14445617623126]
								}, {
									"case":	694,
									"scores":	[-7.14445617623126]
								}, {
									"case":	695,
									"scores":	[-7.14445617623126]
								}, {
									"case":	696,
									"scores":	[-7.14445617623126]
								}, {
									"case":	697,
									"scores":	[-7.14445617623126]
								}, {
									"case":	698,
									"scores":	[-7.14445617623126]
								}, {
									"case":	699,
									"scores":	[-7.14445617623126]
								}, {
									"case":	700,
									"scores":	[-7.14445617623126]
								}, {
									"case":	701,
									"scores":	[-7.14445617623126]
								}, {
									"case":	702,
									"scores":	[-7.14445617623126]
								}, {
									"case":	703,
									"scores":	[-7.14445617623126]
								}, {
									"case":	704,
									"scores":	[-7.14445617623126]
								}, {
									"case":	705,
									"scores":	[-7.14445617623126]
								}, {
									"case":	706,
									"scores":	[-7.14445617623126]
								}, {
									"case":	707,
									"scores":	[-7.14445617623126]
								}, {
									"case":	708,
									"scores":	[-7.14445617623126]
								}, {
									"case":	709,
									"scores":	[-7.14445617623126]
								}, {
									"case":	710,
									"scores":	[-7.14445617623126]
								}, {
									"case":	711,
									"scores":	[-7.14445617623126]
								}, {
									"case":	712,
									"scores":	[-7.14445617623126]
								}, {
									"case":	713,
									"scores":	[-7.14445617623126]
								}, {
									"case":	714,
									"scores":	[-7.14445617623126]
								}, {
									"case":	715,
									"scores":	[-7.14445617623126]
								}, {
									"case":	716,
									"scores":	[-7.14445617623126]
								}, {
									"case":	717,
									"scores":	[-7.14445617623126]
								}, {
									"case":	718,
									"scores":	[-7.14445617623126]
								}, {
									"case":	719,
									"scores":	[-7.14445617623126]
								}, {
									"case":	720,
									"scores":	[-7.14445617623126]
								}, {
									"case":	721,
									"scores":	[-7.14445617623126]
								}, {
									"case":	722,
									"scores":	[-7.14445617623126]
								}, {
									"case":	723,
									"scores":	[-7.14445617623126]
								}, {
									"case":	724,
									"scores":	[-7.14445617623126]
								}, {
									"case":	725,
									"scores":	[-7.14445617623126]
								}, {
									"case":	726,
									"scores":	[-7.14445617623126]
								}, {
									"case":	727,
									"scores":	[-7.14445617623126]
								}, {
									"case":	728,
									"scores":	[-7.14445617623126]
								}, {
									"case":	729,
									"scores":	[-7.14445617623126]
								}, {
									"case":	730,
									"scores":	[-7.14445617623126]
								}, {
									"case":	731,
									"scores":	[-7.14445617623126]
								}, {
									"case":	732,
									"scores":	[-7.14445617623126]
								}, {
									"case":	733,
									"scores":	[-7.14445617623126]
								}, {
									"case":	734,
									"scores":	[-7.14445617623126]
								}, {
									"case":	735,
									"scores":	[-7.14445617623126]
								}, {
									"case":	736,
									"scores":	[-7.14445617623126]
								}, {
									"case":	737,
									"scores":	[-7.14445617623126]
								}, {
									"case":	738,
									"scores":	[-7.14445617623126]
								}, {
									"case":	739,
									"scores":	[-7.14445617623126]
								}, {
									"case":	740,
									"scores":	[-7.14445617623126]
								}, {
									"case":	741,
									"scores":	[-7.14445617623126]
								}, {
									"case":	742,
									"scores":	[-7.14445617623126]
								}, {
									"case":	743,
									"scores":	[-7.14445617623126]
								}, {
									"case":	744,
									"scores":	[-7.14445617623126]
								}, {
									"case":	745,
									"scores":	[-7.14445617623126]
								}, {
									"case":	746,
									"scores":	[-7.14445617623126]
								}, {
									"case":	747,
									"scores":	[-7.14445617623126]
								}, {
									"case":	748,
									"scores":	[-7.14445617623126]
								}, {
									"case":	749,
									"scores":	[-7.14445617623126]
								}, {
									"case":	750,
									"scores":	[-7.14445617623126]
								}, {
									"case":	751,
									"scores":	[-7.14445617623126]
								}, {
									"case":	752,
									"scores":	[-7.14445617623126]
								}, {
									"case":	753,
									"scores":	[-7.14445617623126]
								}, {
									"case":	754,
									"scores":	[-7.14445617623126]
								}, {
									"case":	755,
									"scores":	[-7.14445617623126]
								}, {
									"case":	756,
									"scores":	[-7.14445617623126]
								}, {
									"case":	757,
									"scores":	[-7.14445617623126]
								}, {
									"case":	758,
									"scores":	[-7.14445617623126]
								}, {
									"case":	759,
									"scores":	[-7.14445617623126]
								}, {
									"case":	760,
									"scores":	[-7.14445617623126]
								}, {
									"case":	761,
									"scores":	[-7.14445617623126]
								}, {
									"case":	762,
									"scores":	[-7.14445617623126]
								}, {
									"case":	763,
									"scores":	[-7.14445617623126]
								}, {
									"case":	764,
									"scores":	[-7.14445617623126]
								}, {
									"case":	765,
									"scores":	[-7.14445617623126]
								}, {
									"case":	766,
									"scores":	[-7.14445617623126]
								}, {
									"case":	767,
									"scores":	[-7.14445617623126]
								}, {
									"case":	768,
									"scores":	[-7.14445617623126]
								}, {
									"case":	769,
									"scores":	[-7.14445617623126]
								}, {
									"case":	770,
									"scores":	[-7.14445617623126]
								}, {
									"case":	771,
									"scores":	[-7.14445617623126]
								}, {
									"case":	772,
									"scores":	[-7.14445617623126]
								}, {
									"case":	773,
									"scores":	[-7.14445617623126]
								}, {
									"case":	774,
									"scores":	[-7.14445617623126]
								}, {
									"case":	775,
									"scores":	[-7.14445617623126]
								}, {
									"case":	776,
									"scores":	[-7.14445617623126]
								}, {
									"case":	777,
									"scores":	[-7.14445617623126]
								}, {
									"case":	778,
									"scores":	[-7.14445617623126]
								}, {
									"case":	779,
									"scores":	[-7.14445617623126]
								}, {
									"case":	780,
									"scores":	[-7.14445617623126]
								}, {
									"case":	781,
									"scores":	[-7.14445617623126]
								}, {
									"case":	782,
									"scores":	[-7.14445617623126]
								}, {
									"case":	783,
									"scores":	[-7.14445617623126]
								}, {
									"case":	784,
									"scores":	[-7.14445617623126]
								}, {
									"case":	785,
									"scores":	[-7.14445617623126]
								}, {
									"case":	786,
									"scores":	[-7.14445617623126]
								}, {
									"case":	787,
									"scores":	[-7.14445617623126]
								}, {
									"case":	788,
									"scores":	[-7.14445617623126]
								}, {
									"case":	789,
									"scores":	[-7.14445617623126]
								}, {
									"case":	790,
									"scores":	[-7.14445617623126]
								}, {
									"case":	791,
									"scores":	[-7.14445617623126]
								}, {
									"case":	792,
									"scores":	[-7.14445617623126]
								}, {
									"case":	793,
									"scores":	[-7.14445617623126]
								}, {
									"case":	794,
									"scores":	[-7.14445617623126]
								}, {
									"case":	795,
									"scores":	[-7.14445617623126]
								}, {
									"case":	796,
									"scores":	[-7.14445617623126]
								}, {
									"case":	797,
									"scores":	[-7.14445617623126]
								}, {
									"case":	798,
									"scores":	[-7.14445617623126]
								}, {
									"case":	799,
									"scores":	[-7.14445617623126]
								}, {
									"case":	800,
									"scores":	[-7.14445617623126]
								}, {
									"case":	801,
									"scores":	[-7.14445617623126]
								}, {
									"case":	802,
									"scores":	[-7.14445617623126]
								}, {
									"case":	803,
									"scores":	[-7.14445617623126]
								}, {
									"case":	804,
									"scores":	[-7.14445617623126]
								}, {
									"case":	805,
									"scores":	[-7.14445617623126]
								}, {
									"case":	806,
									"scores":	[-7.14445617623126]
								}, {
									"case":	807,
									"scores":	[-7.14445617623126]
								}, {
									"case":	808,
									"scores":	[-7.14445617623126]
								}, {
									"case":	809,
									"scores":	[-7.14445617623126]
								}, {
									"case":	810,
									"scores":	[-7.14445617623126]
								}, {
									"case":	811,
									"scores":	[-7.14445617623126]
								}, {
									"case":	812,
									"scores":	[-7.14445617623126]
								}, {
									"case":	813,
									"scores":	[-7.14445617623126]
								}, {
									"case":	814,
									"scores":	[-7.14445617623126]
								}, {
									"case":	815,
									"scores":	[-7.14445617623126]
								}, {
									"case":	816,
									"scores":	[-7.14445617623126]
								}, {
									"case":	817,
									"scores":	[-7.14445617623126]
								}, {
									"case":	818,
									"scores":	[-7.14445617623126]
								}, {
									"case":	819,
									"scores":	[-7.14445617623126]
								}, {
									"case":	820,
									"scores":	[-7.14445617623126]
								}, {
									"case":	821,
									"scores":	[-7.14445617623126]
								}, {
									"case":	822,
									"scores":	[-7.14445617623126]
								}, {
									"case":	823,
									"scores":	[-7.14445617623126]
								}, {
									"case":	824,
									"scores":	[-7.14445617623126]
								}, {
									"case":	825,
									"scores":	[-7.14445617623126]
								}, {
									"case":	826,
									"scores":	[-7.14445617623126]
								}, {
									"case":	827,
									"scores":	[-7.14445617623126]
								}, {
									"case":	828,
									"scores":	[-7.14445617623126]
								}, {
									"case":	829,
									"scores":	[-7.14445617623126]
								}, {
									"case":	830,
									"scores":	[-7.14445617623126]
								}, {
									"case":	831,
									"scores":	[-7.14445617623126]
								}, {
									"case":	832,
									"scores":	[-7.14445617623126]
								}, {
									"case":	833,
									"scores":	[-7.14445617623126]
								}, {
									"case":	834,
									"scores":	[-7.14445617623126]
								}, {
									"case":	835,
									"scores":	[-7.14445617623126]
								}, {
									"case":	836,
									"scores":	[-7.14445617623126]
								}, {
									"case":	837,
									"scores":	[-7.14445617623126]
								}, {
									"case":	838,
									"scores":	[-7.14445617623126]
								}, {
									"case":	839,
									"scores":	[-7.14445617623126]
								}, {
									"case":	840,
									"scores":	[-7.14445617623126]
								}, {
									"case":	841,
									"scores":	[-7.14445617623126]
								}, {
									"case":	842,
									"scores":	[-7.14445617623126]
								}, {
									"case":	843,
									"scores":	[-7.14445617623126]
								}, {
									"case":	844,
									"scores":	[-7.14445617623126]
								}, {
									"case":	845,
									"scores":	[-7.14445617623126]
								}, {
									"case":	846,
									"scores":	[-7.14445617623126]
								}, {
									"case":	847,
									"scores":	[-7.14445617623126]
								}, {
									"case":	848,
									"scores":	[-7.14445617623126]
								}, {
									"case":	849,
									"scores":	[-7.14445617623126]
								}, {
									"case":	850,
									"scores":	[-7.14445617623126]
								}, {
									"case":	851,
									"scores":	[-7.14445617623126]
								}, {
									"case":	852,
									"scores":	[-7.14445617623126]
								}, {
									"case":	853,
									"scores":	[-7.14445617623126]
								}, {
									"case":	854,
									"scores":	[-7.14445617623126]
								}, {
									"case":	855,
									"scores":	[-7.14445617623126]
								}, {
									"case":	856,
									"scores":	[-7.14445617623126]
								}, {
									"case":	857,
									"scores":	[-7.14445617623126]
								}, {
									"case":	858,
									"scores":	[-7.14445617623126]
								}, {
									"case":	859,
									"scores":	[-7.14445617623126]
								}, {
									"case":	860,
									"scores":	[-7.14445617623126]
								}, {
									"case":	861,
									"scores":	[-7.14445617623126]
								}, {
									"case":	862,
									"scores":	[-7.14445617623126]
								}, {
									"case":	863,
									"scores":	[-7.14445617623126]
								}, {
									"case":	864,
									"scores":	[-7.14445617623126]
								}, {
									"case":	865,
									"scores":	[-7.14445617623126]
								}, {
									"case":	866,
									"scores":	[-7.14445617623126]
								}, {
									"case":	867,
									"scores":	[-7.14445617623126]
								}, {
									"case":	868,
									"scores":	[-7.14445617623126]
								}, {
									"case":	869,
									"scores":	[-7.14445617623126]
								}, {
									"case":	870,
									"scores":	[-7.14445617623126]
								}, {
									"case":	871,
									"scores":	[-7.14445617623126]
								}, {
									"case":	872,
									"scores":	[-7.14445617623126]
								}, {
									"case":	873,
									"scores":	[-7.14445617623126]
								}, {
									"case":	874,
									"scores":	[-7.14445617623126]
								}, {
									"case":	875,
									"scores":	[-7.14445617623126]
								}, {
									"case":	876,
									"scores":	[-7.14445617623126]
								}, {
									"case":	877,
									"scores":	[-7.14445617623126]
								}, {
									"case":	878,
									"scores":	[-7.14445617623126]
								}, {
									"case":	879,
									"scores":	[-7.14445617623126]
								}, {
									"case":	880,
									"scores":	[-7.14445617623126]
								}, {
									"case":	881,
									"scores":	[-7.14445617623126]
								}, {
									"case":	882,
									"scores":	[-7.14445617623126]
								}, {
									"case":	883,
									"scores":	[-7.14445617623126]
								}, {
									"case":	884,
									"scores":	[-7.14445617623126]
								}, {
									"case":	885,
									"scores":	[-7.14445617623126]
								}, {
									"case":	886,
									"scores":	[-7.14445617623126]
								}, {
									"case":	887,
									"scores":	[-7.14445617623126]
								}, {
									"case":	888,
									"scores":	[-7.14445617623126]
								}, {
									"case":	889,
									"scores":	[-7.14445617623126]
								}, {
									"case":	890,
									"scores":	[-7.14445617623126]
								}, {
									"case":	891,
									"scores":	[-7.14445617623126]
								}, {
									"case":	892,
									"scores":	[-7.14445617623126]
								}, {
									"case":	893,
									"scores":	[-7.14445617623126]
								}, {
									"case":	894,
									"scores":	[-7.14445617623126]
								}, {
									"case":	895,
									"scores":	[-7.14445617623126]
								}, {
									"case":	896,
									"scores":	[-7.14445617623126]
								}, {
									"case":	897,
									"scores":	[-7.14445617623126]
								}, {
									"case":	898,
									"scores":	[-7.14445617623126]
								}, {
									"case":	899,
									"scores":	[-7.14445617623126]
								}, {
									"case":	900,
									"scores":	[-7.14445617623126]
								}, {
									"case":	901,
									"scores":	[-7.14445617623126]
								}, {
									"case":	902,
									"scores":	[-7.14445617623126]
								}, {
									"case":	903,
									"scores":	[-7.14445617623126]
								}, {
									"case":	904,
									"scores":	[-7.14445617623126]
								}, {
									"case":	905,
									"scores":	[-7.14445617623126]
								}, {
									"case":	906,
									"scores":	[-7.14445617623126]
								}, {
									"case":	907,
									"scores":	[-7.14445617623126]
								}, {
									"case":	908,
									"scores":	[-7.14445617623126]
								}, {
									"case":	909,
									"scores":	[-7.14445617623126]
								}, {
									"case":	910,
									"scores":	[-7.14445617623126]
								}, {
									"case":	911,
									"scores":	[-7.14445617623126]
								}, {
									"case":	912,
									"scores":	[-7.14445617623126]
								}, {
									"case":	913,
									"scores":	[-7.14445617623126]
								}, {
									"case":	914,
									"scores":	[-7.14445617623126]
								}, {
									"case":	915,
									"scores":	[-7.14445617623126]
								}, {
									"case":	916,
									"scores":	[-7.14445617623126]
								}, {
									"case":	917,
									"scores":	[-7.14445617623126]
								}, {
									"case":	918,
									"scores":	[-7.14445617623126]
								}, {
									"case":	919,
									"scores":	[-7.14445617623126]
								}, {
									"case":	920,
									"scores":	[-7.14445617623126]
								}, {
									"case":	921,
									"scores":	[-7.14445617623126]
								}, {
									"case":	922,
									"scores":	[-7.14445617623126]
								}, {
									"case":	923,
									"scores":	[-7.14445617623126]
								}, {
									"case":	924,
									"scores":	[-7.14445617623126]
								}, {
									"case":	925,
									"scores":	[-7.14445617623126]
								}, {
									"case":	926,
									"scores":	[-7.14445617623126]
								}, {
									"case":	927,
									"scores":	[-7.14445617623126]
								}, {
									"case":	928,
									"scores":	[-7.14445617623126]
								}, {
									"case":	929,
									"scores":	[-7.14445617623126]
								}, {
									"case":	930,
									"scores":	[-7.14445617623126]
								}, {
									"case":	931,
									"scores":	[-7.14445617623126]
								}, {
									"case":	932,
									"scores":	[-7.14445617623126]
								}, {
									"case":	933,
									"scores":	[-7.14445617623126]
								}, {
									"case":	934,
									"scores":	[-7.14445617623126]
								}, {
									"case":	935,
									"scores":	[-7.14445617623126]
								}, {
									"case":	936,
									"scores":	[-7.14445617623126]
								}, {
									"case":	937,
									"scores":	[-7.14445617623126]
								}, {
									"case":	938,
									"scores":	[-7.14445617623126]
								}, {
									"case":	939,
									"scores":	[-7.14445617623126]
								}, {
									"case":	940,
									"scores":	[-7.14445617623126]
								}, {
									"case":	941,
									"scores":	[-7.14445617623126]
								}, {
									"case":	942,
									"scores":	[-7.14445617623126]
								}, {
									"case":	943,
									"scores":	[-7.14445617623126]
								}, {
									"case":	944,
									"scores":	[-7.14445617623126]
								}, {
									"case":	945,
									"scores":	[-7.14445617623126]
								}, {
									"case":	946,
									"scores":	[-7.14445617623126]
								}, {
									"case":	947,
									"scores":	[-7.14445617623126]
								}, {
									"case":	948,
									"scores":	[-7.14445617623126]
								}, {
									"case":	949,
									"scores":	[-7.14445617623126]
								}, {
									"case":	950,
									"scores":	[-7.14445617623126]
								}, {
									"case":	951,
									"scores":	[-7.14445617623126]
								}, {
									"case":	952,
									"scores":	[-7.14445617623126]
								}, {
									"case":	953,
									"scores":	[-7.14445617623126]
								}, {
									"case":	954,
									"scores":	[-7.14445617623126]
								}, {
									"case":	955,
									"scores":	[-7.14445617623126]
								}, {
									"case":	956,
									"scores":	[-7.14445617623126]
								}, {
									"case":	957,
									"scores":	[-7.14445617623126]
								}, {
									"case":	958,
									"scores":	[-7.14445617623126]
								}, {
									"case":	959,
									"scores":	[-7.14445617623126]
								}, {
									"case":	960,
									"scores":	[-7.14445617623126]
								}, {
									"case":	961,
									"scores":	[-7.14445617623126]
								}, {
									"case":	962,
									"scores":	[-7.14445617623126]
								}, {
									"case":	963,
									"scores":	[-7.14445617623126]
								}, {
									"case":	964,
									"scores":	[-7.14445617623126]
								}, {
									"case":	965,
									"scores":	[-7.14445617623126]
								}, {
									"case":	966,
									"scores":	[-7.14445617623126]
								}, {
									"case":	967,
									"scores":	[-7.14445617623126]
								}, {
									"case":	968,
									"scores":	[-7.14445617623126]
								}, {
									"case":	969,
									"scores":	[-7.14445617623126]
								}, {
									"case":	970,
									"scores":	[-7.14445617623126]
								}, {
									"case":	971,
									"scores":	[-7.14445617623126]
								}, {
									"case":	972,
									"scores":	[-7.14445617623126]
								}, {
									"case":	973,
									"scores":	[-7.14445617623126]
								}, {
									"case":	974,
									"scores":	[-7.14445617623126]
								}, {
									"case":	975,
									"scores":	[-7.14445617623126]
								}, {
									"case":	976,
									"scores":	[-7.14445617623126]
								}, {
									"case":	977,
									"scores":	[-7.14445617623126]
								}, {
									"case":	978,
									"scores":	[-7.14445617623126]
								}, {
									"case":	979,
									"scores":	[-7.14445617623126]
								}, {
									"case":	980,
									"scores":	[-7.14445617623126]
								}, {
									"case":	981,
									"scores":	[-7.14445617623126]
								}, {
									"case":	982,
									"scores":	[-7.14445617623126]
								}, {
									"case":	983,
									"scores":	[-7.14445617623126]
								}, {
									"case":	984,
									"scores":	[-7.14445617623126]
								}, {
									"case":	985,
									"scores":	[-7.14445617623126]
								}, {
									"case":	986,
									"scores":	[-7.14445617623126]
								}, {
									"case":	987,
									"scores":	[-7.14445617623126]
								}, {
									"case":	988,
									"scores":	[-7.14445617623126]
								}, {
									"case":	989,
									"scores":	[-7.14445617623126]
								}, {
									"case":	990,
									"scores":	[-7.14445617623126]
								}, {
									"case":	991,
									"scores":	[-7.14445617623126]
								}, {
									"case":	992,
									"scores":	[-7.14445617623126]
								}, {
									"case":	993,
									"scores":	[-7.14445617623126]
								}, {
									"case":	994,
									"scores":	[-7.14445617623126]
								}, {
									"case":	995,
									"scores":	[-7.14445617623126]
								}, {
									"case":	996,
									"scores":	[-7.14445617623126]
								}, {
									"case":	997,
									"scores":	[-7.14445617623126]
								}, {
									"case":	998,
									"scores":	[-7.14445617623126]
								}, {
									"case":	999,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1000,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1001,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1002,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1003,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1004,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1005,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1006,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1007,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1008,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1009,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1010,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1011,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1012,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1013,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1014,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1015,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1016,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1017,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1018,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1019,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1020,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1021,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1022,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1023,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1024,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1025,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1026,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1027,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1028,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1029,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1030,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1031,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1032,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1033,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1034,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1035,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1036,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1037,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1038,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1039,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1040,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1041,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1042,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1043,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1044,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1045,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1046,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1047,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1048,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1049,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1050,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1051,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1052,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1053,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1054,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1055,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1056,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1057,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1058,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1059,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1060,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1061,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1062,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1063,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1064,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1065,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1066,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1067,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1068,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1069,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1070,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1071,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1072,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1073,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1074,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1075,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1076,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1077,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1078,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1079,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1080,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1081,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1082,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1083,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1084,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1085,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1086,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1087,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1088,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1089,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1090,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1091,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1092,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1093,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1094,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1095,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1096,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1097,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1098,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1099,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1100,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1101,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1102,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1103,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1104,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1105,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1106,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1107,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1108,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1109,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1110,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1111,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1112,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1113,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1114,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1115,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1116,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1117,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1118,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1119,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1120,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1121,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1122,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1123,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1124,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1125,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1126,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1127,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1128,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1129,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1130,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1131,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1132,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1133,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1134,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1135,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1136,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1137,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1138,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1139,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1140,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1141,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1142,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1143,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1144,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1145,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1146,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1147,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1148,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1149,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1150,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1151,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1152,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1153,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1154,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1155,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1156,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1157,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1158,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1159,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1160,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1161,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1162,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1163,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1164,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1165,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1166,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1167,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1168,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1169,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1170,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1171,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1172,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1173,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1174,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1175,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1176,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1177,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1178,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1179,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1180,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1181,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1182,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1183,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1184,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1185,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1186,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1187,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1188,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1189,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1190,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1191,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1192,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1193,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1194,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1195,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1196,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1197,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1198,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1199,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1200,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1201,
									"scores":	[-7.14445617623126]
								}, {
									"case":	1202,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1203,
									"scores":	[-9.23055125623126, -9.23055125623126, -7.79375155623126, -7.76672515623126, -10.15590852723126, -9.45203949623126, -8.81696349623126, -8.69946607923126, -9.76866810923126, -10.120743126231261, -10.120743126231261, -10.120743126231261, -10.120743126231261, -10.120743126231261, -10.120743126231261, -10.120743126231261, -9.48566712623126, -10.120743126231261, -10.120743126231261, -10.120743126231261, -10.120743126231261]
								}, {
									"case":	1204,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1205,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1206,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1207,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1208,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1209,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1210,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1211,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1212,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1213,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1214,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1215,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1216,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1217,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1218,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1219,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1220,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1221,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1222,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1223,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1224,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1225,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1226,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1227,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1228,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1229,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1230,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1231,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1232,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1233,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1234,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1235,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1236,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1237,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1238,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1239,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1240,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1241,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1242,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1243,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1244,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1245,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1246,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}, {
									"case":	1247,
									"scores":	[-11.248997256231261, -11.248997256231261, -9.81219755623126, -9.78517115623126, -12.174354527231261, -11.470485496231261, -10.835409496231261, -10.71791207923126, -11.787114109231261, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -11.50411312623126, -12.13918912623126, -12.13918912623126, -12.13918912623126, -12.13918912623126]
								}]
						}, {
							"switch":	67,
							"types":	[[], [], [1], [], [], [], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], [], [3], [], [], [], [], [], [], [], [2]],
							"begin_line":	746,
							"begin_column":	2,
							"end_line":	746,
							"end_column":	59,
							"patch_codes":	["if (!__is_neg(\"\", \"L746\", 21, &(in), sizeof (in), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(cf), sizeof (cf), &(width), sizeof (width), &(length), sizeof (length), &(p), sizeof (p), &(pageNum), sizeof (pageNum), &(g3opts), sizeof (g3opts), &(compression), sizeof (compression), &(predictor), sizeof (predictor), &(jpegcolormode), sizeof (jpegcolormode), &(quality), sizeof (quality), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(tilelength), sizeof (tilelength), &(tilewidth), sizeof (tilewidth), &(outtiled), sizeof (outtiled), &(orientation), sizeof (orientation), &(fillorder), sizeof (fillorder)))\n    cf = pickCopyFunc(in, out, bitspersample, samplesperpixel);\n", "{\n}\n", "cf = pickCopyFunc(in, out, bitspersample, samplesperpixel)", "cf = (cf)", "cf = pickCopyFunc((&bitspersample), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((&cf), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((&in), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((&length), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((&out), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((&p), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((&samplesperpixel), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((&width), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((in), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc((out), out, bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (&bitspersample), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (&cf), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (&in), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (&length), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (&out), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (&p), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (&samplesperpixel), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (&width), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (in), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, (out), bitspersample, samplesperpixel)", "cf = pickCopyFunc(in, out, (0 * bitspersample), samplesperpixel)", "cf = pickCopyFunc(in, out, (0 * length), samplesperpixel)", "cf = pickCopyFunc(in, out, (0 * samplesperpixel), samplesperpixel)", "cf = pickCopyFunc(in, out, (0 * width), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample != 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample != length), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample != samplesperpixel), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample != width), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample * length), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample * samplesperpixel), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample * width), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample + 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample + length), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample + samplesperpixel), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample + width), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample - 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample - length), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample - samplesperpixel), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample - width), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample == 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample == length), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample == samplesperpixel), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample == width), samplesperpixel)", "cf = pickCopyFunc(in, out, (bitspersample), samplesperpixel)", "cf = pickCopyFunc(in, out, (cf != 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (cf == 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (in != 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (in != out), samplesperpixel)", "cf = pickCopyFunc(in, out, (in == 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (in == out), samplesperpixel)", "cf = pickCopyFunc(in, out, (length != 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (length * bitspersample), samplesperpixel)", "cf = pickCopyFunc(in, out, (length * samplesperpixel), samplesperpixel)", "cf = pickCopyFunc(in, out, (length * width), samplesperpixel)", "cf = pickCopyFunc(in, out, (length + 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (length - 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (length == 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (out != 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (out == 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (p != 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (p == 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel != 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel != length), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel != width), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel * bitspersample), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel * length), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel * width), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel + 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel + length), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel + width), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel - 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel - length), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel - width), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel == 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel == length), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel == width), samplesperpixel)", "cf = pickCopyFunc(in, out, (samplesperpixel), samplesperpixel)", "cf = pickCopyFunc(in, out, (width != 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (width != length), samplesperpixel)", "cf = pickCopyFunc(in, out, (width * bitspersample), samplesperpixel)", "cf = pickCopyFunc(in, out, (width * length), samplesperpixel)", "cf = pickCopyFunc(in, out, (width * samplesperpixel), samplesperpixel)", "cf = pickCopyFunc(in, out, (width + 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (width + length), samplesperpixel)", "cf = pickCopyFunc(in, out, (width - 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (width - length), samplesperpixel)", "cf = pickCopyFunc(in, out, (width == 0), samplesperpixel)", "cf = pickCopyFunc(in, out, (width == length), samplesperpixel)", "cf = pickCopyFunc(in, out, bitspersample, (0 * bitspersample))", "cf = pickCopyFunc(in, out, bitspersample, (0 * length))", "cf = pickCopyFunc(in, out, bitspersample, (0 * samplesperpixel))", "cf = pickCopyFunc(in, out, bitspersample, (0 * width))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample != 0))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample != length))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample != samplesperpixel))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample != width))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample * length))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample * samplesperpixel))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample * width))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample + 0))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample + length))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample + samplesperpixel))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample + width))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample - 0))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample - length))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample - samplesperpixel))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample - width))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample == 0))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample == length))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample == samplesperpixel))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample == width))", "cf = pickCopyFunc(in, out, bitspersample, (bitspersample))", "cf = pickCopyFunc(in, out, bitspersample, (cf != 0))", "cf = pickCopyFunc(in, out, bitspersample, (cf == 0))", "cf = pickCopyFunc(in, out, bitspersample, (in != 0))", "cf = pickCopyFunc(in, out, bitspersample, (in != out))", "cf = pickCopyFunc(in, out, bitspersample, (in == 0))", "cf = pickCopyFunc(in, out, bitspersample, (in == out))", "cf = pickCopyFunc(in, out, bitspersample, (length != 0))", "cf = pickCopyFunc(in, out, bitspersample, (length * bitspersample))", "cf = pickCopyFunc(in, out, bitspersample, (length * samplesperpixel))", "cf = pickCopyFunc(in, out, bitspersample, (length * width))", "cf = pickCopyFunc(in, out, bitspersample, (length + 0))", "cf = pickCopyFunc(in, out, bitspersample, (length - 0))", "cf = pickCopyFunc(in, out, bitspersample, (length == 0))", "cf = pickCopyFunc(in, out, bitspersample, (out != 0))", "cf = pickCopyFunc(in, out, bitspersample, (out == 0))", "cf = pickCopyFunc(in, out, bitspersample, (p != 0))", "cf = pickCopyFunc(in, out, bitspersample, (p == 0))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel != 0))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel != length))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel != width))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel * bitspersample))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel * length))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel * width))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel + 0))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel + length))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel + width))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel - 0))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel - length))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel - width))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel == 0))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel == length))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel == width))", "cf = pickCopyFunc(in, out, bitspersample, (samplesperpixel))", "cf = pickCopyFunc(in, out, bitspersample, (width != 0))", "cf = pickCopyFunc(in, out, bitspersample, (width != length))", "cf = pickCopyFunc(in, out, bitspersample, (width * bitspersample))", "cf = pickCopyFunc(in, out, bitspersample, (width * length))", "cf = pickCopyFunc(in, out, bitspersample, (width * samplesperpixel))", "cf = pickCopyFunc(in, out, bitspersample, (width + 0))", "cf = pickCopyFunc(in, out, bitspersample, (width + length))", "cf = pickCopyFunc(in, out, bitspersample, (width - 0))", "cf = pickCopyFunc(in, out, bitspersample, (width - length))", "cf = pickCopyFunc(in, out, bitspersample, (width == 0))", "cf = pickCopyFunc(in, out, bitspersample, (width == length))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.64311823923126, -7.64311823923126, -6.11071169623126, -5.57582069023126, -6.12840739023126, -6.01069529023126, -5.65112700523126, -7.76016904623126, -7.66315462523126, -7.81703627623126, -7.81703627623126, -7.81703627623126, -7.81703627623126, -7.81703627623126, -7.81703627623126, -7.81703627623126, -7.45746799123126, -7.81703627623126, -7.81703627623126, -7.81703627623126, -7.81703627623126]
								}, {
									"case":	2,
									"scores":	[-7.14445617623126]
								}, {
									"case":	3,
									"scores":	[-7.14445617623126]
								}, {
									"case":	4,
									"scores":	[-7.14445617623126]
								}, {
									"case":	5,
									"scores":	[-7.14445617623126]
								}, {
									"case":	6,
									"scores":	[-7.14445617623126]
								}, {
									"case":	7,
									"scores":	[-7.14445617623126]
								}, {
									"case":	8,
									"scores":	[-7.14445617623126]
								}, {
									"case":	9,
									"scores":	[-7.14445617623126]
								}, {
									"case":	10,
									"scores":	[-7.14445617623126]
								}, {
									"case":	11,
									"scores":	[-7.14445617623126]
								}, {
									"case":	12,
									"scores":	[-7.14445617623126]
								}, {
									"case":	13,
									"scores":	[-7.14445617623126]
								}, {
									"case":	14,
									"scores":	[-7.14445617623126]
								}, {
									"case":	15,
									"scores":	[-7.14445617623126]
								}, {
									"case":	16,
									"scores":	[-7.14445617623126]
								}, {
									"case":	17,
									"scores":	[-7.14445617623126]
								}, {
									"case":	18,
									"scores":	[-7.14445617623126]
								}, {
									"case":	19,
									"scores":	[-7.14445617623126]
								}, {
									"case":	20,
									"scores":	[-7.14445617623126]
								}, {
									"case":	21,
									"scores":	[-7.14445617623126]
								}, {
									"case":	22,
									"scores":	[-7.14445617623126]
								}, {
									"case":	23,
									"scores":	[-7.14445617623126]
								}, {
									"case":	24,
									"scores":	[-7.14445617623126]
								}, {
									"case":	25,
									"scores":	[-7.14445617623126]
								}, {
									"case":	26,
									"scores":	[-7.14445617623126]
								}, {
									"case":	27,
									"scores":	[-7.14445617623126]
								}, {
									"case":	28,
									"scores":	[-7.14445617623126]
								}, {
									"case":	29,
									"scores":	[-7.14445617623126]
								}, {
									"case":	30,
									"scores":	[-7.14445617623126]
								}, {
									"case":	31,
									"scores":	[-7.14445617623126]
								}, {
									"case":	32,
									"scores":	[-7.14445617623126]
								}, {
									"case":	33,
									"scores":	[-7.14445617623126]
								}, {
									"case":	34,
									"scores":	[-7.14445617623126]
								}, {
									"case":	35,
									"scores":	[-7.14445617623126]
								}, {
									"case":	36,
									"scores":	[-7.14445617623126]
								}, {
									"case":	37,
									"scores":	[-7.14445617623126]
								}, {
									"case":	38,
									"scores":	[-7.14445617623126]
								}, {
									"case":	39,
									"scores":	[-7.14445617623126]
								}, {
									"case":	40,
									"scores":	[-7.14445617623126]
								}, {
									"case":	41,
									"scores":	[-7.14445617623126]
								}, {
									"case":	42,
									"scores":	[-7.14445617623126]
								}, {
									"case":	43,
									"scores":	[-7.14445617623126]
								}, {
									"case":	44,
									"scores":	[-7.14445617623126]
								}, {
									"case":	45,
									"scores":	[-7.14445617623126]
								}, {
									"case":	46,
									"scores":	[-7.14445617623126]
								}, {
									"case":	47,
									"scores":	[-7.14445617623126]
								}, {
									"case":	48,
									"scores":	[-7.14445617623126]
								}, {
									"case":	49,
									"scores":	[-7.14445617623126]
								}, {
									"case":	50,
									"scores":	[-7.14445617623126]
								}, {
									"case":	51,
									"scores":	[-7.14445617623126]
								}, {
									"case":	52,
									"scores":	[-7.14445617623126]
								}, {
									"case":	53,
									"scores":	[-7.14445617623126]
								}, {
									"case":	54,
									"scores":	[-7.14445617623126]
								}, {
									"case":	55,
									"scores":	[-7.14445617623126]
								}, {
									"case":	56,
									"scores":	[-7.14445617623126]
								}, {
									"case":	57,
									"scores":	[-7.14445617623126]
								}, {
									"case":	58,
									"scores":	[-7.14445617623126]
								}, {
									"case":	59,
									"scores":	[-7.14445617623126]
								}, {
									"case":	60,
									"scores":	[-7.14445617623126]
								}, {
									"case":	61,
									"scores":	[-7.14445617623126]
								}, {
									"case":	62,
									"scores":	[-7.14445617623126]
								}, {
									"case":	63,
									"scores":	[-7.14445617623126]
								}, {
									"case":	64,
									"scores":	[-7.14445617623126]
								}, {
									"case":	65,
									"scores":	[-7.14445617623126]
								}, {
									"case":	66,
									"scores":	[-7.14445617623126]
								}, {
									"case":	67,
									"scores":	[-7.14445617623126]
								}, {
									"case":	68,
									"scores":	[-7.14445617623126]
								}, {
									"case":	69,
									"scores":	[-7.14445617623126]
								}, {
									"case":	70,
									"scores":	[-7.14445617623126]
								}, {
									"case":	71,
									"scores":	[-7.14445617623126]
								}, {
									"case":	72,
									"scores":	[-7.14445617623126]
								}, {
									"case":	73,
									"scores":	[-7.14445617623126]
								}, {
									"case":	74,
									"scores":	[-7.14445617623126]
								}, {
									"case":	75,
									"scores":	[-7.14445617623126]
								}, {
									"case":	76,
									"scores":	[-7.14445617623126]
								}, {
									"case":	77,
									"scores":	[-7.14445617623126]
								}, {
									"case":	78,
									"scores":	[-7.14445617623126]
								}, {
									"case":	79,
									"scores":	[-7.14445617623126]
								}, {
									"case":	80,
									"scores":	[-7.14445617623126]
								}, {
									"case":	81,
									"scores":	[-7.14445617623126]
								}, {
									"case":	82,
									"scores":	[-7.14445617623126]
								}, {
									"case":	83,
									"scores":	[-7.14445617623126]
								}, {
									"case":	84,
									"scores":	[-7.14445617623126]
								}, {
									"case":	85,
									"scores":	[-7.14445617623126]
								}, {
									"case":	86,
									"scores":	[-7.14445617623126]
								}, {
									"case":	87,
									"scores":	[-7.14445617623126]
								}, {
									"case":	88,
									"scores":	[-7.14445617623126]
								}, {
									"case":	89,
									"scores":	[-7.14445617623126]
								}, {
									"case":	90,
									"scores":	[-7.14445617623126]
								}, {
									"case":	91,
									"scores":	[-7.14445617623126]
								}, {
									"case":	92,
									"scores":	[-7.14445617623126]
								}, {
									"case":	93,
									"scores":	[-7.14445617623126]
								}, {
									"case":	94,
									"scores":	[-7.14445617623126]
								}, {
									"case":	95,
									"scores":	[-7.14445617623126]
								}, {
									"case":	96,
									"scores":	[-7.14445617623126]
								}, {
									"case":	97,
									"scores":	[-7.14445617623126]
								}, {
									"case":	98,
									"scores":	[-7.14445617623126]
								}, {
									"case":	99,
									"scores":	[-7.14445617623126]
								}, {
									"case":	100,
									"scores":	[-7.14445617623126]
								}, {
									"case":	101,
									"scores":	[-7.14445617623126]
								}, {
									"case":	102,
									"scores":	[-7.14445617623126]
								}, {
									"case":	103,
									"scores":	[-7.14445617623126]
								}, {
									"case":	104,
									"scores":	[-7.14445617623126]
								}, {
									"case":	105,
									"scores":	[-7.14445617623126]
								}, {
									"case":	106,
									"scores":	[-7.14445617623126]
								}, {
									"case":	107,
									"scores":	[-7.14445617623126]
								}, {
									"case":	108,
									"scores":	[-7.14445617623126]
								}, {
									"case":	109,
									"scores":	[-7.14445617623126]
								}, {
									"case":	110,
									"scores":	[-7.14445617623126]
								}, {
									"case":	111,
									"scores":	[-7.14445617623126]
								}, {
									"case":	112,
									"scores":	[-7.14445617623126]
								}, {
									"case":	113,
									"scores":	[-7.14445617623126]
								}, {
									"case":	114,
									"scores":	[-7.14445617623126]
								}, {
									"case":	115,
									"scores":	[-7.14445617623126]
								}, {
									"case":	116,
									"scores":	[-7.14445617623126]
								}, {
									"case":	117,
									"scores":	[-7.14445617623126]
								}, {
									"case":	118,
									"scores":	[-7.14445617623126]
								}, {
									"case":	119,
									"scores":	[-7.14445617623126]
								}, {
									"case":	120,
									"scores":	[-7.14445617623126]
								}, {
									"case":	121,
									"scores":	[-7.14445617623126]
								}, {
									"case":	122,
									"scores":	[-7.14445617623126]
								}, {
									"case":	123,
									"scores":	[-7.14445617623126]
								}, {
									"case":	124,
									"scores":	[-7.14445617623126]
								}, {
									"case":	125,
									"scores":	[-7.14445617623126]
								}, {
									"case":	126,
									"scores":	[-7.14445617623126]
								}, {
									"case":	127,
									"scores":	[-7.14445617623126]
								}, {
									"case":	128,
									"scores":	[-7.14445617623126]
								}, {
									"case":	129,
									"scores":	[-7.14445617623126]
								}, {
									"case":	130,
									"scores":	[-7.14445617623126]
								}, {
									"case":	131,
									"scores":	[-7.14445617623126]
								}, {
									"case":	132,
									"scores":	[-7.14445617623126]
								}, {
									"case":	133,
									"scores":	[-7.14445617623126]
								}, {
									"case":	134,
									"scores":	[-7.14445617623126]
								}, {
									"case":	135,
									"scores":	[-7.14445617623126]
								}, {
									"case":	136,
									"scores":	[-7.14445617623126]
								}, {
									"case":	137,
									"scores":	[-7.14445617623126]
								}, {
									"case":	138,
									"scores":	[-7.14445617623126]
								}, {
									"case":	139,
									"scores":	[-7.14445617623126]
								}, {
									"case":	140,
									"scores":	[-7.14445617623126]
								}, {
									"case":	141,
									"scores":	[-7.14445617623126]
								}, {
									"case":	142,
									"scores":	[-7.14445617623126]
								}, {
									"case":	143,
									"scores":	[-7.14445617623126]
								}, {
									"case":	144,
									"scores":	[-7.14445617623126]
								}, {
									"case":	145,
									"scores":	[-7.14445617623126]
								}, {
									"case":	146,
									"scores":	[-7.14445617623126]
								}, {
									"case":	147,
									"scores":	[-7.14445617623126]
								}, {
									"case":	148,
									"scores":	[-7.14445617623126]
								}, {
									"case":	149,
									"scores":	[-7.14445617623126]
								}, {
									"case":	150,
									"scores":	[-7.14445617623126]
								}, {
									"case":	151,
									"scores":	[-7.14445617623126]
								}, {
									"case":	152,
									"scores":	[-7.14445617623126]
								}, {
									"case":	153,
									"scores":	[-7.14445617623126]
								}, {
									"case":	154,
									"scores":	[-7.14445617623126]
								}, {
									"case":	155,
									"scores":	[-7.14445617623126]
								}, {
									"case":	156,
									"scores":	[-7.14445617623126]
								}, {
									"case":	157,
									"scores":	[-7.14445617623126]
								}, {
									"case":	158,
									"scores":	[-7.14445617623126]
								}, {
									"case":	159,
									"scores":	[-7.14445617623126]
								}, {
									"case":	160,
									"scores":	[-7.14445617623126]
								}]
						}]
				}, {
					"line":	771,
					"switches":	[]
				}, {
					"line":	774,
					"switches":	[{
							"switch":	68,
							"types":	[[], [], [], [], [145, 146, 147], [], [], [], [], [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [], [], [], [], [], []],
							"begin_line":	775,
							"begin_column":	0,
							"end_line":	775,
							"end_column":	0,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, can't read scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((in)), \"Error, can't write scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't read scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((out)), \"Error, can't write scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "_TIFFfree((buf))", "bias = (in)", "bias = (out)", "comma = (0)", "comma = (1)", "compression = (0)", "compression = (1)", "compression = (spp)", "config = (0)", "config = (1)", "config = (spp)", "defcompression = (0)", "defcompression = (1)", "defcompression = (spp)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (imagelength)", "defg3opts = (imagewidth)", "defg3opts = (row)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (spp)", "fillorder = (0)", "fillorder = (1)", "fillorder = (spp)", "g3opts = (0)", "g3opts = (1)", "g3opts = (imagelength)", "g3opts = (imagewidth)", "g3opts = (row)", "jpegcolormode = (0)", "jpegcolormode = (1)", "orientation = (0)", "orientation = (1)", "orientation = (spp)", "outtiled = (0)", "outtiled = (1)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (0)", "pageNum = (1)", "predictor = (0)", "predictor = (1)", "predictor = (spp)", "quality = (0)", "quality = (1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (imagelength)", "rowsperstrip = (imagewidth)", "rowsperstrip = (row)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (0)", "tilelength = (1)", "tilelength = (imagelength)", "tilelength = (imagewidth)", "tilelength = (row)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (imagelength)", "tilewidth = (imagewidth)", "tilewidth = (row)", "(void)imagewidth", "(void)spp", "TIFFError(TIFFFileName(in), \"Error, can't read scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName(out), \"Error, can't write scanline %lu\", (unsigned long)row)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "_TIFFfree(buf)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L775\", 8, &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp), &(imagelength), sizeof (imagelength), &(row), sizeof (row), &(in), sizeof (in), &(buf), sizeof (buf), &(ignore), sizeof (ignore), &(out), sizeof (out)))\n    goto bad;\n", "if (__is_neg(\"\", \"L775\", 8, &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp), &(imagelength), sizeof (imagelength), &(row), sizeof (row), &(in), sizeof (in), &(buf), sizeof (buf), &(ignore), sizeof (ignore), &(out), sizeof (out)))\n    return 0;\n", "if (__is_neg(\"\", \"L775\", 8, &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp), &(imagelength), sizeof (imagelength), &(row), sizeof (row), &(in), sizeof (in), &(buf), sizeof (buf), &(ignore), sizeof (ignore), &(out), sizeof (out)))\n    return 1;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	2,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	3,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	4,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	5,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	6,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	7,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	8,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	9,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	10,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	11,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	12,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	13,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	14,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	15,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	16,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	17,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	18,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	19,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	20,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	21,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	22,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	23,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	24,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	25,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	26,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	27,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	28,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	29,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	30,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	31,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	32,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	33,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	34,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	35,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	36,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	37,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	38,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	39,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	40,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	41,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	42,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	43,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	44,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	45,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	46,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	47,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	48,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	49,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	50,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	51,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	52,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	53,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	54,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	55,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	56,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	57,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	58,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	59,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	60,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	61,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	62,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	63,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	64,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	65,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	66,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	67,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	68,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	69,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	70,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	71,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	72,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	73,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	74,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	75,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	76,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	77,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	78,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	79,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	80,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	81,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	82,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	83,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	84,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	85,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	86,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	87,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	88,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	89,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	90,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	91,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	92,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	93,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	94,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	95,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	96,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	97,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	98,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	99,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	100,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	101,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	102,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	103,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	104,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	105,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	106,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	107,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	108,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	109,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	110,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	111,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	112,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	113,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	114,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	115,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	116,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	117,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	118,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	119,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	120,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	121,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	122,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	123,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	124,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	125,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	126,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	127,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	128,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	129,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	130,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	131,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	132,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	133,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	134,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	135,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	136,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	137,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	138,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	139,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	140,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	141,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	142,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	143,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	144,
									"scores":	[-3.7120230054281458]
								}, {
									"case":	145,
									"scores":	[-8.99384714864366, -8.99384714864366, -7.9816238216436632, -8.68293502288766, -9.69254244864366, -9.01480504864366, -9.2116201786436633, -9.26846684864366]
								}, {
									"case":	146,
									"scores":	[-9.68205114864366, -9.68205114864366, -8.6698278216436631, -9.3711390228876628, -10.380746448643663, -9.7030090486436631, -9.89982417864366, -9.9566708486436628]
								}, {
									"case":	147,
									"scores":	[-11.700497148643663, -11.700497148643663, -10.688273821643662, -11.389585022887662, -12.399192448643662, -11.721455048643662, -11.918270178643663, -11.975116848643662]
								}]
						}, {
							"switch":	69,
							"types":	[[], [], [1], [], [], [], [3], [], [], [], [], [], [], [], [], [], [2]],
							"begin_line":	775,
							"begin_column":	2,
							"end_line":	775,
							"end_column":	9,
							"patch_codes":	["if (!__is_neg(\"\", \"L775\", 8, &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp), &(imagelength), sizeof (imagelength), &(row), sizeof (row), &(in), sizeof (in), &(buf), sizeof (buf), &(ignore), sizeof (ignore), &(out), sizeof (out)))\n    (void)imagewidth;\n", "{\n}\n", "(void)imagewidth"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.1970250196436627, -7.1970250196436627, -6.6251001076436635, -6.7913102186436634, -8.6013175686436636, -7.447739019643663, -7.4374266996436633, -8.5613104196436627]
								}, {
									"case":	2,
									"scores":	[-7.0434426396436631]
								}, {
									"case":	3,
									"scores":	[-7.0434426396436631]
								}]
						}]
				}, {
					"line":	775,
					"switches":	[{
							"switch":	70,
							"types":	[[], [], [], [], [145, 146, 147], [], [], [], [], [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [], [], [], [], [], []],
							"begin_line":	776,
							"begin_column":	0,
							"end_line":	776,
							"end_column":	0,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, can't read scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((in)), \"Error, can't write scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't read scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((out)), \"Error, can't write scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "_TIFFfree((buf))", "bias = (in)", "bias = (out)", "comma = (0)", "comma = (1)", "compression = (0)", "compression = (1)", "compression = (spp)", "config = (0)", "config = (1)", "config = (spp)", "defcompression = (0)", "defcompression = (1)", "defcompression = (spp)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (imagelength)", "defg3opts = (imagewidth)", "defg3opts = (row)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (spp)", "fillorder = (0)", "fillorder = (1)", "fillorder = (spp)", "g3opts = (0)", "g3opts = (1)", "g3opts = (imagelength)", "g3opts = (imagewidth)", "g3opts = (row)", "jpegcolormode = (0)", "jpegcolormode = (1)", "orientation = (0)", "orientation = (1)", "orientation = (spp)", "outtiled = (0)", "outtiled = (1)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (0)", "pageNum = (1)", "predictor = (0)", "predictor = (1)", "predictor = (spp)", "quality = (0)", "quality = (1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (imagelength)", "rowsperstrip = (imagewidth)", "rowsperstrip = (row)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (0)", "tilelength = (1)", "tilelength = (imagelength)", "tilelength = (imagewidth)", "tilelength = (row)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (imagelength)", "tilewidth = (imagewidth)", "tilewidth = (row)", "(void)imagewidth", "(void)spp", "TIFFError(TIFFFileName(in), \"Error, can't read scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName(out), \"Error, can't write scanline %lu\", (unsigned long)row)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "_TIFFfree(buf)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L776\", 8, &(imagelength), sizeof (imagelength), &(row), sizeof (row), &(in), sizeof (in), &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp), &(buf), sizeof (buf), &(ignore), sizeof (ignore), &(out), sizeof (out)))\n    goto bad;\n", "if (__is_neg(\"\", \"L776\", 8, &(imagelength), sizeof (imagelength), &(row), sizeof (row), &(in), sizeof (in), &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp), &(buf), sizeof (buf), &(ignore), sizeof (ignore), &(out), sizeof (out)))\n    return 0;\n", "if (__is_neg(\"\", \"L776\", 8, &(imagelength), sizeof (imagelength), &(row), sizeof (row), &(in), sizeof (in), &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp), &(buf), sizeof (buf), &(ignore), sizeof (ignore), &(out), sizeof (out)))\n    return 1;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	2,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	3,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	4,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	5,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	6,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	7,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	8,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	9,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	10,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	11,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	12,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	13,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	14,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	15,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	16,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	17,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	18,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	19,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	20,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	21,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	22,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	23,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	24,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	25,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	26,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	27,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	28,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	29,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	30,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	31,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	32,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	33,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	34,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	35,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	36,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	37,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	38,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	39,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	40,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	41,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	42,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	43,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	44,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	45,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	46,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	47,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	48,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	49,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	50,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	51,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	52,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	53,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	54,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	55,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	56,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	57,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	58,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	59,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	60,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	61,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	62,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	63,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	64,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	65,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	66,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	67,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	68,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	69,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	70,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	71,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	72,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	73,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	74,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	75,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	76,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	77,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	78,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	79,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	80,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	81,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	82,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	83,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	84,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	85,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	86,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	87,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	88,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	89,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	90,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	91,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	92,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	93,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	94,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	95,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	96,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	97,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	98,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	99,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	100,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	101,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	102,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	103,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	104,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	105,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	106,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	107,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	108,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	109,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	110,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	111,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	112,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	113,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	114,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	115,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	116,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	117,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	118,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	119,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	120,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	121,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	122,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	123,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	124,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	125,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	126,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	127,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	128,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	129,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	130,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	131,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	132,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	133,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	134,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	135,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	136,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	137,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	138,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	139,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	140,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	141,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	142,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	143,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	144,
									"scores":	[-7.0232399323261436]
								}, {
									"case":	145,
									"scores":	[-6.9637213693261435, -6.1813294225701423, -7.7528188963261435, -8.83903749632614, -8.83903749632614, -7.4999917751761433, -9.05681052632614, -7.7528188963261435]
								}, {
									"case":	146,
									"scores":	[-7.6519253693261433, -6.869533422570143, -8.4410228963261442, -9.5272414963261429, -9.5272414963261429, -8.1881957751761441, -9.745014526326143, -8.4410228963261442]
								}, {
									"case":	147,
									"scores":	[-9.6703713693261442, -8.8879794225701438, -10.459468896326143, -11.545687496326144, -11.545687496326144, -10.206641775176143, -11.763460526326144, -10.459468896326143]
								}]
						}, {
							"switch":	71,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	776,
							"begin_column":	2,
							"end_line":	789,
							"end_column":	2,
							"patch_codes":	["if (!__is_neg(\"\", \"L776\", 8, &(imagelength), sizeof (imagelength), &(row), sizeof (row), &(in), sizeof (in), &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp), &(buf), sizeof (buf), &(ignore), sizeof (ignore), &(out), sizeof (out)))\n    for (row = 0; row < imagelength; row++) {\n        if (TIFFReadScanline(in, buf, row, 0) < 0 && !ignore) {\n            TIFFError(TIFFFileName(in), \"Error, can't read scanline %lu\", (unsigned long)row);\n            goto bad;\n        }\n        if (TIFFWriteScanline(out, buf, row, 0) < 0) {\n            TIFFError(TIFFFileName(out), \"Error, can't write scanline %lu\", (unsigned long)row);\n            goto bad;\n        }\n    }\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.7514183043261431, -7.2003324933261439, -8.3944696893261437, -7.8241055893261438, -7.8241055893261438, -7.3560545753261435, -8.0645072693261444, -8.3944696893261437]
								}]
						}]
				}, {
					"line":	789,
					"switches":	[{
							"switch":	72,
							"types":	[[], [], [], [], [145, 146, 147], [], [], [], [], [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [], [], [], [], [], []],
							"begin_line":	790,
							"begin_column":	0,
							"end_line":	790,
							"end_column":	0,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, can't read scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((in)), \"Error, can't write scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't read scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((out)), \"Error, can't write scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "_TIFFfree((buf))", "bias = (in)", "bias = (out)", "comma = (0)", "comma = (1)", "compression = (0)", "compression = (1)", "compression = (spp)", "config = (0)", "config = (1)", "config = (spp)", "defcompression = (0)", "defcompression = (1)", "defcompression = (spp)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (imagelength)", "defg3opts = (imagewidth)", "defg3opts = (row)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (spp)", "fillorder = (0)", "fillorder = (1)", "fillorder = (spp)", "g3opts = (0)", "g3opts = (1)", "g3opts = (imagelength)", "g3opts = (imagewidth)", "g3opts = (row)", "jpegcolormode = (0)", "jpegcolormode = (1)", "orientation = (0)", "orientation = (1)", "orientation = (spp)", "outtiled = (0)", "outtiled = (1)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (0)", "pageNum = (1)", "predictor = (0)", "predictor = (1)", "predictor = (spp)", "quality = (0)", "quality = (1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (imagelength)", "rowsperstrip = (imagewidth)", "rowsperstrip = (row)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (0)", "tilelength = (1)", "tilelength = (imagelength)", "tilelength = (imagewidth)", "tilelength = (row)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (imagelength)", "tilewidth = (imagewidth)", "tilewidth = (row)", "(void)imagewidth", "(void)spp", "TIFFError(TIFFFileName(in), \"Error, can't read scanline %lu\", (unsigned long)row)", "TIFFError(TIFFFileName(out), \"Error, can't write scanline %lu\", (unsigned long)row)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "_TIFFfree(buf)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "usage()", "if (__is_neg(\"\", \"L790\", 8, &(buf), sizeof (buf), &(row), sizeof (row), &(out), sizeof (out), &(in), sizeof (in), &(ignore), sizeof (ignore), &(imagelength), sizeof (imagelength), &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp)))\n    goto bad;\n", "if (__is_neg(\"\", \"L790\", 8, &(buf), sizeof (buf), &(row), sizeof (row), &(out), sizeof (out), &(in), sizeof (in), &(ignore), sizeof (ignore), &(imagelength), sizeof (imagelength), &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp)))\n    return 0;\n", "if (__is_neg(\"\", \"L790\", 8, &(buf), sizeof (buf), &(row), sizeof (row), &(out), sizeof (out), &(in), sizeof (in), &(ignore), sizeof (ignore), &(imagelength), sizeof (imagelength), &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp)))\n    return 1;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	2,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	3,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	4,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	5,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	6,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	7,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	8,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	9,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	10,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	11,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	12,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	13,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	14,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	15,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	16,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	17,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	18,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	19,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	20,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	21,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	22,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	23,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	24,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	25,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	26,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	27,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	28,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	29,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	30,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	31,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	32,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	33,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	34,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	35,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	36,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	37,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	38,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	39,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	40,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	41,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	42,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	43,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	44,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	45,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	46,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	47,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	48,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	49,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	50,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	51,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	52,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	53,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	54,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	55,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	56,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	57,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	58,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	59,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	60,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	61,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	62,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	63,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	64,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	65,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	66,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	67,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	68,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	69,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	70,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	71,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	72,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	73,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	74,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	75,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	76,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	77,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	78,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	79,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	80,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	81,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	82,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	83,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	84,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	85,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	86,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	87,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	88,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	89,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	90,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	91,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	92,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	93,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	94,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	95,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	96,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	97,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	98,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	99,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	100,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	101,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	102,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	103,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	104,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	105,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	106,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	107,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	108,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	109,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	110,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	111,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	112,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	113,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	114,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	115,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	116,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	117,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	118,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	119,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	120,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	121,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	122,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	123,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	124,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	125,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	126,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	127,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	128,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	129,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	130,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	131,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	132,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	133,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	134,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	135,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	136,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	137,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	138,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	139,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	140,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	141,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	142,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	143,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	144,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	145,
									"scores":	[-7.9971771272235852, -7.8448374703735846, -9.7436605483735832, -9.7436605483735832, -9.1299202783735858, -8.4467666483735844, -8.912147248373584, -8.912147248373584]
								}, {
									"case":	146,
									"scores":	[-8.6853811272235859, -8.5330414703735844, -10.431864548373584, -10.431864548373584, -9.8181242783735847, -9.1349706483735851, -9.6003512483735847, -9.6003512483735847]
								}, {
									"case":	147,
									"scores":	[-10.703827127223585, -10.551487470373585, -12.450310548373585, -12.450310548373585, -11.836570278373586, -11.153416648373584, -11.618797248373586, -11.618797248373586]
								}]
						}, {
							"switch":	73,
							"types":	[[], [], [1], [], [], [], [15, 16, 17, 18, 19, 20, 21, 22], [], [13, 14], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [], [], [12]],
							"begin_line":	790,
							"begin_column":	2,
							"end_line":	790,
							"end_column":	15,
							"patch_codes":	["if (!__is_neg(\"\", \"L790\", 8, &(buf), sizeof (buf), &(row), sizeof (row), &(out), sizeof (out), &(in), sizeof (in), &(ignore), sizeof (ignore), &(imagelength), sizeof (imagelength), &(imagewidth), sizeof (imagewidth), &(spp), sizeof (spp)))\n    _TIFFfree(buf);\n", "_TIFFrealloc(buf, 0)", "_TIFFrealloc(buf, 1)", "bzero(buf, 0)", "bzero(buf, 1)", "explicit_bzero(buf, 0)", "explicit_bzero(buf, 1)", "getentropy(buf, 0)", "getentropy(buf, 1)", "realloc(buf, 0)", "realloc(buf, 1)", "{\n}\n", "brk(buf)", "free(buf)", "_TIFFfree((&buf))", "_TIFFfree((&imagelength))", "_TIFFfree((&imagewidth))", "_TIFFfree((&in))", "_TIFFfree((&out))", "_TIFFfree((&row))", "_TIFFfree((&spp))", "_TIFFfree((buf))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-6.889103642373585, -7.4492382883735848, -8.6479477563735845, -8.6479477563735845, -7.5575491873735849, -6.7473782223735848, -7.3171475073735852, -7.3171475073735852]
								}, {
									"case":	2,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	3,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	4,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	5,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	6,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	7,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	8,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	9,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	10,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	11,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	12,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	13,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	14,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	15,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	16,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	17,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	18,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	19,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	20,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	21,
									"scores":	[-6.9626318103735851]
								}, {
									"case":	22,
									"scores":	[-6.9626318103735851]
								}]
						}]
				}, {
					"line":	1648,
					"switches":	[]
				}, {
					"line":	1651,
					"switches":	[]
				}, {
					"line":	1652,
					"switches":	[]
				}, {
					"line":	1659,
					"switches":	[{
							"switch":	74,
							"types":	[[], [], [], [], [1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147], [], [], [], [], [1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], [], [], [], [], [], []],
							"begin_line":	1660,
							"begin_column":	1,
							"end_line":	1660,
							"end_column":	1,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 256, &w)", "TIFFGetField((in), 257, &l)", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 322, &tw)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((in), 323, &tl)", "TIFFGetField((out), 256, &w)", "TIFFGetField((out), 257, &l)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 322, &tw)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetField((out), 323, &tl)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "bychunk = (-1)", "bychunk = (0)", "bychunk = (1)", "bychunk = (11)", "bychunk = (16)", "bychunk = (2)", "bychunk = (2048)", "bychunk = (2056)", "bychunk = (2057)", "bychunk = (2058)", "bychunk = (2059)", "bychunk = (2060)", "bychunk = (2061)", "bychunk = (2062)", "bychunk = (2063)", "bychunk = (2064)", "bychunk = (2065)", "bychunk = (2066)", "bychunk = (2067)", "bychunk = (2068)", "bychunk = (2069)", "bychunk = (2070)", "bychunk = (2071)", "bychunk = (256)", "bychunk = (257)", "bychunk = (278)", "bychunk = (284)", "bychunk = (3)", "bychunk = (322)", "bychunk = (323)", "bychunk = (4)", "bychunk = (4096)", "bychunk = (4104)", "bychunk = (4105)", "bychunk = (4106)", "bychunk = (4107)", "bychunk = (4108)", "bychunk = (4109)", "bychunk = (4110)", "bychunk = (4111)", "bychunk = (4112)", "bychunk = (4113)", "bychunk = (4114)", "bychunk = (4115)", "bychunk = (4116)", "bychunk = (4117)", "bychunk = (4118)", "bychunk = (4119)", "bychunk = (8)", "bychunk = (bychunk)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (11)", "comma = (16)", "comma = (2)", "comma = (2048)", "comma = (2056)", "comma = (2057)", "comma = (2058)", "comma = (2059)", "comma = (2060)", "comma = (2061)", "comma = (2062)", "comma = (2063)", "comma = (2064)", "comma = (2065)", "comma = (2066)", "comma = (2067)", "comma = (2068)", "comma = (2069)", "comma = (2070)", "comma = (2071)", "comma = (256)", "comma = (257)", "comma = (278)", "comma = (284)", "comma = (3)", "comma = (322)", "comma = (323)", "comma = (4)", "comma = (4096)", "comma = (4104)", "comma = (4105)", "comma = (4106)", "comma = (4107)", "comma = (4108)", "comma = (4109)", "comma = (4110)", "comma = (4111)", "comma = (4112)", "comma = (4113)", "comma = (4114)", "comma = (4115)", "comma = (4116)", "comma = (4117)", "comma = (4118)", "comma = (4119)", "comma = (8)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (11)", "compression = (16)", "compression = (2)", "compression = (2048)", "compression = (2056)", "compression = (2057)", "compression = (2058)", "compression = (2059)", "compression = (2060)", "compression = (2061)", "compression = (2062)", "compression = (2063)", "compression = (2064)", "compression = (2065)", "compression = (2066)", "compression = (2067)", "compression = (2068)", "compression = (2069)", "compression = (2070)", "compression = (2071)", "compression = (256)", "compression = (257)", "compression = (278)", "compression = (284)", "compression = (3)", "compression = (322)", "compression = (323)", "compression = (4)", "compression = (4096)", "compression = (4104)", "compression = (4105)", "compression = (4106)", "compression = (4107)", "compression = (4108)", "compression = (4109)", "compression = (4110)", "compression = (4111)", "compression = (4112)", "compression = (4113)", "compression = (4114)", "compression = (4115)", "compression = (4116)", "compression = (4117)", "compression = (4118)", "compression = (4119)", "compression = (8)", "compression = (bitspersample)", "compression = (samplesperpixel)", "compression = (shortv)", "config = (-1)", "config = (0)", "config = (1)", "config = (11)", "config = (16)", "config = (2)", "config = (2048)", "config = (2056)", "config = (2057)", "config = (2058)", "config = (2059)", "config = (2060)", "config = (2061)", "config = (2062)", "config = (2063)", "config = (2064)", "config = (2065)", "config = (2066)", "config = (2067)", "config = (2068)", "config = (2069)", "config = (2070)", "config = (2071)", "config = (256)", "config = (257)", "config = (278)", "config = (284)", "config = (3)", "config = (322)", "config = (323)", "config = (4)", "config = (4096)", "config = (4104)", "config = (4105)", "config = (4106)", "config = (4107)", "config = (4108)", "config = (4109)", "config = (4110)", "config = (4111)", "config = (4112)", "config = (4113)", "config = (4114)", "config = (4115)", "config = (4116)", "config = (4117)", "config = (4118)", "config = (4119)", "config = (8)", "config = (bitspersample)", "config = (samplesperpixel)", "config = (shortv)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (11)", "defcompression = (16)", "defcompression = (2)", "defcompression = (2048)", "defcompression = (2056)", "defcompression = (2057)", "defcompression = (2058)", "defcompression = (2059)", "defcompression = (2060)", "defcompression = (2061)", "defcompression = (2062)", "defcompression = (2063)", "defcompression = (2064)", "defcompression = (2065)", "defcompression = (2066)", "defcompression = (2067)", "defcompression = (2068)", "defcompression = (2069)", "defcompression = (2070)", "defcompression = (2071)", "defcompression = (256)", "defcompression = (257)", "defcompression = (278)", "defcompression = (284)", "defcompression = (3)", "defcompression = (322)", "defcompression = (323)", "defcompression = (4)", "defcompression = (4096)", "defcompression = (4104)", "defcompression = (4105)", "defcompression = (4106)", "defcompression = (4107)", "defcompression = (4108)", "defcompression = (4109)", "defcompression = (4110)", "defcompression = (4111)", "defcompression = (4112)", "defcompression = (4113)", "defcompression = (4114)", "defcompression = (4115)", "defcompression = (4116)", "defcompression = (4117)", "defcompression = (4118)", "defcompression = (4119)", "defcompression = (8)", "defcompression = (bitspersample)", "defcompression = (samplesperpixel)", "defcompression = (shortv)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (11)", "defg3opts = (16)", "defg3opts = (2)", "defg3opts = (2048)", "defg3opts = (2056)", "defg3opts = (2057)", "defg3opts = (2058)", "defg3opts = (2059)", "defg3opts = (2060)", "defg3opts = (2061)", "defg3opts = (2062)", "defg3opts = (2063)", "defg3opts = (2064)", "defg3opts = (2065)", "defg3opts = (2066)", "defg3opts = (2067)", "defg3opts = (2068)", "defg3opts = (2069)", "defg3opts = (2070)", "defg3opts = (2071)", "defg3opts = (256)", "defg3opts = (257)", "defg3opts = (278)", "defg3opts = (284)", "defg3opts = (3)", "defg3opts = (322)", "defg3opts = (323)", "defg3opts = (4)", "defg3opts = (4096)", "defg3opts = (4104)", "defg3opts = (4105)", "defg3opts = (4106)", "defg3opts = (4107)", "defg3opts = (4108)", "defg3opts = (4109)", "defg3opts = (4110)", "defg3opts = (4111)", "defg3opts = (4112)", "defg3opts = (4113)", "defg3opts = (4114)", "defg3opts = (4115)", "defg3opts = (4116)", "defg3opts = (4117)", "defg3opts = (4118)", "defg3opts = (4119)", "defg3opts = (8)", "defg3opts = (l)", "defg3opts = (tl)", "defg3opts = (tw)", "defg3opts = (w)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (11)", "defpredictor = (16)", "defpredictor = (2)", "defpredictor = (2048)", "defpredictor = (2056)", "defpredictor = (2057)", "defpredictor = (2058)", "defpredictor = (2059)", "defpredictor = (2060)", "defpredictor = (2061)", "defpredictor = (2062)", "defpredictor = (2063)", "defpredictor = (2064)", "defpredictor = (2065)", "defpredictor = (2066)", "defpredictor = (2067)", "defpredictor = (2068)", "defpredictor = (2069)", "defpredictor = (2070)", "defpredictor = (2071)", "defpredictor = (256)", "defpredictor = (257)", "defpredictor = (278)", "defpredictor = (284)", "defpredictor = (3)", "defpredictor = (322)", "defpredictor = (323)", "defpredictor = (4)", "defpredictor = (4096)", "defpredictor = (4104)", "defpredictor = (4105)", "defpredictor = (4106)", "defpredictor = (4107)", "defpredictor = (4108)", "defpredictor = (4109)", "defpredictor = (4110)", "defpredictor = (4111)", "defpredictor = (4112)", "defpredictor = (4113)", "defpredictor = (4114)", "defpredictor = (4115)", "defpredictor = (4116)", "defpredictor = (4117)", "defpredictor = (4118)", "defpredictor = (4119)", "defpredictor = (8)", "defpredictor = (bitspersample)", "defpredictor = (samplesperpixel)", "defpredictor = (shortv)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (11)", "fillorder = (16)", "fillorder = (2)", "fillorder = (2048)", "fillorder = (2056)", "fillorder = (2057)", "fillorder = (2058)", "fillorder = (2059)", "fillorder = (2060)", "fillorder = (2061)", "fillorder = (2062)", "fillorder = (2063)", "fillorder = (2064)", "fillorder = (2065)", "fillorder = (2066)", "fillorder = (2067)", "fillorder = (2068)", "fillorder = (2069)", "fillorder = (2070)", "fillorder = (2071)", "fillorder = (256)", "fillorder = (257)", "fillorder = (278)", "fillorder = (284)", "fillorder = (3)", "fillorder = (322)", "fillorder = (323)", "fillorder = (4)", "fillorder = (4096)", "fillorder = (4104)", "fillorder = (4105)", "fillorder = (4106)", "fillorder = (4107)", "fillorder = (4108)", "fillorder = (4109)", "fillorder = (4110)", "fillorder = (4111)", "fillorder = (4112)", "fillorder = (4113)", "fillorder = (4114)", "fillorder = (4115)", "fillorder = (4116)", "fillorder = (4117)", "fillorder = (4118)", "fillorder = (4119)", "fillorder = (8)", "fillorder = (bitspersample)", "fillorder = (samplesperpixel)", "fillorder = (shortv)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (11)", "g3opts = (16)", "g3opts = (2)", "g3opts = (2048)", "g3opts = (2056)", "g3opts = (2057)", "g3opts = (2058)", "g3opts = (2059)", "g3opts = (2060)", "g3opts = (2061)", "g3opts = (2062)", "g3opts = (2063)", "g3opts = (2064)", "g3opts = (2065)", "g3opts = (2066)", "g3opts = (2067)", "g3opts = (2068)", "g3opts = (2069)", "g3opts = (2070)", "g3opts = (2071)", "g3opts = (256)", "g3opts = (257)", "g3opts = (278)", "g3opts = (284)", "g3opts = (3)", "g3opts = (322)", "g3opts = (323)", "g3opts = (4)", "g3opts = (4096)", "g3opts = (4104)", "g3opts = (4105)", "g3opts = (4106)", "g3opts = (4107)", "g3opts = (4108)", "g3opts = (4109)", "g3opts = (4110)", "g3opts = (4111)", "g3opts = (4112)", "g3opts = (4113)", "g3opts = (4114)", "g3opts = (4115)", "g3opts = (4116)", "g3opts = (4117)", "g3opts = (4118)", "g3opts = (4119)", "g3opts = (8)", "g3opts = (l)", "g3opts = (tl)", "g3opts = (tw)", "g3opts = (w)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (11)", "jpegcolormode = (16)", "jpegcolormode = (2)", "jpegcolormode = (2048)", "jpegcolormode = (2056)", "jpegcolormode = (2057)", "jpegcolormode = (2058)", "jpegcolormode = (2059)", "jpegcolormode = (2060)", "jpegcolormode = (2061)", "jpegcolormode = (2062)", "jpegcolormode = (2063)", "jpegcolormode = (2064)", "jpegcolormode = (2065)", "jpegcolormode = (2066)", "jpegcolormode = (2067)", "jpegcolormode = (2068)", "jpegcolormode = (2069)", "jpegcolormode = (2070)", "jpegcolormode = (2071)", "jpegcolormode = (256)", "jpegcolormode = (257)", "jpegcolormode = (278)", "jpegcolormode = (284)", "jpegcolormode = (3)", "jpegcolormode = (322)", "jpegcolormode = (323)", "jpegcolormode = (4)", "jpegcolormode = (4096)", "jpegcolormode = (4104)", "jpegcolormode = (4105)", "jpegcolormode = (4106)", "jpegcolormode = (4108)", "jpegcolormode = (4109)", "jpegcolormode = (4110)", "jpegcolormode = (4111)", "jpegcolormode = (4112)", "jpegcolormode = (4113)", "jpegcolormode = (4114)", "jpegcolormode = (4115)", "jpegcolormode = (4116)", "jpegcolormode = (4117)", "jpegcolormode = (4118)", "jpegcolormode = (4119)", "jpegcolormode = (8)", "jpegcolormode = (bychunk)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (11)", "orientation = (16)", "orientation = (2)", "orientation = (2048)", "orientation = (2056)", "orientation = (2057)", "orientation = (2058)", "orientation = (2059)", "orientation = (2060)", "orientation = (2061)", "orientation = (2062)", "orientation = (2063)", "orientation = (2064)", "orientation = (2065)", "orientation = (2066)", "orientation = (2067)", "orientation = (2068)", "orientation = (2069)", "orientation = (2070)", "orientation = (2071)", "orientation = (256)", "orientation = (257)", "orientation = (278)", "orientation = (284)", "orientation = (3)", "orientation = (322)", "orientation = (323)", "orientation = (4)", "orientation = (4096)", "orientation = (4104)", "orientation = (4105)", "orientation = (4106)", "orientation = (4107)", "orientation = (4108)", "orientation = (4109)", "orientation = (4110)", "orientation = (4111)", "orientation = (4112)", "orientation = (4113)", "orientation = (4114)", "orientation = (4115)", "orientation = (4116)", "orientation = (4117)", "orientation = (4118)", "orientation = (4119)", "orientation = (8)", "orientation = (bitspersample)", "orientation = (samplesperpixel)", "orientation = (shortv)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (11)", "outtiled = (16)", "outtiled = (2)", "outtiled = (2048)", "outtiled = (2056)", "outtiled = (2057)", "outtiled = (2058)", "outtiled = (2059)", "outtiled = (2060)", "outtiled = (2061)", "outtiled = (2062)", "outtiled = (2063)", "outtiled = (2064)", "outtiled = (2065)", "outtiled = (2066)", "outtiled = (2067)", "outtiled = (2068)", "outtiled = (2069)", "outtiled = (2070)", "outtiled = (2071)", "outtiled = (256)", "outtiled = (257)", "outtiled = (278)", "outtiled = (284)", "outtiled = (3)", "outtiled = (322)", "outtiled = (323)", "outtiled = (4)", "outtiled = (4096)", "outtiled = (4104)", "outtiled = (4105)", "outtiled = (4106)", "outtiled = (4107)", "outtiled = (4108)", "outtiled = (4109)", "outtiled = (4110)", "outtiled = (4111)", "outtiled = (4112)", "outtiled = (4113)", "outtiled = (4114)", "outtiled = (4115)", "outtiled = (4116)", "outtiled = (4117)", "outtiled = (4118)", "outtiled = (4119)", "outtiled = (8)", "outtiled = (bychunk)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (11)", "pageNum = (16)", "pageNum = (2)", "pageNum = (2048)", "pageNum = (2056)", "pageNum = (2057)", "pageNum = (2058)", "pageNum = (2059)", "pageNum = (2060)", "pageNum = (2061)", "pageNum = (2062)", "pageNum = (2063)", "pageNum = (2064)", "pageNum = (2065)", "pageNum = (2066)", "pageNum = (2067)", "pageNum = (2068)", "pageNum = (2069)", "pageNum = (2070)", "pageNum = (2071)", "pageNum = (256)", "pageNum = (257)", "pageNum = (278)", "pageNum = (284)", "pageNum = (3)", "pageNum = (322)", "pageNum = (323)", "pageNum = (4)", "pageNum = (4096)", "pageNum = (4104)", "pageNum = (4105)", "pageNum = (4106)", "pageNum = (4107)", "pageNum = (4108)", "pageNum = (4109)", "pageNum = (4110)", "pageNum = (4111)", "pageNum = (4112)", "pageNum = (4113)", "pageNum = (4114)", "pageNum = (4115)", "pageNum = (4116)", "pageNum = (4117)", "pageNum = (4118)", "pageNum = (4119)", "pageNum = (8)", "pageNum = (bychunk)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (11)", "predictor = (16)", "predictor = (2)", "predictor = (2048)", "predictor = (2056)", "predictor = (2057)", "predictor = (2058)", "predictor = (2059)", "predictor = (2060)", "predictor = (2061)", "predictor = (2062)", "predictor = (2063)", "predictor = (2064)", "predictor = (2065)", "predictor = (2066)", "predictor = (2067)", "predictor = (2068)", "predictor = (2069)", "predictor = (2070)", "predictor = (2071)", "predictor = (256)", "predictor = (257)", "predictor = (278)", "predictor = (284)", "predictor = (3)", "predictor = (322)", "predictor = (323)", "predictor = (4)", "predictor = (4096)", "predictor = (4104)", "predictor = (4105)", "predictor = (4106)", "predictor = (4107)", "predictor = (4108)", "predictor = (4109)", "predictor = (4110)", "predictor = (4111)", "predictor = (4112)", "predictor = (4113)", "predictor = (4114)", "predictor = (4115)", "predictor = (4116)", "predictor = (4117)", "predictor = (4118)", "predictor = (4119)", "predictor = (8)", "predictor = (bitspersample)", "predictor = (samplesperpixel)", "predictor = (shortv)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (11)", "quality = (16)", "quality = (2)", "quality = (2048)", "quality = (2056)", "quality = (2057)", "quality = (2058)", "quality = (2059)", "quality = (2060)", "quality = (2061)", "quality = (2062)", "quality = (2063)", "quality = (2064)", "quality = (2065)", "quality = (2066)", "quality = (2067)", "quality = (2068)", "quality = (2069)", "quality = (2070)", "quality = (2071)", "quality = (256)", "quality = (257)", "quality = (278)", "quality = (284)", "quality = (3)", "quality = (322)", "quality = (323)", "quality = (4)", "quality = (4096)", "quality = (4104)", "quality = (4105)", "quality = (4106)", "quality = (4107)", "quality = (4108)", "quality = (4109)", "quality = (4110)", "quality = (4111)", "quality = (4112)", "quality = (4113)", "quality = (4114)", "quality = (4115)", "quality = (4116)", "quality = (4117)", "quality = (4118)", "quality = (4119)", "quality = (8)", "quality = (bychunk)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (11)", "rowsperstrip = (16)", "rowsperstrip = (2)", "rowsperstrip = (2048)", "rowsperstrip = (2056)", "rowsperstrip = (2057)", "rowsperstrip = (2058)", "rowsperstrip = (2059)", "rowsperstrip = (2060)", "rowsperstrip = (2061)", "rowsperstrip = (2062)", "rowsperstrip = (2063)", "rowsperstrip = (2064)", "rowsperstrip = (2065)", "rowsperstrip = (2066)", "rowsperstrip = (2067)", "rowsperstrip = (2068)", "rowsperstrip = (2069)", "rowsperstrip = (2070)", "rowsperstrip = (2071)", "rowsperstrip = (256)", "rowsperstrip = (257)", "rowsperstrip = (278)", "rowsperstrip = (284)", "rowsperstrip = (3)", "rowsperstrip = (322)", "rowsperstrip = (323)", "rowsperstrip = (4)", "rowsperstrip = (4096)", "rowsperstrip = (4104)", "rowsperstrip = (4105)", "rowsperstrip = (4106)", "rowsperstrip = (4107)", "rowsperstrip = (4108)", "rowsperstrip = (4109)", "rowsperstrip = (4110)", "rowsperstrip = (4111)", "rowsperstrip = (4112)", "rowsperstrip = (4113)", "rowsperstrip = (4114)", "rowsperstrip = (4115)", "rowsperstrip = (4116)", "rowsperstrip = (4117)", "rowsperstrip = (4118)", "rowsperstrip = (4119)", "rowsperstrip = (8)", "rowsperstrip = (l)", "rowsperstrip = (tl)", "rowsperstrip = (tw)", "rowsperstrip = (w)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (11)", "tilelength = (16)", "tilelength = (2)", "tilelength = (2048)", "tilelength = (2056)", "tilelength = (2057)", "tilelength = (2058)", "tilelength = (2059)", "tilelength = (2060)", "tilelength = (2061)", "tilelength = (2062)", "tilelength = (2063)", "tilelength = (2064)", "tilelength = (2065)", "tilelength = (2066)", "tilelength = (2067)", "tilelength = (2068)", "tilelength = (2069)", "tilelength = (2070)", "tilelength = (2071)", "tilelength = (256)", "tilelength = (257)", "tilelength = (278)", "tilelength = (284)", "tilelength = (3)", "tilelength = (322)", "tilelength = (323)", "tilelength = (4)", "tilelength = (4096)", "tilelength = (4104)", "tilelength = (4105)", "tilelength = (4106)", "tilelength = (4107)", "tilelength = (4108)", "tilelength = (4109)", "tilelength = (4110)", "tilelength = (4111)", "tilelength = (4112)", "tilelength = (4113)", "tilelength = (4114)", "tilelength = (4115)", "tilelength = (4116)", "tilelength = (4117)", "tilelength = (4118)", "tilelength = (4119)", "tilelength = (8)", "tilelength = (l)", "tilelength = (tl)", "tilelength = (tw)", "tilelength = (w)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (11)", "tilewidth = (16)", "tilewidth = (2)", "tilewidth = (2048)", "tilewidth = (2056)", "tilewidth = (2057)", "tilewidth = (2058)", "tilewidth = (2059)", "tilewidth = (2060)", "tilewidth = (2061)", "tilewidth = (2062)", "tilewidth = (2063)", "tilewidth = (2064)", "tilewidth = (2065)", "tilewidth = (2066)", "tilewidth = (2067)", "tilewidth = (2068)", "tilewidth = (2069)", "tilewidth = (2070)", "tilewidth = (2071)", "tilewidth = (256)", "tilewidth = (257)", "tilewidth = (278)", "tilewidth = (284)", "tilewidth = (3)", "tilewidth = (322)", "tilewidth = (323)", "tilewidth = (4)", "tilewidth = (4096)", "tilewidth = (4104)", "tilewidth = (4105)", "tilewidth = (4106)", "tilewidth = (4107)", "tilewidth = (4108)", "tilewidth = (4109)", "tilewidth = (4110)", "tilewidth = (4111)", "tilewidth = (4112)", "tilewidth = (4113)", "tilewidth = (4114)", "tilewidth = (4115)", "tilewidth = (4116)", "tilewidth = (4117)", "tilewidth = (4118)", "tilewidth = (4119)", "tilewidth = (8)", "tilewidth = (l)", "tilewidth = (tl)", "tilewidth = (tw)", "tilewidth = (w)", "tl = (-1)", "tl = (0)", "tl = (1)", "tl = (11)", "tl = (16)", "tl = (2)", "tl = (2048)", "tl = (2056)", "tl = (2057)", "tl = (2058)", "tl = (2059)", "tl = (2060)", "tl = (2061)", "tl = (2062)", "tl = (2063)", "tl = (2064)", "tl = (2065)", "tl = (2066)", "tl = (2067)", "tl = (2068)", "tl = (2069)", "tl = (2070)", "tl = (2071)", "tl = (256)", "tl = (257)", "tl = (278)", "tl = (284)", "tl = (3)", "tl = (322)", "tl = (323)", "tl = (4)", "tl = (4096)", "tl = (4104)", "tl = (4105)", "tl = (4106)", "tl = (4107)", "tl = (4108)", "tl = (4109)", "tl = (4110)", "tl = (4111)", "tl = (4112)", "tl = (4113)", "tl = (4114)", "tl = (4115)", "tl = (4116)", "tl = (4117)", "tl = (4118)", "tl = (4119)", "tl = (8)", "tl = (l)", "tl = (tl)", "tl = (tw)", "tl = (w)", "tw = (-1)", "tw = (0)", "tw = (1)", "tw = (11)", "tw = (16)", "tw = (2)", "tw = (2048)", "tw = (2056)", "tw = (2057)", "tw = (2058)", "tw = (2059)", "tw = (2060)", "tw = (2061)", "tw = (2062)", "tw = (2063)", "tw = (2064)", "tw = (2065)", "tw = (2066)", "tw = (2067)", "tw = (2068)", "tw = (2069)", "tw = (2070)", "tw = (2071)", "tw = (256)", "tw = (257)", "tw = (278)", "tw = (284)", "tw = (3)", "tw = (322)", "tw = (323)", "tw = (4)", "tw = (4096)", "tw = (4104)", "tw = (4105)", "tw = (4106)", "tw = (4107)", "tw = (4108)", "tw = (4109)", "tw = (4110)", "tw = (4111)", "tw = (4112)", "tw = (4113)", "tw = (4114)", "tw = (4115)", "tw = (4116)", "tw = (4117)", "tw = (4118)", "tw = (4119)", "tw = (8)", "tw = (l)", "tw = (tl)", "tw = (tw)", "tw = (w)", "(void)TIFFGetField(in, 284, &shortv)", "TIFFGetField(in, 256, &w)", "TIFFGetField(in, 257, &l)", "TIFFGetField(in, 322, &tw)", "TIFFGetField(in, 323, &tl)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "bychunk = (tw == tilewidth && tl == tilelength)", "bychunk = (tw == w && tl == rowsperstrip)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "tl = l", "tw = w", "usage()", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return 0;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpBiasedContig2Contig;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContig2ContigByRow;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContig2SeparateByRow;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigStrips2ContigTiles;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigStrips2SeparateTiles;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2ContigStrips;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2ContigTiles;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2SeparateStrips;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2SeparateTiles;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpDecodedStrips;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparate2ContigByRow;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparate2SeparateByRow;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateStrips2ContigTiles;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateStrips2SeparateTiles;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2ContigStrips;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2ContigTiles;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2SeparateStrips;\n", "if (__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2SeparateTiles;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	2,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	3,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	4,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	5,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	6,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	7,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	8,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	9,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	10,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	11,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	12,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	13,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	14,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	15,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	16,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	17,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	18,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	19,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	20,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	21,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	22,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	23,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	24,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	25,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	26,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	27,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	28,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	29,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	30,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	31,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	32,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	33,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	34,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	35,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	36,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	37,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	38,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	39,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	40,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	41,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	42,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	43,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	44,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	45,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	46,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	47,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	48,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	49,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	50,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	51,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	52,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	53,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	54,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	55,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	56,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	57,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	58,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	59,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	60,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	61,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	62,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	63,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	64,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	65,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	66,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	67,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	68,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	69,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	70,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	71,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	72,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	73,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	74,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	75,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	76,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	77,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	78,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	79,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	80,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	81,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	82,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	83,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	84,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	85,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	86,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	87,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	88,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	89,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	90,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	91,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	92,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	93,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	94,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	95,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	96,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	97,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	98,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	99,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	100,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	101,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	102,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	103,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	104,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	105,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	106,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	107,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	108,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	109,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	110,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	111,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	112,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	113,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	114,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	115,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	116,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	117,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	118,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	119,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	120,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	121,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	122,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	123,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	124,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	125,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	126,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	127,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	128,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	129,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	130,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	131,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	132,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	133,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	134,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	135,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	136,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	137,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	138,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	139,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	140,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	141,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	142,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	143,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	144,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	145,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	146,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	147,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	148,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	149,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	150,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	151,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	152,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	153,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	154,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	155,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	156,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	157,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	158,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	159,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	160,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	161,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	162,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	163,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	164,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	165,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	166,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	167,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	168,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	169,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	170,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	171,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	172,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	173,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	174,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	175,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	176,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	177,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	178,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	179,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	180,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	181,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	182,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	183,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	184,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	185,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	186,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	187,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	188,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	189,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	190,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	191,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	192,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	193,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	194,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	195,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	196,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	197,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	198,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	199,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	200,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	201,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	202,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	203,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	204,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	205,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	206,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	207,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	208,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	209,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	210,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	211,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	212,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	213,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	214,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	215,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	216,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	217,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	218,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	219,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	220,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	221,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	222,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	223,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	224,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	225,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	226,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	227,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	228,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	229,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	230,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	231,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	232,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	233,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	234,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	235,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	236,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	237,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	238,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	239,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	240,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	241,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	242,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	243,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	244,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	245,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	246,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	247,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	248,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	249,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	250,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	251,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	252,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	253,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	254,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	255,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	256,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	257,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	258,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	259,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	260,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	261,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	262,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	263,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	264,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	265,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	266,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	267,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	268,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	269,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	270,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	271,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	272,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	273,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	274,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	275,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	276,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	277,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	278,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	279,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	280,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	281,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	282,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	283,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	284,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	285,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	286,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	287,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	288,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	289,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	290,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	291,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	292,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	293,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	294,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	295,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	296,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	297,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	298,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	299,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	300,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	301,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	302,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	303,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	304,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	305,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	306,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	307,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	308,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	309,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	310,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	311,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	312,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	313,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	314,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	315,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	316,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	317,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	318,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	319,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	320,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	321,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	322,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	323,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	324,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	325,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	326,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	327,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	328,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	329,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	330,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	331,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	332,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	333,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	334,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	335,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	336,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	337,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	338,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	339,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	340,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	341,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	342,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	343,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	344,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	345,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	346,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	347,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	348,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	349,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	350,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	351,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	352,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	353,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	354,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	355,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	356,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	357,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	358,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	359,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	360,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	361,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	362,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	363,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	364,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	365,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	366,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	367,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	368,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	369,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	370,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	371,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	372,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	373,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	374,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	375,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	376,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	377,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	378,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	379,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	380,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	381,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	382,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	383,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	384,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	385,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	386,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	387,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	388,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	389,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	390,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	391,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	392,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	393,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	394,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	395,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	396,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	397,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	398,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	399,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	400,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	401,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	402,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	403,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	404,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	405,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	406,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	407,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	408,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	409,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	410,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	411,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	412,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	413,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	414,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	415,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	416,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	417,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	418,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	419,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	420,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	421,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	422,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	423,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	424,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	425,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	426,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	427,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	428,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	429,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	430,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	431,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	432,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	433,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	434,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	435,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	436,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	437,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	438,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	439,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	440,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	441,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	442,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	443,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	444,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	445,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	446,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	447,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	448,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	449,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	450,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	451,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	452,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	453,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	454,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	455,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	456,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	457,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	458,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	459,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	460,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	461,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	462,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	463,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	464,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	465,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	466,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	467,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	468,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	469,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	470,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	471,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	472,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	473,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	474,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	475,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	476,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	477,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	478,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	479,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	480,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	481,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	482,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	483,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	484,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	485,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	486,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	487,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	488,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	489,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	490,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	491,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	492,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	493,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	494,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	495,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	496,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	497,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	498,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	499,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	500,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	501,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	502,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	503,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	504,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	505,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	506,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	507,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	508,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	509,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	510,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	511,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	512,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	513,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	514,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	515,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	516,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	517,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	518,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	519,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	520,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	521,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	522,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	523,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	524,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	525,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	526,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	527,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	528,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	529,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	530,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	531,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	532,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	533,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	534,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	535,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	536,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	537,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	538,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	539,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	540,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	541,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	542,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	543,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	544,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	545,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	546,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	547,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	548,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	549,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	550,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	551,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	552,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	553,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	554,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	555,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	556,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	557,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	558,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	559,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	560,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	561,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	562,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	563,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	564,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	565,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	566,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	567,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	568,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	569,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	570,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	571,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	572,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	573,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	574,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	575,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	576,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	577,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	578,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	579,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	580,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	581,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	582,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	583,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	584,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	585,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	586,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	587,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	588,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	589,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	590,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	591,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	592,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	593,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	594,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	595,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	596,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	597,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	598,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	599,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	600,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	601,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	602,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	603,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	604,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	605,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	606,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	607,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	608,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	609,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	610,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	611,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	612,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	613,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	614,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	615,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	616,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	617,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	618,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	619,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	620,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	621,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	622,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	623,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	624,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	625,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	626,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	627,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	628,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	629,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	630,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	631,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	632,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	633,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	634,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	635,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	636,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	637,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	638,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	639,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	640,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	641,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	642,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	643,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	644,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	645,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	646,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	647,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	648,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	649,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	650,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	651,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	652,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	653,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	654,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	655,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	656,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	657,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	658,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	659,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	660,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	661,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	662,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	663,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	664,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	665,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	666,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	667,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	668,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	669,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	670,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	671,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	672,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	673,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	674,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	675,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	676,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	677,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	678,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	679,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	680,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	681,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	682,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	683,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	684,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	685,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	686,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	687,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	688,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	689,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	690,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	691,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	692,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	693,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	694,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	695,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	696,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	697,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	698,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	699,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	700,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	701,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	702,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	703,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	704,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	705,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	706,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	707,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	708,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	709,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	710,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	711,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	712,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	713,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	714,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	715,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	716,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	717,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	718,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	719,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	720,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	721,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	722,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	723,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	724,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	725,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	726,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	727,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	728,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	729,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	730,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	731,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	732,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	733,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	734,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	735,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	736,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	737,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	738,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	739,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	740,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	741,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	742,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	743,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	744,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	745,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	746,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	747,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	748,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	749,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	750,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	751,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	752,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	753,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	754,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	755,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	756,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	757,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	758,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	759,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	760,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	761,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	762,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	763,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	764,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	765,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	766,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	767,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	768,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	769,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	770,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	771,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	772,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	773,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	774,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	775,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	776,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	777,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	778,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	779,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	780,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	781,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	782,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	783,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	784,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	785,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	786,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	787,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	788,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	789,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	790,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	791,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	792,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	793,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	794,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	795,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	796,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	797,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	798,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	799,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	800,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	801,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	802,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	803,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	804,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	805,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	806,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	807,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	808,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	809,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	810,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	811,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	812,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	813,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	814,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	815,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	816,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	817,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	818,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	819,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	820,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	821,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	822,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	823,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	824,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	825,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	826,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	827,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	828,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	829,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	830,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	831,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	832,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	833,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	834,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	835,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	836,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	837,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	838,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	839,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	840,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	841,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	842,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	843,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	844,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	845,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	846,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	847,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	848,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	849,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	850,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	851,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	852,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	853,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	854,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	855,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	856,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	857,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	858,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	859,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	860,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	861,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	862,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	863,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	864,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	865,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	866,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	867,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	868,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	869,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	870,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	871,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	872,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	873,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	874,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	875,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	876,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	877,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	878,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	879,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	880,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	881,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	882,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	883,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	884,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	885,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	886,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	887,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	888,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	889,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	890,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	891,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	892,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	893,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	894,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	895,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	896,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	897,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	898,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	899,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	900,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	901,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	902,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	903,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	904,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	905,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	906,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	907,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	908,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	909,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	910,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	911,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	912,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	913,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	914,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	915,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	916,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	917,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	918,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	919,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	920,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	921,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	922,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	923,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	924,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	925,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	926,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	927,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	928,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	929,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	930,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	931,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	932,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	933,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	934,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	935,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	936,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	937,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	938,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	939,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	940,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	941,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	942,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	943,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	944,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	945,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	946,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	947,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	948,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	949,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	950,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	951,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	952,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	953,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	954,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	955,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	956,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	957,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	958,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	959,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	960,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	961,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	962,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	963,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	964,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	965,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	966,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	967,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	968,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	969,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	970,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	971,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	972,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	973,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	974,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	975,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	976,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	977,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	978,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	979,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	980,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	981,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	982,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	983,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	984,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	985,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	986,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	987,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	988,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	989,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	990,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	991,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	992,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	993,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	994,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	995,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	996,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	997,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	998,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	999,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1000,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1001,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1002,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1003,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1004,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1005,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1006,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1007,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1008,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1009,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1010,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1011,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1012,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1013,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1014,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1015,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1016,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1017,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1018,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1019,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1020,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1021,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1022,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1023,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1024,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1025,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1026,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1027,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1028,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1029,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1030,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1031,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1032,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1033,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1034,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1035,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1036,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1037,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1038,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1039,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1040,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1041,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1042,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1043,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1044,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1045,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1046,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1047,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1048,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1049,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1050,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1051,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1052,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1053,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1054,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1055,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1056,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1057,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1058,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1059,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1060,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1061,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1062,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1063,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1064,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1065,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1066,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1067,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1068,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1069,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1070,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1071,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1072,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1073,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1074,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1075,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1076,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1077,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1078,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1079,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1080,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1081,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1082,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1083,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1084,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1085,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1086,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1087,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1088,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1089,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1090,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1091,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1092,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1093,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1094,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1095,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1096,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1097,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1098,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1099,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1100,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1101,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1102,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1103,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1104,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1105,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1106,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1107,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1108,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1109,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1110,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1111,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1112,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1113,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1114,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1115,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1116,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1117,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1118,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1119,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1120,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1121,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1122,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1123,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1124,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1125,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1126,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1127,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1128,
									"scores":	[-7.2656724201363776]
								}, {
									"case":	1129,
									"scores":	[-10.388957217136376, -9.26635771713638, -9.26635771713638, -9.96488161713638, -10.002306017136377, -10.002306017136377, -9.71121981713638, -9.77521694713638, -9.26635771713638, -9.77521694713638, -9.73779254713638, -9.77521694713638, -9.26635771713638, -9.26635771713638, -9.77521694713638, -9.140140947136377]
								}, {
									"case":	1130,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1131,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1132,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1133,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1134,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1135,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1136,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1137,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1138,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1139,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1140,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1141,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1142,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1143,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1144,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1145,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1146,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}, {
									"case":	1147,
									"scores":	[-9.7017532171363765, -8.5791537171363768, -8.5791537171363768, -9.2776776171363764, -9.3151020171363772, -9.3151020171363772, -9.0240158171363767, -9.0880129471363773, -8.5791537171363768, -9.0880129471363773, -9.05058854713638, -9.0880129471363773, -8.5791537171363768, -8.5791537171363768, -9.0880129471363773, -8.45293694713638]
								}]
						}, {
							"switch":	75,
							"types":	[[], [], [1], [], [], [], [], [], [], [], [], [], [], [], [], [], []],
							"begin_line":	1660,
							"begin_column":	3,
							"end_line":	1660,
							"end_column":	15,
							"patch_codes":	["if (!__is_neg(\"\", \"L1660\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return (((void *)0));\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-9.147384689136377, -7.5059651401363778, -7.5059651401363778, -9.10737754013638, -8.3044254401363773, -8.3044254401363773, -7.9938061401363774, -8.05698612013638, -7.5059651401363778, -8.05698612013638, -8.85993822013638, -8.05698612013638, -7.5059651401363778, -7.5059651401363778, -8.05698612013638, -7.6974178351363776]
								}]
						}]
				}, {
					"line":	1661,
					"switches":	[{
							"switch":	76,
							"types":	[[], [], [], [], [1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147], [], [], [], [], [1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], [], [], [], [], [], []],
							"begin_line":	1662,
							"begin_column":	0,
							"end_line":	1662,
							"end_column":	0,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 256, &w)", "TIFFGetField((in), 257, &l)", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 322, &tw)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((in), 323, &tl)", "TIFFGetField((out), 256, &w)", "TIFFGetField((out), 257, &l)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 322, &tw)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetField((out), 323, &tl)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "bychunk = (-1)", "bychunk = (0)", "bychunk = (1)", "bychunk = (11)", "bychunk = (16)", "bychunk = (2)", "bychunk = (2048)", "bychunk = (2056)", "bychunk = (2057)", "bychunk = (2058)", "bychunk = (2059)", "bychunk = (2060)", "bychunk = (2061)", "bychunk = (2062)", "bychunk = (2063)", "bychunk = (2064)", "bychunk = (2065)", "bychunk = (2066)", "bychunk = (2067)", "bychunk = (2068)", "bychunk = (2069)", "bychunk = (2070)", "bychunk = (2071)", "bychunk = (256)", "bychunk = (257)", "bychunk = (278)", "bychunk = (284)", "bychunk = (3)", "bychunk = (322)", "bychunk = (323)", "bychunk = (4)", "bychunk = (4096)", "bychunk = (4104)", "bychunk = (4105)", "bychunk = (4106)", "bychunk = (4107)", "bychunk = (4108)", "bychunk = (4109)", "bychunk = (4110)", "bychunk = (4111)", "bychunk = (4112)", "bychunk = (4113)", "bychunk = (4114)", "bychunk = (4115)", "bychunk = (4116)", "bychunk = (4117)", "bychunk = (4118)", "bychunk = (4119)", "bychunk = (8)", "bychunk = (bychunk)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (11)", "comma = (16)", "comma = (2)", "comma = (2048)", "comma = (2056)", "comma = (2057)", "comma = (2058)", "comma = (2059)", "comma = (2060)", "comma = (2061)", "comma = (2062)", "comma = (2063)", "comma = (2064)", "comma = (2065)", "comma = (2066)", "comma = (2067)", "comma = (2068)", "comma = (2069)", "comma = (2070)", "comma = (2071)", "comma = (256)", "comma = (257)", "comma = (278)", "comma = (284)", "comma = (3)", "comma = (322)", "comma = (323)", "comma = (4)", "comma = (4096)", "comma = (4104)", "comma = (4105)", "comma = (4106)", "comma = (4107)", "comma = (4108)", "comma = (4109)", "comma = (4110)", "comma = (4111)", "comma = (4112)", "comma = (4113)", "comma = (4114)", "comma = (4115)", "comma = (4116)", "comma = (4117)", "comma = (4118)", "comma = (4119)", "comma = (8)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (11)", "compression = (16)", "compression = (2)", "compression = (2048)", "compression = (2056)", "compression = (2057)", "compression = (2058)", "compression = (2059)", "compression = (2060)", "compression = (2061)", "compression = (2062)", "compression = (2063)", "compression = (2064)", "compression = (2065)", "compression = (2066)", "compression = (2067)", "compression = (2068)", "compression = (2069)", "compression = (2070)", "compression = (2071)", "compression = (256)", "compression = (257)", "compression = (278)", "compression = (284)", "compression = (3)", "compression = (322)", "compression = (323)", "compression = (4)", "compression = (4096)", "compression = (4104)", "compression = (4105)", "compression = (4106)", "compression = (4107)", "compression = (4108)", "compression = (4109)", "compression = (4110)", "compression = (4111)", "compression = (4112)", "compression = (4113)", "compression = (4114)", "compression = (4115)", "compression = (4116)", "compression = (4117)", "compression = (4118)", "compression = (4119)", "compression = (8)", "compression = (bitspersample)", "compression = (samplesperpixel)", "compression = (shortv)", "config = (-1)", "config = (0)", "config = (1)", "config = (11)", "config = (16)", "config = (2)", "config = (2048)", "config = (2056)", "config = (2057)", "config = (2058)", "config = (2059)", "config = (2060)", "config = (2061)", "config = (2062)", "config = (2063)", "config = (2064)", "config = (2065)", "config = (2066)", "config = (2067)", "config = (2068)", "config = (2069)", "config = (2070)", "config = (2071)", "config = (256)", "config = (257)", "config = (278)", "config = (284)", "config = (3)", "config = (322)", "config = (323)", "config = (4)", "config = (4096)", "config = (4104)", "config = (4105)", "config = (4106)", "config = (4107)", "config = (4108)", "config = (4109)", "config = (4110)", "config = (4111)", "config = (4112)", "config = (4113)", "config = (4114)", "config = (4115)", "config = (4116)", "config = (4117)", "config = (4118)", "config = (4119)", "config = (8)", "config = (bitspersample)", "config = (samplesperpixel)", "config = (shortv)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (11)", "defcompression = (16)", "defcompression = (2)", "defcompression = (2048)", "defcompression = (2056)", "defcompression = (2057)", "defcompression = (2058)", "defcompression = (2059)", "defcompression = (2060)", "defcompression = (2061)", "defcompression = (2062)", "defcompression = (2063)", "defcompression = (2064)", "defcompression = (2065)", "defcompression = (2066)", "defcompression = (2067)", "defcompression = (2068)", "defcompression = (2069)", "defcompression = (2070)", "defcompression = (2071)", "defcompression = (256)", "defcompression = (257)", "defcompression = (278)", "defcompression = (284)", "defcompression = (3)", "defcompression = (322)", "defcompression = (323)", "defcompression = (4)", "defcompression = (4096)", "defcompression = (4104)", "defcompression = (4105)", "defcompression = (4106)", "defcompression = (4107)", "defcompression = (4108)", "defcompression = (4109)", "defcompression = (4110)", "defcompression = (4111)", "defcompression = (4112)", "defcompression = (4113)", "defcompression = (4114)", "defcompression = (4115)", "defcompression = (4116)", "defcompression = (4117)", "defcompression = (4118)", "defcompression = (4119)", "defcompression = (8)", "defcompression = (bitspersample)", "defcompression = (samplesperpixel)", "defcompression = (shortv)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (11)", "defg3opts = (16)", "defg3opts = (2)", "defg3opts = (2048)", "defg3opts = (2056)", "defg3opts = (2057)", "defg3opts = (2058)", "defg3opts = (2059)", "defg3opts = (2060)", "defg3opts = (2061)", "defg3opts = (2062)", "defg3opts = (2063)", "defg3opts = (2064)", "defg3opts = (2065)", "defg3opts = (2066)", "defg3opts = (2067)", "defg3opts = (2068)", "defg3opts = (2069)", "defg3opts = (2070)", "defg3opts = (2071)", "defg3opts = (256)", "defg3opts = (257)", "defg3opts = (278)", "defg3opts = (284)", "defg3opts = (3)", "defg3opts = (322)", "defg3opts = (323)", "defg3opts = (4)", "defg3opts = (4096)", "defg3opts = (4104)", "defg3opts = (4105)", "defg3opts = (4106)", "defg3opts = (4107)", "defg3opts = (4108)", "defg3opts = (4109)", "defg3opts = (4110)", "defg3opts = (4111)", "defg3opts = (4112)", "defg3opts = (4113)", "defg3opts = (4114)", "defg3opts = (4115)", "defg3opts = (4116)", "defg3opts = (4117)", "defg3opts = (4118)", "defg3opts = (4119)", "defg3opts = (8)", "defg3opts = (l)", "defg3opts = (tl)", "defg3opts = (tw)", "defg3opts = (w)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (11)", "defpredictor = (16)", "defpredictor = (2)", "defpredictor = (2048)", "defpredictor = (2056)", "defpredictor = (2057)", "defpredictor = (2058)", "defpredictor = (2059)", "defpredictor = (2060)", "defpredictor = (2061)", "defpredictor = (2062)", "defpredictor = (2063)", "defpredictor = (2064)", "defpredictor = (2065)", "defpredictor = (2066)", "defpredictor = (2067)", "defpredictor = (2068)", "defpredictor = (2069)", "defpredictor = (2070)", "defpredictor = (2071)", "defpredictor = (256)", "defpredictor = (257)", "defpredictor = (278)", "defpredictor = (284)", "defpredictor = (3)", "defpredictor = (322)", "defpredictor = (323)", "defpredictor = (4)", "defpredictor = (4096)", "defpredictor = (4104)", "defpredictor = (4105)", "defpredictor = (4106)", "defpredictor = (4107)", "defpredictor = (4108)", "defpredictor = (4109)", "defpredictor = (4110)", "defpredictor = (4111)", "defpredictor = (4112)", "defpredictor = (4113)", "defpredictor = (4114)", "defpredictor = (4115)", "defpredictor = (4116)", "defpredictor = (4117)", "defpredictor = (4118)", "defpredictor = (4119)", "defpredictor = (8)", "defpredictor = (bitspersample)", "defpredictor = (samplesperpixel)", "defpredictor = (shortv)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (11)", "fillorder = (16)", "fillorder = (2)", "fillorder = (2048)", "fillorder = (2056)", "fillorder = (2057)", "fillorder = (2058)", "fillorder = (2059)", "fillorder = (2060)", "fillorder = (2061)", "fillorder = (2062)", "fillorder = (2063)", "fillorder = (2064)", "fillorder = (2065)", "fillorder = (2066)", "fillorder = (2067)", "fillorder = (2068)", "fillorder = (2069)", "fillorder = (2070)", "fillorder = (2071)", "fillorder = (256)", "fillorder = (257)", "fillorder = (278)", "fillorder = (284)", "fillorder = (3)", "fillorder = (322)", "fillorder = (323)", "fillorder = (4)", "fillorder = (4096)", "fillorder = (4104)", "fillorder = (4105)", "fillorder = (4106)", "fillorder = (4107)", "fillorder = (4108)", "fillorder = (4109)", "fillorder = (4110)", "fillorder = (4111)", "fillorder = (4112)", "fillorder = (4113)", "fillorder = (4114)", "fillorder = (4115)", "fillorder = (4116)", "fillorder = (4117)", "fillorder = (4118)", "fillorder = (4119)", "fillorder = (8)", "fillorder = (bitspersample)", "fillorder = (samplesperpixel)", "fillorder = (shortv)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (11)", "g3opts = (16)", "g3opts = (2)", "g3opts = (2048)", "g3opts = (2056)", "g3opts = (2057)", "g3opts = (2058)", "g3opts = (2059)", "g3opts = (2060)", "g3opts = (2061)", "g3opts = (2062)", "g3opts = (2063)", "g3opts = (2064)", "g3opts = (2065)", "g3opts = (2066)", "g3opts = (2067)", "g3opts = (2068)", "g3opts = (2069)", "g3opts = (2070)", "g3opts = (2071)", "g3opts = (256)", "g3opts = (257)", "g3opts = (278)", "g3opts = (284)", "g3opts = (3)", "g3opts = (322)", "g3opts = (323)", "g3opts = (4)", "g3opts = (4096)", "g3opts = (4104)", "g3opts = (4105)", "g3opts = (4106)", "g3opts = (4107)", "g3opts = (4108)", "g3opts = (4109)", "g3opts = (4110)", "g3opts = (4111)", "g3opts = (4112)", "g3opts = (4113)", "g3opts = (4114)", "g3opts = (4115)", "g3opts = (4116)", "g3opts = (4117)", "g3opts = (4118)", "g3opts = (4119)", "g3opts = (8)", "g3opts = (l)", "g3opts = (tl)", "g3opts = (tw)", "g3opts = (w)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (11)", "jpegcolormode = (16)", "jpegcolormode = (2)", "jpegcolormode = (2048)", "jpegcolormode = (2056)", "jpegcolormode = (2057)", "jpegcolormode = (2058)", "jpegcolormode = (2059)", "jpegcolormode = (2060)", "jpegcolormode = (2061)", "jpegcolormode = (2062)", "jpegcolormode = (2063)", "jpegcolormode = (2064)", "jpegcolormode = (2065)", "jpegcolormode = (2066)", "jpegcolormode = (2067)", "jpegcolormode = (2068)", "jpegcolormode = (2069)", "jpegcolormode = (2070)", "jpegcolormode = (2071)", "jpegcolormode = (256)", "jpegcolormode = (257)", "jpegcolormode = (278)", "jpegcolormode = (284)", "jpegcolormode = (3)", "jpegcolormode = (322)", "jpegcolormode = (323)", "jpegcolormode = (4)", "jpegcolormode = (4096)", "jpegcolormode = (4104)", "jpegcolormode = (4105)", "jpegcolormode = (4106)", "jpegcolormode = (4108)", "jpegcolormode = (4109)", "jpegcolormode = (4110)", "jpegcolormode = (4111)", "jpegcolormode = (4112)", "jpegcolormode = (4113)", "jpegcolormode = (4114)", "jpegcolormode = (4115)", "jpegcolormode = (4116)", "jpegcolormode = (4117)", "jpegcolormode = (4118)", "jpegcolormode = (4119)", "jpegcolormode = (8)", "jpegcolormode = (bychunk)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (11)", "orientation = (16)", "orientation = (2)", "orientation = (2048)", "orientation = (2056)", "orientation = (2057)", "orientation = (2058)", "orientation = (2059)", "orientation = (2060)", "orientation = (2061)", "orientation = (2062)", "orientation = (2063)", "orientation = (2064)", "orientation = (2065)", "orientation = (2066)", "orientation = (2067)", "orientation = (2068)", "orientation = (2069)", "orientation = (2070)", "orientation = (2071)", "orientation = (256)", "orientation = (257)", "orientation = (278)", "orientation = (284)", "orientation = (3)", "orientation = (322)", "orientation = (323)", "orientation = (4)", "orientation = (4096)", "orientation = (4104)", "orientation = (4105)", "orientation = (4106)", "orientation = (4107)", "orientation = (4108)", "orientation = (4109)", "orientation = (4110)", "orientation = (4111)", "orientation = (4112)", "orientation = (4113)", "orientation = (4114)", "orientation = (4115)", "orientation = (4116)", "orientation = (4117)", "orientation = (4118)", "orientation = (4119)", "orientation = (8)", "orientation = (bitspersample)", "orientation = (samplesperpixel)", "orientation = (shortv)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (11)", "outtiled = (16)", "outtiled = (2)", "outtiled = (2048)", "outtiled = (2056)", "outtiled = (2057)", "outtiled = (2058)", "outtiled = (2059)", "outtiled = (2060)", "outtiled = (2061)", "outtiled = (2062)", "outtiled = (2063)", "outtiled = (2064)", "outtiled = (2065)", "outtiled = (2066)", "outtiled = (2067)", "outtiled = (2068)", "outtiled = (2069)", "outtiled = (2070)", "outtiled = (2071)", "outtiled = (256)", "outtiled = (257)", "outtiled = (278)", "outtiled = (284)", "outtiled = (3)", "outtiled = (322)", "outtiled = (323)", "outtiled = (4)", "outtiled = (4096)", "outtiled = (4104)", "outtiled = (4105)", "outtiled = (4106)", "outtiled = (4107)", "outtiled = (4108)", "outtiled = (4109)", "outtiled = (4110)", "outtiled = (4111)", "outtiled = (4112)", "outtiled = (4113)", "outtiled = (4114)", "outtiled = (4115)", "outtiled = (4116)", "outtiled = (4117)", "outtiled = (4118)", "outtiled = (4119)", "outtiled = (8)", "outtiled = (bychunk)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (11)", "pageNum = (16)", "pageNum = (2)", "pageNum = (2048)", "pageNum = (2056)", "pageNum = (2057)", "pageNum = (2058)", "pageNum = (2059)", "pageNum = (2060)", "pageNum = (2061)", "pageNum = (2062)", "pageNum = (2063)", "pageNum = (2064)", "pageNum = (2065)", "pageNum = (2066)", "pageNum = (2067)", "pageNum = (2068)", "pageNum = (2069)", "pageNum = (2070)", "pageNum = (2071)", "pageNum = (256)", "pageNum = (257)", "pageNum = (278)", "pageNum = (284)", "pageNum = (3)", "pageNum = (322)", "pageNum = (323)", "pageNum = (4)", "pageNum = (4096)", "pageNum = (4104)", "pageNum = (4105)", "pageNum = (4106)", "pageNum = (4107)", "pageNum = (4108)", "pageNum = (4109)", "pageNum = (4110)", "pageNum = (4111)", "pageNum = (4112)", "pageNum = (4113)", "pageNum = (4114)", "pageNum = (4115)", "pageNum = (4116)", "pageNum = (4117)", "pageNum = (4118)", "pageNum = (4119)", "pageNum = (8)", "pageNum = (bychunk)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (11)", "predictor = (16)", "predictor = (2)", "predictor = (2048)", "predictor = (2056)", "predictor = (2057)", "predictor = (2058)", "predictor = (2059)", "predictor = (2060)", "predictor = (2061)", "predictor = (2062)", "predictor = (2063)", "predictor = (2064)", "predictor = (2065)", "predictor = (2066)", "predictor = (2067)", "predictor = (2068)", "predictor = (2069)", "predictor = (2070)", "predictor = (2071)", "predictor = (256)", "predictor = (257)", "predictor = (278)", "predictor = (284)", "predictor = (3)", "predictor = (322)", "predictor = (323)", "predictor = (4)", "predictor = (4096)", "predictor = (4104)", "predictor = (4105)", "predictor = (4106)", "predictor = (4107)", "predictor = (4108)", "predictor = (4109)", "predictor = (4110)", "predictor = (4111)", "predictor = (4112)", "predictor = (4113)", "predictor = (4114)", "predictor = (4115)", "predictor = (4116)", "predictor = (4117)", "predictor = (4118)", "predictor = (4119)", "predictor = (8)", "predictor = (bitspersample)", "predictor = (samplesperpixel)", "predictor = (shortv)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (11)", "quality = (16)", "quality = (2)", "quality = (2048)", "quality = (2056)", "quality = (2057)", "quality = (2058)", "quality = (2059)", "quality = (2060)", "quality = (2061)", "quality = (2062)", "quality = (2063)", "quality = (2064)", "quality = (2065)", "quality = (2066)", "quality = (2067)", "quality = (2068)", "quality = (2069)", "quality = (2070)", "quality = (2071)", "quality = (256)", "quality = (257)", "quality = (278)", "quality = (284)", "quality = (3)", "quality = (322)", "quality = (323)", "quality = (4)", "quality = (4096)", "quality = (4104)", "quality = (4105)", "quality = (4106)", "quality = (4107)", "quality = (4108)", "quality = (4109)", "quality = (4110)", "quality = (4111)", "quality = (4112)", "quality = (4113)", "quality = (4114)", "quality = (4115)", "quality = (4116)", "quality = (4117)", "quality = (4118)", "quality = (4119)", "quality = (8)", "quality = (bychunk)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (11)", "rowsperstrip = (16)", "rowsperstrip = (2)", "rowsperstrip = (2048)", "rowsperstrip = (2056)", "rowsperstrip = (2057)", "rowsperstrip = (2058)", "rowsperstrip = (2059)", "rowsperstrip = (2060)", "rowsperstrip = (2061)", "rowsperstrip = (2062)", "rowsperstrip = (2063)", "rowsperstrip = (2064)", "rowsperstrip = (2065)", "rowsperstrip = (2066)", "rowsperstrip = (2067)", "rowsperstrip = (2068)", "rowsperstrip = (2069)", "rowsperstrip = (2070)", "rowsperstrip = (2071)", "rowsperstrip = (256)", "rowsperstrip = (257)", "rowsperstrip = (278)", "rowsperstrip = (284)", "rowsperstrip = (3)", "rowsperstrip = (322)", "rowsperstrip = (323)", "rowsperstrip = (4)", "rowsperstrip = (4096)", "rowsperstrip = (4104)", "rowsperstrip = (4105)", "rowsperstrip = (4106)", "rowsperstrip = (4107)", "rowsperstrip = (4108)", "rowsperstrip = (4109)", "rowsperstrip = (4110)", "rowsperstrip = (4111)", "rowsperstrip = (4112)", "rowsperstrip = (4113)", "rowsperstrip = (4114)", "rowsperstrip = (4115)", "rowsperstrip = (4116)", "rowsperstrip = (4117)", "rowsperstrip = (4118)", "rowsperstrip = (4119)", "rowsperstrip = (8)", "rowsperstrip = (l)", "rowsperstrip = (tl)", "rowsperstrip = (tw)", "rowsperstrip = (w)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (11)", "tilelength = (16)", "tilelength = (2)", "tilelength = (2048)", "tilelength = (2056)", "tilelength = (2057)", "tilelength = (2058)", "tilelength = (2059)", "tilelength = (2060)", "tilelength = (2061)", "tilelength = (2062)", "tilelength = (2063)", "tilelength = (2064)", "tilelength = (2065)", "tilelength = (2066)", "tilelength = (2067)", "tilelength = (2068)", "tilelength = (2069)", "tilelength = (2070)", "tilelength = (2071)", "tilelength = (256)", "tilelength = (257)", "tilelength = (278)", "tilelength = (284)", "tilelength = (3)", "tilelength = (322)", "tilelength = (323)", "tilelength = (4)", "tilelength = (4096)", "tilelength = (4104)", "tilelength = (4105)", "tilelength = (4106)", "tilelength = (4107)", "tilelength = (4108)", "tilelength = (4109)", "tilelength = (4110)", "tilelength = (4111)", "tilelength = (4112)", "tilelength = (4113)", "tilelength = (4114)", "tilelength = (4115)", "tilelength = (4116)", "tilelength = (4117)", "tilelength = (4118)", "tilelength = (4119)", "tilelength = (8)", "tilelength = (l)", "tilelength = (tl)", "tilelength = (tw)", "tilelength = (w)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (11)", "tilewidth = (16)", "tilewidth = (2)", "tilewidth = (2048)", "tilewidth = (2056)", "tilewidth = (2057)", "tilewidth = (2058)", "tilewidth = (2059)", "tilewidth = (2060)", "tilewidth = (2061)", "tilewidth = (2062)", "tilewidth = (2063)", "tilewidth = (2064)", "tilewidth = (2065)", "tilewidth = (2066)", "tilewidth = (2067)", "tilewidth = (2068)", "tilewidth = (2069)", "tilewidth = (2070)", "tilewidth = (2071)", "tilewidth = (256)", "tilewidth = (257)", "tilewidth = (278)", "tilewidth = (284)", "tilewidth = (3)", "tilewidth = (322)", "tilewidth = (323)", "tilewidth = (4)", "tilewidth = (4096)", "tilewidth = (4104)", "tilewidth = (4105)", "tilewidth = (4106)", "tilewidth = (4107)", "tilewidth = (4108)", "tilewidth = (4109)", "tilewidth = (4110)", "tilewidth = (4111)", "tilewidth = (4112)", "tilewidth = (4113)", "tilewidth = (4114)", "tilewidth = (4115)", "tilewidth = (4116)", "tilewidth = (4117)", "tilewidth = (4118)", "tilewidth = (4119)", "tilewidth = (8)", "tilewidth = (l)", "tilewidth = (tl)", "tilewidth = (tw)", "tilewidth = (w)", "tl = (-1)", "tl = (0)", "tl = (1)", "tl = (11)", "tl = (16)", "tl = (2)", "tl = (2048)", "tl = (2056)", "tl = (2057)", "tl = (2058)", "tl = (2059)", "tl = (2060)", "tl = (2061)", "tl = (2062)", "tl = (2063)", "tl = (2064)", "tl = (2065)", "tl = (2066)", "tl = (2067)", "tl = (2068)", "tl = (2069)", "tl = (2070)", "tl = (2071)", "tl = (256)", "tl = (257)", "tl = (278)", "tl = (284)", "tl = (3)", "tl = (322)", "tl = (323)", "tl = (4)", "tl = (4096)", "tl = (4104)", "tl = (4105)", "tl = (4106)", "tl = (4107)", "tl = (4108)", "tl = (4109)", "tl = (4110)", "tl = (4111)", "tl = (4112)", "tl = (4113)", "tl = (4114)", "tl = (4115)", "tl = (4116)", "tl = (4117)", "tl = (4118)", "tl = (4119)", "tl = (8)", "tl = (l)", "tl = (tl)", "tl = (tw)", "tl = (w)", "tw = (-1)", "tw = (0)", "tw = (1)", "tw = (11)", "tw = (16)", "tw = (2)", "tw = (2048)", "tw = (2056)", "tw = (2057)", "tw = (2058)", "tw = (2059)", "tw = (2060)", "tw = (2061)", "tw = (2062)", "tw = (2063)", "tw = (2064)", "tw = (2065)", "tw = (2066)", "tw = (2067)", "tw = (2068)", "tw = (2069)", "tw = (2070)", "tw = (2071)", "tw = (256)", "tw = (257)", "tw = (278)", "tw = (284)", "tw = (3)", "tw = (322)", "tw = (323)", "tw = (4)", "tw = (4096)", "tw = (4104)", "tw = (4105)", "tw = (4106)", "tw = (4107)", "tw = (4108)", "tw = (4109)", "tw = (4110)", "tw = (4111)", "tw = (4112)", "tw = (4113)", "tw = (4114)", "tw = (4115)", "tw = (4116)", "tw = (4117)", "tw = (4118)", "tw = (4119)", "tw = (8)", "tw = (l)", "tw = (tl)", "tw = (tw)", "tw = (w)", "(void)TIFFGetField(in, 284, &shortv)", "TIFFGetField(in, 256, &w)", "TIFFGetField(in, 257, &l)", "TIFFGetField(in, 322, &tw)", "TIFFGetField(in, 323, &tl)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "bychunk = (tw == tilewidth && tl == tilelength)", "bychunk = (tw == w && tl == rowsperstrip)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "tl = l", "tw = w", "usage()", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return 0;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpBiasedContig2Contig;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContig2ContigByRow;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContig2SeparateByRow;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigStrips2ContigTiles;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigStrips2SeparateTiles;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2ContigStrips;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2ContigTiles;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2SeparateStrips;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2SeparateTiles;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpDecodedStrips;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparate2ContigByRow;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparate2SeparateByRow;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateStrips2ContigTiles;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateStrips2SeparateTiles;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2ContigStrips;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2ContigTiles;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2SeparateStrips;\n", "if (__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2SeparateTiles;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	2,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	3,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	4,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	5,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	6,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	7,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	8,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	9,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	10,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	11,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	12,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	13,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	14,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	15,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	16,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	17,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	18,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	19,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	20,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	21,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	22,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	23,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	24,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	25,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	26,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	27,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	28,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	29,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	30,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	31,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	32,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	33,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	34,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	35,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	36,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	37,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	38,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	39,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	40,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	41,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	42,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	43,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	44,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	45,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	46,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	47,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	48,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	49,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	50,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	51,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	52,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	53,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	54,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	55,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	56,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	57,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	58,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	59,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	60,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	61,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	62,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	63,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	64,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	65,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	66,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	67,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	68,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	69,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	70,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	71,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	72,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	73,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	74,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	75,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	76,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	77,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	78,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	79,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	80,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	81,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	82,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	83,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	84,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	85,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	86,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	87,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	88,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	89,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	90,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	91,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	92,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	93,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	94,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	95,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	96,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	97,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	98,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	99,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	100,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	101,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	102,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	103,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	104,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	105,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	106,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	107,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	108,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	109,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	110,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	111,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	112,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	113,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	114,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	115,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	116,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	117,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	118,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	119,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	120,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	121,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	122,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	123,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	124,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	125,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	126,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	127,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	128,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	129,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	130,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	131,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	132,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	133,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	134,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	135,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	136,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	137,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	138,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	139,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	140,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	141,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	142,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	143,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	144,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	145,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	146,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	147,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	148,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	149,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	150,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	151,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	152,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	153,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	154,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	155,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	156,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	157,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	158,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	159,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	160,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	161,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	162,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	163,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	164,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	165,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	166,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	167,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	168,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	169,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	170,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	171,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	172,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	173,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	174,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	175,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	176,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	177,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	178,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	179,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	180,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	181,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	182,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	183,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	184,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	185,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	186,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	187,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	188,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	189,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	190,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	191,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	192,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	193,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	194,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	195,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	196,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	197,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	198,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	199,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	200,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	201,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	202,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	203,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	204,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	205,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	206,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	207,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	208,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	209,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	210,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	211,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	212,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	213,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	214,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	215,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	216,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	217,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	218,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	219,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	220,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	221,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	222,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	223,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	224,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	225,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	226,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	227,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	228,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	229,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	230,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	231,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	232,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	233,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	234,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	235,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	236,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	237,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	238,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	239,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	240,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	241,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	242,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	243,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	244,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	245,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	246,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	247,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	248,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	249,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	250,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	251,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	252,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	253,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	254,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	255,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	256,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	257,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	258,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	259,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	260,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	261,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	262,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	263,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	264,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	265,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	266,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	267,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	268,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	269,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	270,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	271,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	272,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	273,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	274,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	275,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	276,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	277,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	278,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	279,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	280,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	281,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	282,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	283,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	284,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	285,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	286,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	287,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	288,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	289,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	290,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	291,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	292,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	293,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	294,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	295,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	296,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	297,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	298,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	299,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	300,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	301,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	302,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	303,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	304,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	305,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	306,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	307,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	308,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	309,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	310,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	311,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	312,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	313,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	314,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	315,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	316,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	317,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	318,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	319,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	320,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	321,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	322,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	323,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	324,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	325,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	326,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	327,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	328,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	329,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	330,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	331,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	332,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	333,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	334,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	335,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	336,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	337,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	338,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	339,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	340,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	341,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	342,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	343,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	344,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	345,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	346,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	347,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	348,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	349,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	350,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	351,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	352,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	353,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	354,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	355,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	356,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	357,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	358,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	359,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	360,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	361,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	362,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	363,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	364,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	365,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	366,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	367,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	368,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	369,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	370,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	371,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	372,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	373,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	374,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	375,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	376,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	377,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	378,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	379,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	380,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	381,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	382,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	383,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	384,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	385,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	386,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	387,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	388,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	389,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	390,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	391,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	392,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	393,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	394,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	395,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	396,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	397,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	398,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	399,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	400,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	401,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	402,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	403,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	404,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	405,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	406,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	407,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	408,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	409,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	410,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	411,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	412,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	413,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	414,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	415,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	416,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	417,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	418,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	419,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	420,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	421,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	422,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	423,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	424,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	425,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	426,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	427,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	428,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	429,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	430,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	431,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	432,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	433,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	434,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	435,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	436,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	437,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	438,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	439,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	440,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	441,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	442,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	443,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	444,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	445,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	446,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	447,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	448,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	449,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	450,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	451,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	452,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	453,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	454,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	455,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	456,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	457,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	458,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	459,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	460,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	461,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	462,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	463,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	464,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	465,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	466,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	467,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	468,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	469,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	470,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	471,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	472,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	473,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	474,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	475,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	476,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	477,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	478,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	479,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	480,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	481,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	482,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	483,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	484,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	485,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	486,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	487,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	488,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	489,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	490,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	491,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	492,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	493,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	494,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	495,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	496,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	497,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	498,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	499,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	500,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	501,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	502,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	503,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	504,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	505,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	506,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	507,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	508,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	509,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	510,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	511,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	512,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	513,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	514,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	515,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	516,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	517,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	518,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	519,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	520,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	521,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	522,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	523,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	524,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	525,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	526,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	527,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	528,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	529,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	530,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	531,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	532,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	533,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	534,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	535,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	536,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	537,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	538,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	539,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	540,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	541,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	542,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	543,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	544,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	545,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	546,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	547,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	548,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	549,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	550,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	551,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	552,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	553,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	554,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	555,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	556,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	557,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	558,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	559,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	560,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	561,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	562,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	563,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	564,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	565,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	566,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	567,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	568,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	569,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	570,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	571,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	572,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	573,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	574,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	575,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	576,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	577,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	578,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	579,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	580,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	581,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	582,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	583,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	584,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	585,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	586,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	587,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	588,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	589,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	590,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	591,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	592,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	593,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	594,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	595,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	596,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	597,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	598,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	599,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	600,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	601,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	602,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	603,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	604,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	605,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	606,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	607,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	608,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	609,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	610,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	611,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	612,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	613,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	614,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	615,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	616,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	617,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	618,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	619,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	620,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	621,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	622,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	623,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	624,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	625,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	626,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	627,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	628,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	629,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	630,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	631,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	632,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	633,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	634,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	635,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	636,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	637,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	638,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	639,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	640,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	641,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	642,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	643,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	644,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	645,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	646,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	647,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	648,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	649,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	650,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	651,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	652,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	653,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	654,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	655,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	656,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	657,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	658,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	659,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	660,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	661,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	662,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	663,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	664,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	665,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	666,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	667,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	668,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	669,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	670,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	671,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	672,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	673,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	674,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	675,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	676,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	677,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	678,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	679,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	680,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	681,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	682,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	683,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	684,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	685,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	686,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	687,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	688,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	689,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	690,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	691,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	692,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	693,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	694,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	695,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	696,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	697,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	698,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	699,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	700,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	701,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	702,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	703,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	704,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	705,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	706,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	707,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	708,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	709,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	710,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	711,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	712,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	713,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	714,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	715,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	716,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	717,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	718,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	719,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	720,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	721,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	722,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	723,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	724,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	725,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	726,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	727,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	728,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	729,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	730,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	731,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	732,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	733,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	734,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	735,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	736,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	737,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	738,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	739,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	740,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	741,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	742,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	743,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	744,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	745,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	746,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	747,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	748,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	749,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	750,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	751,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	752,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	753,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	754,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	755,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	756,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	757,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	758,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	759,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	760,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	761,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	762,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	763,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	764,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	765,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	766,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	767,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	768,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	769,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	770,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	771,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	772,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	773,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	774,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	775,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	776,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	777,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	778,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	779,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	780,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	781,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	782,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	783,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	784,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	785,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	786,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	787,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	788,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	789,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	790,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	791,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	792,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	793,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	794,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	795,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	796,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	797,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	798,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	799,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	800,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	801,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	802,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	803,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	804,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	805,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	806,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	807,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	808,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	809,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	810,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	811,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	812,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	813,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	814,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	815,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	816,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	817,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	818,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	819,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	820,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	821,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	822,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	823,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	824,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	825,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	826,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	827,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	828,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	829,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	830,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	831,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	832,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	833,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	834,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	835,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	836,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	837,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	838,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	839,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	840,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	841,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	842,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	843,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	844,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	845,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	846,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	847,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	848,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	849,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	850,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	851,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	852,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	853,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	854,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	855,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	856,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	857,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	858,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	859,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	860,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	861,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	862,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	863,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	864,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	865,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	866,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	867,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	868,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	869,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	870,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	871,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	872,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	873,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	874,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	875,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	876,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	877,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	878,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	879,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	880,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	881,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	882,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	883,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	884,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	885,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	886,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	887,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	888,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	889,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	890,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	891,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	892,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	893,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	894,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	895,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	896,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	897,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	898,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	899,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	900,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	901,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	902,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	903,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	904,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	905,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	906,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	907,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	908,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	909,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	910,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	911,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	912,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	913,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	914,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	915,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	916,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	917,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	918,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	919,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	920,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	921,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	922,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	923,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	924,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	925,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	926,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	927,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	928,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	929,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	930,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	931,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	932,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	933,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	934,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	935,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	936,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	937,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	938,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	939,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	940,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	941,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	942,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	943,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	944,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	945,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	946,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	947,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	948,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	949,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	950,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	951,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	952,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	953,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	954,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	955,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	956,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	957,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	958,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	959,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	960,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	961,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	962,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	963,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	964,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	965,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	966,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	967,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	968,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	969,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	970,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	971,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	972,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	973,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	974,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	975,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	976,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	977,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	978,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	979,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	980,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	981,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	982,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	983,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	984,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	985,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	986,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	987,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	988,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	989,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	990,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	991,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	992,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	993,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	994,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	995,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	996,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	997,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	998,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	999,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1000,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1001,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1002,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1003,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1004,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1005,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1006,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1007,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1008,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1009,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1010,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1011,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1012,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1013,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1014,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1015,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1016,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1017,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1018,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1019,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1020,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1021,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1022,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1023,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1024,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1025,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1026,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1027,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1028,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1029,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1030,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1031,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1032,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1033,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1034,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1035,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1036,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1037,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1038,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1039,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1040,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1041,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1042,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1043,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1044,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1045,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1046,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1047,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1048,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1049,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1050,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1051,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1052,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1053,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1054,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1055,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1056,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1057,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1058,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1059,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1060,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1061,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1062,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1063,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1064,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1065,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1066,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1067,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1068,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1069,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1070,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1071,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1072,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1073,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1074,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1075,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1076,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1077,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1078,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1079,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1080,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1081,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1082,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1083,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1084,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1085,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1086,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1087,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1088,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1089,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1090,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1091,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1092,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1093,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1094,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1095,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1096,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1097,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1098,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1099,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1100,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1101,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1102,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1103,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1104,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1105,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1106,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1107,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1108,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1109,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1110,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1111,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1112,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1113,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1114,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1115,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1116,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1117,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1118,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1119,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1120,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1121,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1122,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1123,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1124,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1125,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1126,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1127,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1128,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	1129,
									"scores":	[-11.083172325501337, -12.806426935501339, -12.353350195501339, -12.01993502550134, -12.163698613501339, -11.830921435501338, -12.387278906801338, -11.964986472501341, -11.936609543501341, -12.906357315501339, -12.05161251550134, -11.963088355501339, -13.501426582501338, -13.501426582501338, -12.906357315501339, -12.271281315501339]
								}, {
									"case":	1130,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1131,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1132,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1133,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1134,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1135,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1136,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1137,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1138,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1139,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1140,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1141,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1142,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1143,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1144,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1145,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1146,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}, {
									"case":	1147,
									"scores":	[-10.340203025501339, -12.063457635501338, -11.61038089550134, -11.27696572550134, -11.42072931350134, -11.08795213550134, -11.64430960680134, -11.222017172501339, -11.193640243501338, -12.163388015501338, -11.308643215501341, -11.220119055501339, -12.758457282501338, -12.758457282501338, -12.163388015501338, -11.528312015501339]
								}]
						}, {
							"switch":	77,
							"types":	[[], [], [1], [], [], [], [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846], [], [395, 396, 397, 398, 399, 400, 401], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], [], [], [394]],
							"begin_line":	1662,
							"begin_column":	2,
							"end_line":	1662,
							"end_column":	41,
							"patch_codes":	["if (!__is_neg(\"\", \"L1662\", 16, &(in), sizeof (in), &(w), sizeof (w), &(l), sizeof (l), &(out), sizeof (out), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(bychunk), sizeof (bychunk), &(config), sizeof (config), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    TIFFGetField(in, 256, &w);\n", "TIFFReadEncodedStrip(in, 256, &w, -1)", "TIFFReadEncodedStrip(in, 256, &w, 0)", "TIFFReadEncodedStrip(in, 256, &w, 1)", "TIFFReadEncodedStrip(in, 256, &w, 11)", "TIFFReadEncodedStrip(in, 256, &w, 16)", "TIFFReadEncodedStrip(in, 256, &w, 2)", "TIFFReadEncodedStrip(in, 256, &w, 2048)", "TIFFReadEncodedStrip(in, 256, &w, 2056)", "TIFFReadEncodedStrip(in, 256, &w, 2057)", "TIFFReadEncodedStrip(in, 256, &w, 2058)", "TIFFReadEncodedStrip(in, 256, &w, 2059)", "TIFFReadEncodedStrip(in, 256, &w, 2060)", "TIFFReadEncodedStrip(in, 256, &w, 2061)", "TIFFReadEncodedStrip(in, 256, &w, 2062)", "TIFFReadEncodedStrip(in, 256, &w, 2063)", "TIFFReadEncodedStrip(in, 256, &w, 2064)", "TIFFReadEncodedStrip(in, 256, &w, 2065)", "TIFFReadEncodedStrip(in, 256, &w, 2066)", "TIFFReadEncodedStrip(in, 256, &w, 2067)", "TIFFReadEncodedStrip(in, 256, &w, 2068)", "TIFFReadEncodedStrip(in, 256, &w, 2069)", "TIFFReadEncodedStrip(in, 256, &w, 2070)", "TIFFReadEncodedStrip(in, 256, &w, 2071)", "TIFFReadEncodedStrip(in, 256, &w, 256)", "TIFFReadEncodedStrip(in, 256, &w, 257)", "TIFFReadEncodedStrip(in, 256, &w, 278)", "TIFFReadEncodedStrip(in, 256, &w, 284)", "TIFFReadEncodedStrip(in, 256, &w, 3)", "TIFFReadEncodedStrip(in, 256, &w, 322)", "TIFFReadEncodedStrip(in, 256, &w, 323)", "TIFFReadEncodedStrip(in, 256, &w, 4)", "TIFFReadEncodedStrip(in, 256, &w, 4096)", "TIFFReadEncodedStrip(in, 256, &w, 4104)", "TIFFReadEncodedStrip(in, 256, &w, 4105)", "TIFFReadEncodedStrip(in, 256, &w, 4106)", "TIFFReadEncodedStrip(in, 256, &w, 4107)", "TIFFReadEncodedStrip(in, 256, &w, 4108)", "TIFFReadEncodedStrip(in, 256, &w, 4109)", "TIFFReadEncodedStrip(in, 256, &w, 4110)", "TIFFReadEncodedStrip(in, 256, &w, 4111)", "TIFFReadEncodedStrip(in, 256, &w, 4112)", "TIFFReadEncodedStrip(in, 256, &w, 4113)", "TIFFReadEncodedStrip(in, 256, &w, 4114)", "TIFFReadEncodedStrip(in, 256, &w, 4115)", "TIFFReadEncodedStrip(in, 256, &w, 4116)", "TIFFReadEncodedStrip(in, 256, &w, 4117)", "TIFFReadEncodedStrip(in, 256, &w, 4118)", "TIFFReadEncodedStrip(in, 256, &w, 4119)", "TIFFReadEncodedStrip(in, 256, &w, 8)", "TIFFReadEncodedTile(in, 256, &w, -1)", "TIFFReadEncodedTile(in, 256, &w, 0)", "TIFFReadEncodedTile(in, 256, &w, 1)", "TIFFReadEncodedTile(in, 256, &w, 11)", "TIFFReadEncodedTile(in, 256, &w, 16)", "TIFFReadEncodedTile(in, 256, &w, 2)", "TIFFReadEncodedTile(in, 256, &w, 2048)", "TIFFReadEncodedTile(in, 256, &w, 2056)", "TIFFReadEncodedTile(in, 256, &w, 2057)", "TIFFReadEncodedTile(in, 256, &w, 2058)", "TIFFReadEncodedTile(in, 256, &w, 2059)", "TIFFReadEncodedTile(in, 256, &w, 2060)", "TIFFReadEncodedTile(in, 256, &w, 2061)", "TIFFReadEncodedTile(in, 256, &w, 2062)", "TIFFReadEncodedTile(in, 256, &w, 2063)", "TIFFReadEncodedTile(in, 256, &w, 2064)", "TIFFReadEncodedTile(in, 256, &w, 2065)", "TIFFReadEncodedTile(in, 256, &w, 2066)", "TIFFReadEncodedTile(in, 256, &w, 2067)", "TIFFReadEncodedTile(in, 256, &w, 2068)", "TIFFReadEncodedTile(in, 256, &w, 2069)", "TIFFReadEncodedTile(in, 256, &w, 2070)", "TIFFReadEncodedTile(in, 256, &w, 2071)", "TIFFReadEncodedTile(in, 256, &w, 256)", "TIFFReadEncodedTile(in, 256, &w, 257)", "TIFFReadEncodedTile(in, 256, &w, 278)", "TIFFReadEncodedTile(in, 256, &w, 284)", "TIFFReadEncodedTile(in, 256, &w, 3)", "TIFFReadEncodedTile(in, 256, &w, 322)", "TIFFReadEncodedTile(in, 256, &w, 323)", "TIFFReadEncodedTile(in, 256, &w, 4)", "TIFFReadEncodedTile(in, 256, &w, 4096)", "TIFFReadEncodedTile(in, 256, &w, 4104)", "TIFFReadEncodedTile(in, 256, &w, 4105)", "TIFFReadEncodedTile(in, 256, &w, 4106)", "TIFFReadEncodedTile(in, 256, &w, 4107)", "TIFFReadEncodedTile(in, 256, &w, 4108)", "TIFFReadEncodedTile(in, 256, &w, 4109)", "TIFFReadEncodedTile(in, 256, &w, 4110)", "TIFFReadEncodedTile(in, 256, &w, 4111)", "TIFFReadEncodedTile(in, 256, &w, 4112)", "TIFFReadEncodedTile(in, 256, &w, 4113)", "TIFFReadEncodedTile(in, 256, &w, 4114)", "TIFFReadEncodedTile(in, 256, &w, 4115)", "TIFFReadEncodedTile(in, 256, &w, 4116)", "TIFFReadEncodedTile(in, 256, &w, 4117)", "TIFFReadEncodedTile(in, 256, &w, 4118)", "TIFFReadEncodedTile(in, 256, &w, 4119)", "TIFFReadEncodedTile(in, 256, &w, 8)", "TIFFReadRawStrip(in, 256, &w, -1)", "TIFFReadRawStrip(in, 256, &w, 0)", "TIFFReadRawStrip(in, 256, &w, 1)", "TIFFReadRawStrip(in, 256, &w, 11)", "TIFFReadRawStrip(in, 256, &w, 16)", "TIFFReadRawStrip(in, 256, &w, 2)", "TIFFReadRawStrip(in, 256, &w, 2048)", "TIFFReadRawStrip(in, 256, &w, 2056)", "TIFFReadRawStrip(in, 256, &w, 2057)", "TIFFReadRawStrip(in, 256, &w, 2058)", "TIFFReadRawStrip(in, 256, &w, 2059)", "TIFFReadRawStrip(in, 256, &w, 2060)", "TIFFReadRawStrip(in, 256, &w, 2061)", "TIFFReadRawStrip(in, 256, &w, 2062)", "TIFFReadRawStrip(in, 256, &w, 2063)", "TIFFReadRawStrip(in, 256, &w, 2064)", "TIFFReadRawStrip(in, 256, &w, 2065)", "TIFFReadRawStrip(in, 256, &w, 2066)", "TIFFReadRawStrip(in, 256, &w, 2067)", "TIFFReadRawStrip(in, 256, &w, 2068)", "TIFFReadRawStrip(in, 256, &w, 2069)", "TIFFReadRawStrip(in, 256, &w, 2070)", "TIFFReadRawStrip(in, 256, &w, 2071)", "TIFFReadRawStrip(in, 256, &w, 256)", "TIFFReadRawStrip(in, 256, &w, 257)", "TIFFReadRawStrip(in, 256, &w, 278)", "TIFFReadRawStrip(in, 256, &w, 284)", "TIFFReadRawStrip(in, 256, &w, 3)", "TIFFReadRawStrip(in, 256, &w, 322)", "TIFFReadRawStrip(in, 256, &w, 323)", "TIFFReadRawStrip(in, 256, &w, 4)", "TIFFReadRawStrip(in, 256, &w, 4096)", "TIFFReadRawStrip(in, 256, &w, 4104)", "TIFFReadRawStrip(in, 256, &w, 4105)", "TIFFReadRawStrip(in, 256, &w, 4106)", "TIFFReadRawStrip(in, 256, &w, 4107)", "TIFFReadRawStrip(in, 256, &w, 4108)", "TIFFReadRawStrip(in, 256, &w, 4109)", "TIFFReadRawStrip(in, 256, &w, 4110)", "TIFFReadRawStrip(in, 256, &w, 4111)", "TIFFReadRawStrip(in, 256, &w, 4112)", "TIFFReadRawStrip(in, 256, &w, 4113)", "TIFFReadRawStrip(in, 256, &w, 4114)", "TIFFReadRawStrip(in, 256, &w, 4115)", "TIFFReadRawStrip(in, 256, &w, 4116)", "TIFFReadRawStrip(in, 256, &w, 4117)", "TIFFReadRawStrip(in, 256, &w, 4118)", "TIFFReadRawStrip(in, 256, &w, 4119)", "TIFFReadRawStrip(in, 256, &w, 8)", "TIFFReadRawTile(in, 256, &w, -1)", "TIFFReadRawTile(in, 256, &w, 0)", "TIFFReadRawTile(in, 256, &w, 1)", "TIFFReadRawTile(in, 256, &w, 11)", "TIFFReadRawTile(in, 256, &w, 16)", "TIFFReadRawTile(in, 256, &w, 2)", "TIFFReadRawTile(in, 256, &w, 2048)", "TIFFReadRawTile(in, 256, &w, 2056)", "TIFFReadRawTile(in, 256, &w, 2057)", "TIFFReadRawTile(in, 256, &w, 2058)", "TIFFReadRawTile(in, 256, &w, 2059)", "TIFFReadRawTile(in, 256, &w, 2060)", "TIFFReadRawTile(in, 256, &w, 2061)", "TIFFReadRawTile(in, 256, &w, 2062)", "TIFFReadRawTile(in, 256, &w, 2063)", "TIFFReadRawTile(in, 256, &w, 2064)", "TIFFReadRawTile(in, 256, &w, 2065)", "TIFFReadRawTile(in, 256, &w, 2066)", "TIFFReadRawTile(in, 256, &w, 2067)", "TIFFReadRawTile(in, 256, &w, 2068)", "TIFFReadRawTile(in, 256, &w, 2069)", "TIFFReadRawTile(in, 256, &w, 2070)", "TIFFReadRawTile(in, 256, &w, 2071)", "TIFFReadRawTile(in, 256, &w, 256)", "TIFFReadRawTile(in, 256, &w, 257)", "TIFFReadRawTile(in, 256, &w, 278)", "TIFFReadRawTile(in, 256, &w, 284)", "TIFFReadRawTile(in, 256, &w, 3)", "TIFFReadRawTile(in, 256, &w, 322)", "TIFFReadRawTile(in, 256, &w, 323)", "TIFFReadRawTile(in, 256, &w, 4)", "TIFFReadRawTile(in, 256, &w, 4096)", "TIFFReadRawTile(in, 256, &w, 4104)", "TIFFReadRawTile(in, 256, &w, 4105)", "TIFFReadRawTile(in, 256, &w, 4106)", "TIFFReadRawTile(in, 256, &w, 4107)", "TIFFReadRawTile(in, 256, &w, 4108)", "TIFFReadRawTile(in, 256, &w, 4109)", "TIFFReadRawTile(in, 256, &w, 4110)", "TIFFReadRawTile(in, 256, &w, 4111)", "TIFFReadRawTile(in, 256, &w, 4112)", "TIFFReadRawTile(in, 256, &w, 4113)", "TIFFReadRawTile(in, 256, &w, 4114)", "TIFFReadRawTile(in, 256, &w, 4115)", "TIFFReadRawTile(in, 256, &w, 4116)", "TIFFReadRawTile(in, 256, &w, 4117)", "TIFFReadRawTile(in, 256, &w, 4118)", "TIFFReadRawTile(in, 256, &w, 4119)", "TIFFReadRawTile(in, 256, &w, 8)", "TIFFWriteEncodedStrip(in, 256, &w, -1)", "TIFFWriteEncodedStrip(in, 256, &w, 0)", "TIFFWriteEncodedStrip(in, 256, &w, 1)", "TIFFWriteEncodedStrip(in, 256, &w, 11)", "TIFFWriteEncodedStrip(in, 256, &w, 16)", "TIFFWriteEncodedStrip(in, 256, &w, 2)", "TIFFWriteEncodedStrip(in, 256, &w, 2048)", "TIFFWriteEncodedStrip(in, 256, &w, 2056)", "TIFFWriteEncodedStrip(in, 256, &w, 2057)", "TIFFWriteEncodedStrip(in, 256, &w, 2058)", "TIFFWriteEncodedStrip(in, 256, &w, 2059)", "TIFFWriteEncodedStrip(in, 256, &w, 2060)", "TIFFWriteEncodedStrip(in, 256, &w, 2061)", "TIFFWriteEncodedStrip(in, 256, &w, 2062)", "TIFFWriteEncodedStrip(in, 256, &w, 2063)", "TIFFWriteEncodedStrip(in, 256, &w, 2064)", "TIFFWriteEncodedStrip(in, 256, &w, 2065)", "TIFFWriteEncodedStrip(in, 256, &w, 2066)", "TIFFWriteEncodedStrip(in, 256, &w, 2067)", "TIFFWriteEncodedStrip(in, 256, &w, 2068)", "TIFFWriteEncodedStrip(in, 256, &w, 2069)", "TIFFWriteEncodedStrip(in, 256, &w, 2070)", "TIFFWriteEncodedStrip(in, 256, &w, 2071)", "TIFFWriteEncodedStrip(in, 256, &w, 256)", "TIFFWriteEncodedStrip(in, 256, &w, 257)", "TIFFWriteEncodedStrip(in, 256, &w, 278)", "TIFFWriteEncodedStrip(in, 256, &w, 284)", "TIFFWriteEncodedStrip(in, 256, &w, 3)", "TIFFWriteEncodedStrip(in, 256, &w, 322)", "TIFFWriteEncodedStrip(in, 256, &w, 323)", "TIFFWriteEncodedStrip(in, 256, &w, 4)", "TIFFWriteEncodedStrip(in, 256, &w, 4096)", "TIFFWriteEncodedStrip(in, 256, &w, 4104)", "TIFFWriteEncodedStrip(in, 256, &w, 4105)", "TIFFWriteEncodedStrip(in, 256, &w, 4106)", "TIFFWriteEncodedStrip(in, 256, &w, 4107)", "TIFFWriteEncodedStrip(in, 256, &w, 4108)", "TIFFWriteEncodedStrip(in, 256, &w, 4109)", "TIFFWriteEncodedStrip(in, 256, &w, 4110)", "TIFFWriteEncodedStrip(in, 256, &w, 4111)", "TIFFWriteEncodedStrip(in, 256, &w, 4112)", "TIFFWriteEncodedStrip(in, 256, &w, 4113)", "TIFFWriteEncodedStrip(in, 256, &w, 4114)", "TIFFWriteEncodedStrip(in, 256, &w, 4115)", "TIFFWriteEncodedStrip(in, 256, &w, 4116)", "TIFFWriteEncodedStrip(in, 256, &w, 4117)", "TIFFWriteEncodedStrip(in, 256, &w, 4118)", "TIFFWriteEncodedStrip(in, 256, &w, 4119)", "TIFFWriteEncodedStrip(in, 256, &w, 8)", "TIFFWriteEncodedTile(in, 256, &w, -1)", "TIFFWriteEncodedTile(in, 256, &w, 0)", "TIFFWriteEncodedTile(in, 256, &w, 1)", "TIFFWriteEncodedTile(in, 256, &w, 11)", "TIFFWriteEncodedTile(in, 256, &w, 16)", "TIFFWriteEncodedTile(in, 256, &w, 2)", "TIFFWriteEncodedTile(in, 256, &w, 2048)", "TIFFWriteEncodedTile(in, 256, &w, 2056)", "TIFFWriteEncodedTile(in, 256, &w, 2057)", "TIFFWriteEncodedTile(in, 256, &w, 2058)", "TIFFWriteEncodedTile(in, 256, &w, 2059)", "TIFFWriteEncodedTile(in, 256, &w, 2060)", "TIFFWriteEncodedTile(in, 256, &w, 2061)", "TIFFWriteEncodedTile(in, 256, &w, 2062)", "TIFFWriteEncodedTile(in, 256, &w, 2063)", "TIFFWriteEncodedTile(in, 256, &w, 2064)", "TIFFWriteEncodedTile(in, 256, &w, 2065)", "TIFFWriteEncodedTile(in, 256, &w, 2066)", "TIFFWriteEncodedTile(in, 256, &w, 2067)", "TIFFWriteEncodedTile(in, 256, &w, 2068)", "TIFFWriteEncodedTile(in, 256, &w, 2069)", "TIFFWriteEncodedTile(in, 256, &w, 2070)", "TIFFWriteEncodedTile(in, 256, &w, 2071)", "TIFFWriteEncodedTile(in, 256, &w, 256)", "TIFFWriteEncodedTile(in, 256, &w, 257)", "TIFFWriteEncodedTile(in, 256, &w, 278)", "TIFFWriteEncodedTile(in, 256, &w, 284)", "TIFFWriteEncodedTile(in, 256, &w, 3)", "TIFFWriteEncodedTile(in, 256, &w, 322)", "TIFFWriteEncodedTile(in, 256, &w, 323)", "TIFFWriteEncodedTile(in, 256, &w, 4)", "TIFFWriteEncodedTile(in, 256, &w, 4096)", "TIFFWriteEncodedTile(in, 256, &w, 4104)", "TIFFWriteEncodedTile(in, 256, &w, 4105)", "TIFFWriteEncodedTile(in, 256, &w, 4106)", "TIFFWriteEncodedTile(in, 256, &w, 4107)", "TIFFWriteEncodedTile(in, 256, &w, 4108)", "TIFFWriteEncodedTile(in, 256, &w, 4109)", "TIFFWriteEncodedTile(in, 256, &w, 4110)", "TIFFWriteEncodedTile(in, 256, &w, 4111)", "TIFFWriteEncodedTile(in, 256, &w, 4112)", "TIFFWriteEncodedTile(in, 256, &w, 4113)", "TIFFWriteEncodedTile(in, 256, &w, 4114)", "TIFFWriteEncodedTile(in, 256, &w, 4115)", "TIFFWriteEncodedTile(in, 256, &w, 4116)", "TIFFWriteEncodedTile(in, 256, &w, 4117)", "TIFFWriteEncodedTile(in, 256, &w, 4118)", "TIFFWriteEncodedTile(in, 256, &w, 4119)", "TIFFWriteEncodedTile(in, 256, &w, 8)", "TIFFWriteRawStrip(in, 256, &w, -1)", "TIFFWriteRawStrip(in, 256, &w, 0)", "TIFFWriteRawStrip(in, 256, &w, 1)", "TIFFWriteRawStrip(in, 256, &w, 11)", "TIFFWriteRawStrip(in, 256, &w, 16)", "TIFFWriteRawStrip(in, 256, &w, 2)", "TIFFWriteRawStrip(in, 256, &w, 2048)", "TIFFWriteRawStrip(in, 256, &w, 2056)", "TIFFWriteRawStrip(in, 256, &w, 2057)", "TIFFWriteRawStrip(in, 256, &w, 2058)", "TIFFWriteRawStrip(in, 256, &w, 2059)", "TIFFWriteRawStrip(in, 256, &w, 2060)", "TIFFWriteRawStrip(in, 256, &w, 2061)", "TIFFWriteRawStrip(in, 256, &w, 2062)", "TIFFWriteRawStrip(in, 256, &w, 2063)", "TIFFWriteRawStrip(in, 256, &w, 2064)", "TIFFWriteRawStrip(in, 256, &w, 2065)", "TIFFWriteRawStrip(in, 256, &w, 2066)", "TIFFWriteRawStrip(in, 256, &w, 2067)", "TIFFWriteRawStrip(in, 256, &w, 2068)", "TIFFWriteRawStrip(in, 256, &w, 2069)", "TIFFWriteRawStrip(in, 256, &w, 2070)", "TIFFWriteRawStrip(in, 256, &w, 2071)", "TIFFWriteRawStrip(in, 256, &w, 256)", "TIFFWriteRawStrip(in, 256, &w, 257)", "TIFFWriteRawStrip(in, 256, &w, 278)", "TIFFWriteRawStrip(in, 256, &w, 284)", "TIFFWriteRawStrip(in, 256, &w, 3)", "TIFFWriteRawStrip(in, 256, &w, 322)", "TIFFWriteRawStrip(in, 256, &w, 323)", "TIFFWriteRawStrip(in, 256, &w, 4)", "TIFFWriteRawStrip(in, 256, &w, 4096)", "TIFFWriteRawStrip(in, 256, &w, 4104)", "TIFFWriteRawStrip(in, 256, &w, 4105)", "TIFFWriteRawStrip(in, 256, &w, 4106)", "TIFFWriteRawStrip(in, 256, &w, 4107)", "TIFFWriteRawStrip(in, 256, &w, 4108)", "TIFFWriteRawStrip(in, 256, &w, 4109)", "TIFFWriteRawStrip(in, 256, &w, 4110)", "TIFFWriteRawStrip(in, 256, &w, 4111)", "TIFFWriteRawStrip(in, 256, &w, 4112)", "TIFFWriteRawStrip(in, 256, &w, 4113)", "TIFFWriteRawStrip(in, 256, &w, 4114)", "TIFFWriteRawStrip(in, 256, &w, 4115)", "TIFFWriteRawStrip(in, 256, &w, 4116)", "TIFFWriteRawStrip(in, 256, &w, 4117)", "TIFFWriteRawStrip(in, 256, &w, 4118)", "TIFFWriteRawStrip(in, 256, &w, 4119)", "TIFFWriteRawStrip(in, 256, &w, 8)", "TIFFWriteRawTile(in, 256, &w, -1)", "TIFFWriteRawTile(in, 256, &w, 0)", "TIFFWriteRawTile(in, 256, &w, 1)", "TIFFWriteRawTile(in, 256, &w, 11)", "TIFFWriteRawTile(in, 256, &w, 16)", "TIFFWriteRawTile(in, 256, &w, 2)", "TIFFWriteRawTile(in, 256, &w, 2048)", "TIFFWriteRawTile(in, 256, &w, 2056)", "TIFFWriteRawTile(in, 256, &w, 2057)", "TIFFWriteRawTile(in, 256, &w, 2058)", "TIFFWriteRawTile(in, 256, &w, 2059)", "TIFFWriteRawTile(in, 256, &w, 2060)", "TIFFWriteRawTile(in, 256, &w, 2061)", "TIFFWriteRawTile(in, 256, &w, 2062)", "TIFFWriteRawTile(in, 256, &w, 2063)", "TIFFWriteRawTile(in, 256, &w, 2064)", "TIFFWriteRawTile(in, 256, &w, 2065)", "TIFFWriteRawTile(in, 256, &w, 2066)", "TIFFWriteRawTile(in, 256, &w, 2067)", "TIFFWriteRawTile(in, 256, &w, 2068)", "TIFFWriteRawTile(in, 256, &w, 2069)", "TIFFWriteRawTile(in, 256, &w, 2070)", "TIFFWriteRawTile(in, 256, &w, 2071)", "TIFFWriteRawTile(in, 256, &w, 256)", "TIFFWriteRawTile(in, 256, &w, 257)", "TIFFWriteRawTile(in, 256, &w, 278)", "TIFFWriteRawTile(in, 256, &w, 284)", "TIFFWriteRawTile(in, 256, &w, 3)", "TIFFWriteRawTile(in, 256, &w, 322)", "TIFFWriteRawTile(in, 256, &w, 323)", "TIFFWriteRawTile(in, 256, &w, 4)", "TIFFWriteRawTile(in, 256, &w, 4096)", "TIFFWriteRawTile(in, 256, &w, 4104)", "TIFFWriteRawTile(in, 256, &w, 4105)", "TIFFWriteRawTile(in, 256, &w, 4106)", "TIFFWriteRawTile(in, 256, &w, 4107)", "TIFFWriteRawTile(in, 256, &w, 4108)", "TIFFWriteRawTile(in, 256, &w, 4109)", "TIFFWriteRawTile(in, 256, &w, 4110)", "TIFFWriteRawTile(in, 256, &w, 4111)", "TIFFWriteRawTile(in, 256, &w, 4112)", "TIFFWriteRawTile(in, 256, &w, 4113)", "TIFFWriteRawTile(in, 256, &w, 4114)", "TIFFWriteRawTile(in, 256, &w, 4115)", "TIFFWriteRawTile(in, 256, &w, 4116)", "TIFFWriteRawTile(in, 256, &w, 4117)", "TIFFWriteRawTile(in, 256, &w, 4118)", "TIFFWriteRawTile(in, 256, &w, 4119)", "TIFFWriteRawTile(in, 256, &w, 8)", "{\n}\n", "TIFFGetFieldDefaulted(in, 256, &w)", "TIFFReadRGBAStrip(in, 256, &w)", "TIFFSetField(in, 256, &w)", "TIFFVGetField(in, 256, &w)", "TIFFVGetFieldDefaulted(in, 256, &w)", "TIFFVSetField(in, 256, &w)", "printf(in, 256, &w)", "TIFFGetField((&bitspersample), 256, &w)", "TIFFGetField((&bychunk), 256, &w)", "TIFFGetField((&in), 256, &w)", "TIFFGetField((&l), 256, &w)", "TIFFGetField((&out), 256, &w)", "TIFFGetField((&samplesperpixel), 256, &w)", "TIFFGetField((&shortv), 256, &w)", "TIFFGetField((&tl), 256, &w)", "TIFFGetField((&tw), 256, &w)", "TIFFGetField((&w), 256, &w)", "TIFFGetField((in), 256, &w)", "TIFFGetField((out), 256, &w)", "TIFFGetField(in, (0 * bitspersample), &w)", "TIFFGetField(in, (0 * bychunk), &w)", "TIFFGetField(in, (0 * l), &w)", "TIFFGetField(in, (0 * samplesperpixel), &w)", "TIFFGetField(in, (0 * shortv), &w)", "TIFFGetField(in, (0 * tl), &w)", "TIFFGetField(in, (0 * tw), &w)", "TIFFGetField(in, (0 * w), &w)", "TIFFGetField(in, (0), &w)", "TIFFGetField(in, (bitspersample != 0), &w)", "TIFFGetField(in, (bitspersample != bychunk), &w)", "TIFFGetField(in, (bitspersample != l), &w)", "TIFFGetField(in, (bitspersample != samplesperpixel), &w)", "TIFFGetField(in, (bitspersample != shortv), &w)", "TIFFGetField(in, (bitspersample != tl), &w)", "TIFFGetField(in, (bitspersample != tw), &w)", "TIFFGetField(in, (bitspersample != w), &w)", "TIFFGetField(in, (bitspersample * bychunk), &w)", "TIFFGetField(in, (bitspersample * l), &w)", "TIFFGetField(in, (bitspersample * samplesperpixel), &w)", "TIFFGetField(in, (bitspersample * shortv), &w)", "TIFFGetField(in, (bitspersample * tl), &w)", "TIFFGetField(in, (bitspersample * tw), &w)", "TIFFGetField(in, (bitspersample * w), &w)", "TIFFGetField(in, (bitspersample + 0), &w)", "TIFFGetField(in, (bitspersample + bychunk), &w)", "TIFFGetField(in, (bitspersample + l), &w)", "TIFFGetField(in, (bitspersample + samplesperpixel), &w)", "TIFFGetField(in, (bitspersample + shortv), &w)", "TIFFGetField(in, (bitspersample + tl), &w)", "TIFFGetField(in, (bitspersample + tw), &w)", "TIFFGetField(in, (bitspersample + w), &w)", "TIFFGetField(in, (bitspersample - 0), &w)", "TIFFGetField(in, (bitspersample - bychunk), &w)", "TIFFGetField(in, (bitspersample - l), &w)", "TIFFGetField(in, (bitspersample - samplesperpixel), &w)", "TIFFGetField(in, (bitspersample - shortv), &w)", "TIFFGetField(in, (bitspersample - tl), &w)", "TIFFGetField(in, (bitspersample - tw), &w)", "TIFFGetField(in, (bitspersample - w), &w)", "TIFFGetField(in, (bitspersample == 0), &w)", "TIFFGetField(in, (bitspersample == bychunk), &w)", "TIFFGetField(in, (bitspersample == l), &w)", "TIFFGetField(in, (bitspersample == samplesperpixel), &w)", "TIFFGetField(in, (bitspersample == shortv), &w)", "TIFFGetField(in, (bitspersample == tl), &w)", "TIFFGetField(in, (bitspersample == tw), &w)", "TIFFGetField(in, (bitspersample == w), &w)", "TIFFGetField(in, (bychunk != 0), &w)", "TIFFGetField(in, (bychunk * bitspersample), &w)", "TIFFGetField(in, (bychunk * l), &w)", "TIFFGetField(in, (bychunk * samplesperpixel), &w)", "TIFFGetField(in, (bychunk * shortv), &w)", "TIFFGetField(in, (bychunk * tl), &w)", "TIFFGetField(in, (bychunk * tw), &w)", "TIFFGetField(in, (bychunk * w), &w)", "TIFFGetField(in, (bychunk + 0), &w)", "TIFFGetField(in, (bychunk - 0), &w)", "TIFFGetField(in, (bychunk == 0), &w)", "TIFFGetField(in, (in != 0), &w)", "TIFFGetField(in, (in != out), &w)", "TIFFGetField(in, (in == 0), &w)", "TIFFGetField(in, (in == out), &w)", "TIFFGetField(in, (l != 0), &w)", "TIFFGetField(in, (l != bychunk), &w)", "TIFFGetField(in, (l != tl), &w)", "TIFFGetField(in, (l != tw), &w)", "TIFFGetField(in, (l * bitspersample), &w)", "TIFFGetField(in, (l * bychunk), &w)", "TIFFGetField(in, (l * samplesperpixel), &w)", "TIFFGetField(in, (l * shortv), &w)", "TIFFGetField(in, (l * tl), &w)", "TIFFGetField(in, (l * tw), &w)", "TIFFGetField(in, (l * w), &w)", "TIFFGetField(in, (l + 0), &w)", "TIFFGetField(in, (l + bychunk), &w)", "TIFFGetField(in, (l + tl), &w)", "TIFFGetField(in, (l + tw), &w)", "TIFFGetField(in, (l - 0), &w)", "TIFFGetField(in, (l - bychunk), &w)", "TIFFGetField(in, (l - tl), &w)", "TIFFGetField(in, (l - tw), &w)", "TIFFGetField(in, (l == 0), &w)", "TIFFGetField(in, (l == bychunk), &w)", "TIFFGetField(in, (l == tl), &w)", "TIFFGetField(in, (l == tw), &w)", "TIFFGetField(in, (out != 0), &w)", "TIFFGetField(in, (out == 0), &w)", "TIFFGetField(in, (samplesperpixel != 0), &w)", "TIFFGetField(in, (samplesperpixel != bychunk), &w)", "TIFFGetField(in, (samplesperpixel != l), &w)", "TIFFGetField(in, (samplesperpixel != shortv), &w)", "TIFFGetField(in, (samplesperpixel != tl), &w)", "TIFFGetField(in, (samplesperpixel != tw), &w)", "TIFFGetField(in, (samplesperpixel != w), &w)", "TIFFGetField(in, (samplesperpixel * bitspersample), &w)", "TIFFGetField(in, (samplesperpixel * bychunk), &w)", "TIFFGetField(in, (samplesperpixel * l), &w)", "TIFFGetField(in, (samplesperpixel * shortv), &w)", "TIFFGetField(in, (samplesperpixel * tl), &w)", "TIFFGetField(in, (samplesperpixel * tw), &w)", "TIFFGetField(in, (samplesperpixel * w), &w)", "TIFFGetField(in, (samplesperpixel + 0), &w)", "TIFFGetField(in, (samplesperpixel + bychunk), &w)", "TIFFGetField(in, (samplesperpixel + l), &w)", "TIFFGetField(in, (samplesperpixel + shortv), &w)", "TIFFGetField(in, (samplesperpixel + tl), &w)", "TIFFGetField(in, (samplesperpixel + tw), &w)", "TIFFGetField(in, (samplesperpixel + w), &w)", "TIFFGetField(in, (samplesperpixel - 0), &w)", "TIFFGetField(in, (samplesperpixel - bychunk), &w)", "TIFFGetField(in, (samplesperpixel - l), &w)", "TIFFGetField(in, (samplesperpixel - shortv), &w)", "TIFFGetField(in, (samplesperpixel - tl), &w)", "TIFFGetField(in, (samplesperpixel - tw), &w)", "TIFFGetField(in, (samplesperpixel - w), &w)", "TIFFGetField(in, (samplesperpixel == 0), &w)", "TIFFGetField(in, (samplesperpixel == bychunk), &w)", "TIFFGetField(in, (samplesperpixel == l), &w)", "TIFFGetField(in, (samplesperpixel == shortv), &w)", "TIFFGetField(in, (samplesperpixel == tl), &w)", "TIFFGetField(in, (samplesperpixel == tw), &w)", "TIFFGetField(in, (samplesperpixel == w), &w)", "TIFFGetField(in, (shortv != 0), &w)", "TIFFGetField(in, (shortv != bychunk), &w)", "TIFFGetField(in, (shortv != l), &w)", "TIFFGetField(in, (shortv != tl), &w)", "TIFFGetField(in, (shortv != tw), &w)", "TIFFGetField(in, (shortv != w), &w)", "TIFFGetField(in, (shortv * bitspersample), &w)", "TIFFGetField(in, (shortv * bychunk), &w)", "TIFFGetField(in, (shortv * l), &w)", "TIFFGetField(in, (shortv * samplesperpixel), &w)", "TIFFGetField(in, (shortv * tl), &w)", "TIFFGetField(in, (shortv * tw), &w)", "TIFFGetField(in, (shortv * w), &w)", "TIFFGetField(in, (shortv + 0), &w)", "TIFFGetField(in, (shortv + bychunk), &w)", "TIFFGetField(in, (shortv + l), &w)", "TIFFGetField(in, (shortv + tl), &w)", "TIFFGetField(in, (shortv + tw), &w)", "TIFFGetField(in, (shortv + w), &w)", "TIFFGetField(in, (shortv - 0), &w)", "TIFFGetField(in, (shortv - bychunk), &w)", "TIFFGetField(in, (shortv - l), &w)", "TIFFGetField(in, (shortv - tl), &w)", "TIFFGetField(in, (shortv - tw), &w)", "TIFFGetField(in, (shortv - w), &w)", "TIFFGetField(in, (shortv == 0), &w)", "TIFFGetField(in, (shortv == bychunk), &w)", "TIFFGetField(in, (shortv == l), &w)", "TIFFGetField(in, (shortv == tl), &w)", "TIFFGetField(in, (shortv == tw), &w)", "TIFFGetField(in, (shortv == w), &w)", "TIFFGetField(in, (tl != 0), &w)", "TIFFGetField(in, (tl != bychunk), &w)", "TIFFGetField(in, (tl * bitspersample), &w)", "TIFFGetField(in, (tl * bychunk), &w)", "TIFFGetField(in, (tl * l), &w)", "TIFFGetField(in, (tl * samplesperpixel), &w)", "TIFFGetField(in, (tl * shortv), &w)", "TIFFGetField(in, (tl * tw), &w)", "TIFFGetField(in, (tl * w), &w)", "TIFFGetField(in, (tl + 0), &w)", "TIFFGetField(in, (tl + bychunk), &w)", "TIFFGetField(in, (tl - 0), &w)", "TIFFGetField(in, (tl - bychunk), &w)", "TIFFGetField(in, (tl == 0), &w)", "TIFFGetField(in, (tl == bychunk), &w)", "TIFFGetField(in, (tw != 0), &w)", "TIFFGetField(in, (tw != bychunk), &w)", "TIFFGetField(in, (tw != tl), &w)", "TIFFGetField(in, (tw * bitspersample), &w)", "TIFFGetField(in, (tw * bychunk), &w)", "TIFFGetField(in, (tw * l), &w)", "TIFFGetField(in, (tw * samplesperpixel), &w)", "TIFFGetField(in, (tw * shortv), &w)", "TIFFGetField(in, (tw * tl), &w)", "TIFFGetField(in, (tw * w), &w)", "TIFFGetField(in, (tw + 0), &w)", "TIFFGetField(in, (tw + bychunk), &w)", "TIFFGetField(in, (tw + tl), &w)", "TIFFGetField(in, (tw - 0), &w)", "TIFFGetField(in, (tw - bychunk), &w)", "TIFFGetField(in, (tw - tl), &w)", "TIFFGetField(in, (tw == 0), &w)", "TIFFGetField(in, (tw == bychunk), &w)", "TIFFGetField(in, (tw == tl), &w)", "TIFFGetField(in, (w != 0), &w)", "TIFFGetField(in, (w != bychunk), &w)", "TIFFGetField(in, (w != l), &w)", "TIFFGetField(in, (w != tl), &w)", "TIFFGetField(in, (w != tw), &w)", "TIFFGetField(in, (w * bitspersample), &w)", "TIFFGetField(in, (w * bychunk), &w)", "TIFFGetField(in, (w * l), &w)", "TIFFGetField(in, (w * samplesperpixel), &w)", "TIFFGetField(in, (w * shortv), &w)", "TIFFGetField(in, (w * tl), &w)", "TIFFGetField(in, (w * tw), &w)", "TIFFGetField(in, (w + 0), &w)", "TIFFGetField(in, (w + bychunk), &w)", "TIFFGetField(in, (w + l), &w)", "TIFFGetField(in, (w + tl), &w)", "TIFFGetField(in, (w + tw), &w)", "TIFFGetField(in, (w - 0), &w)", "TIFFGetField(in, (w - bychunk), &w)", "TIFFGetField(in, (w - l), &w)", "TIFFGetField(in, (w - tl), &w)", "TIFFGetField(in, (w - tw), &w)", "TIFFGetField(in, (w == 0), &w)", "TIFFGetField(in, (w == bychunk), &w)", "TIFFGetField(in, (w == l), &w)", "TIFFGetField(in, (w == tl), &w)", "TIFFGetField(in, (w == tw), &w)", "TIFFGetField(in, 256, &(0 * bitspersample))", "TIFFGetField(in, 256, &(0 * bychunk))", "TIFFGetField(in, 256, &(0 * l))", "TIFFGetField(in, 256, &(0 * samplesperpixel))", "TIFFGetField(in, 256, &(0 * shortv))", "TIFFGetField(in, 256, &(0 * tl))", "TIFFGetField(in, 256, &(0 * tw))", "TIFFGetField(in, 256, &(0 * w))", "TIFFGetField(in, 256, &(bitspersample != 0))", "TIFFGetField(in, 256, &(bitspersample != bychunk))", "TIFFGetField(in, 256, &(bitspersample != l))", "TIFFGetField(in, 256, &(bitspersample != samplesperpixel))", "TIFFGetField(in, 256, &(bitspersample != shortv))", "TIFFGetField(in, 256, &(bitspersample != tl))", "TIFFGetField(in, 256, &(bitspersample != tw))", "TIFFGetField(in, 256, &(bitspersample != w))", "TIFFGetField(in, 256, &(bitspersample * bychunk))", "TIFFGetField(in, 256, &(bitspersample * l))", "TIFFGetField(in, 256, &(bitspersample * samplesperpixel))", "TIFFGetField(in, 256, &(bitspersample * shortv))", "TIFFGetField(in, 256, &(bitspersample * tl))", "TIFFGetField(in, 256, &(bitspersample * tw))", "TIFFGetField(in, 256, &(bitspersample * w))", "TIFFGetField(in, 256, &(bitspersample + 0))", "TIFFGetField(in, 256, &(bitspersample + bychunk))", "TIFFGetField(in, 256, &(bitspersample + l))", "TIFFGetField(in, 256, &(bitspersample + samplesperpixel))", "TIFFGetField(in, 256, &(bitspersample + shortv))", "TIFFGetField(in, 256, &(bitspersample + tl))", "TIFFGetField(in, 256, &(bitspersample + tw))", "TIFFGetField(in, 256, &(bitspersample + w))", "TIFFGetField(in, 256, &(bitspersample - 0))", "TIFFGetField(in, 256, &(bitspersample - bychunk))", "TIFFGetField(in, 256, &(bitspersample - l))", "TIFFGetField(in, 256, &(bitspersample - samplesperpixel))", "TIFFGetField(in, 256, &(bitspersample - shortv))", "TIFFGetField(in, 256, &(bitspersample - tl))", "TIFFGetField(in, 256, &(bitspersample - tw))", "TIFFGetField(in, 256, &(bitspersample - w))", "TIFFGetField(in, 256, &(bitspersample == 0))", "TIFFGetField(in, 256, &(bitspersample == bychunk))", "TIFFGetField(in, 256, &(bitspersample == l))", "TIFFGetField(in, 256, &(bitspersample == samplesperpixel))", "TIFFGetField(in, 256, &(bitspersample == shortv))", "TIFFGetField(in, 256, &(bitspersample == tl))", "TIFFGetField(in, 256, &(bitspersample == tw))", "TIFFGetField(in, 256, &(bitspersample == w))", "TIFFGetField(in, 256, &(bychunk != 0))", "TIFFGetField(in, 256, &(bychunk * bitspersample))", "TIFFGetField(in, 256, &(bychunk * l))", "TIFFGetField(in, 256, &(bychunk * samplesperpixel))", "TIFFGetField(in, 256, &(bychunk * shortv))", "TIFFGetField(in, 256, &(bychunk * tl))", "TIFFGetField(in, 256, &(bychunk * tw))", "TIFFGetField(in, 256, &(bychunk * w))", "TIFFGetField(in, 256, &(bychunk + 0))", "TIFFGetField(in, 256, &(bychunk - 0))", "TIFFGetField(in, 256, &(bychunk == 0))", "TIFFGetField(in, 256, &(in != 0))", "TIFFGetField(in, 256, &(in != out))", "TIFFGetField(in, 256, &(in == 0))", "TIFFGetField(in, 256, &(in == out))", "TIFFGetField(in, 256, &(l != 0))", "TIFFGetField(in, 256, &(l != bychunk))", "TIFFGetField(in, 256, &(l != tl))", "TIFFGetField(in, 256, &(l != tw))", "TIFFGetField(in, 256, &(l * bitspersample))", "TIFFGetField(in, 256, &(l * bychunk))", "TIFFGetField(in, 256, &(l * samplesperpixel))", "TIFFGetField(in, 256, &(l * shortv))", "TIFFGetField(in, 256, &(l * tl))", "TIFFGetField(in, 256, &(l * tw))", "TIFFGetField(in, 256, &(l * w))", "TIFFGetField(in, 256, &(l + 0))", "TIFFGetField(in, 256, &(l + bychunk))", "TIFFGetField(in, 256, &(l + tl))", "TIFFGetField(in, 256, &(l + tw))", "TIFFGetField(in, 256, &(l - 0))", "TIFFGetField(in, 256, &(l - bychunk))", "TIFFGetField(in, 256, &(l - tl))", "TIFFGetField(in, 256, &(l - tw))", "TIFFGetField(in, 256, &(l == 0))", "TIFFGetField(in, 256, &(l == bychunk))", "TIFFGetField(in, 256, &(l == tl))", "TIFFGetField(in, 256, &(l == tw))", "TIFFGetField(in, 256, &(l))", "TIFFGetField(in, 256, &(out != 0))", "TIFFGetField(in, 256, &(out == 0))", "TIFFGetField(in, 256, &(samplesperpixel != 0))", "TIFFGetField(in, 256, &(samplesperpixel != bychunk))", "TIFFGetField(in, 256, &(samplesperpixel != l))", "TIFFGetField(in, 256, &(samplesperpixel != shortv))", "TIFFGetField(in, 256, &(samplesperpixel != tl))", "TIFFGetField(in, 256, &(samplesperpixel != tw))", "TIFFGetField(in, 256, &(samplesperpixel != w))", "TIFFGetField(in, 256, &(samplesperpixel * bitspersample))", "TIFFGetField(in, 256, &(samplesperpixel * bychunk))", "TIFFGetField(in, 256, &(samplesperpixel * l))", "TIFFGetField(in, 256, &(samplesperpixel * shortv))", "TIFFGetField(in, 256, &(samplesperpixel * tl))", "TIFFGetField(in, 256, &(samplesperpixel * tw))", "TIFFGetField(in, 256, &(samplesperpixel * w))", "TIFFGetField(in, 256, &(samplesperpixel + 0))", "TIFFGetField(in, 256, &(samplesperpixel + bychunk))", "TIFFGetField(in, 256, &(samplesperpixel + l))", "TIFFGetField(in, 256, &(samplesperpixel + shortv))", "TIFFGetField(in, 256, &(samplesperpixel + tl))", "TIFFGetField(in, 256, &(samplesperpixel + tw))", "TIFFGetField(in, 256, &(samplesperpixel + w))", "TIFFGetField(in, 256, &(samplesperpixel - 0))", "TIFFGetField(in, 256, &(samplesperpixel - bychunk))", "TIFFGetField(in, 256, &(samplesperpixel - l))", "TIFFGetField(in, 256, &(samplesperpixel - shortv))", "TIFFGetField(in, 256, &(samplesperpixel - tl))", "TIFFGetField(in, 256, &(samplesperpixel - tw))", "TIFFGetField(in, 256, &(samplesperpixel - w))", "TIFFGetField(in, 256, &(samplesperpixel == 0))", "TIFFGetField(in, 256, &(samplesperpixel == bychunk))", "TIFFGetField(in, 256, &(samplesperpixel == l))", "TIFFGetField(in, 256, &(samplesperpixel == shortv))", "TIFFGetField(in, 256, &(samplesperpixel == tl))", "TIFFGetField(in, 256, &(samplesperpixel == tw))", "TIFFGetField(in, 256, &(samplesperpixel == w))", "TIFFGetField(in, 256, &(shortv != 0))", "TIFFGetField(in, 256, &(shortv != bychunk))", "TIFFGetField(in, 256, &(shortv != l))", "TIFFGetField(in, 256, &(shortv != tl))", "TIFFGetField(in, 256, &(shortv != tw))", "TIFFGetField(in, 256, &(shortv != w))", "TIFFGetField(in, 256, &(shortv * bitspersample))", "TIFFGetField(in, 256, &(shortv * bychunk))", "TIFFGetField(in, 256, &(shortv * l))", "TIFFGetField(in, 256, &(shortv * samplesperpixel))", "TIFFGetField(in, 256, &(shortv * tl))", "TIFFGetField(in, 256, &(shortv * tw))", "TIFFGetField(in, 256, &(shortv * w))", "TIFFGetField(in, 256, &(shortv + 0))", "TIFFGetField(in, 256, &(shortv + bychunk))", "TIFFGetField(in, 256, &(shortv + l))", "TIFFGetField(in, 256, &(shortv + tl))", "TIFFGetField(in, 256, &(shortv + tw))", "TIFFGetField(in, 256, &(shortv + w))", "TIFFGetField(in, 256, &(shortv - 0))", "TIFFGetField(in, 256, &(shortv - bychunk))", "TIFFGetField(in, 256, &(shortv - l))", "TIFFGetField(in, 256, &(shortv - tl))", "TIFFGetField(in, 256, &(shortv - tw))", "TIFFGetField(in, 256, &(shortv - w))", "TIFFGetField(in, 256, &(shortv == 0))", "TIFFGetField(in, 256, &(shortv == bychunk))", "TIFFGetField(in, 256, &(shortv == l))", "TIFFGetField(in, 256, &(shortv == tl))", "TIFFGetField(in, 256, &(shortv == tw))", "TIFFGetField(in, 256, &(shortv == w))", "TIFFGetField(in, 256, &(tl != 0))", "TIFFGetField(in, 256, &(tl != bychunk))", "TIFFGetField(in, 256, &(tl * bitspersample))", "TIFFGetField(in, 256, &(tl * bychunk))", "TIFFGetField(in, 256, &(tl * l))", "TIFFGetField(in, 256, &(tl * samplesperpixel))", "TIFFGetField(in, 256, &(tl * shortv))", "TIFFGetField(in, 256, &(tl * tw))", "TIFFGetField(in, 256, &(tl * w))", "TIFFGetField(in, 256, &(tl + 0))", "TIFFGetField(in, 256, &(tl + bychunk))", "TIFFGetField(in, 256, &(tl - 0))", "TIFFGetField(in, 256, &(tl - bychunk))", "TIFFGetField(in, 256, &(tl == 0))", "TIFFGetField(in, 256, &(tl == bychunk))", "TIFFGetField(in, 256, &(tl))", "TIFFGetField(in, 256, &(tw != 0))", "TIFFGetField(in, 256, &(tw != bychunk))", "TIFFGetField(in, 256, &(tw != tl))", "TIFFGetField(in, 256, &(tw * bitspersample))", "TIFFGetField(in, 256, &(tw * bychunk))", "TIFFGetField(in, 256, &(tw * l))", "TIFFGetField(in, 256, &(tw * samplesperpixel))", "TIFFGetField(in, 256, &(tw * shortv))", "TIFFGetField(in, 256, &(tw * tl))", "TIFFGetField(in, 256, &(tw * w))", "TIFFGetField(in, 256, &(tw + 0))", "TIFFGetField(in, 256, &(tw + bychunk))", "TIFFGetField(in, 256, &(tw + tl))", "TIFFGetField(in, 256, &(tw - 0))", "TIFFGetField(in, 256, &(tw - bychunk))", "TIFFGetField(in, 256, &(tw - tl))", "TIFFGetField(in, 256, &(tw == 0))", "TIFFGetField(in, 256, &(tw == bychunk))", "TIFFGetField(in, 256, &(tw == tl))", "TIFFGetField(in, 256, &(tw))", "TIFFGetField(in, 256, &(w != 0))", "TIFFGetField(in, 256, &(w != bychunk))", "TIFFGetField(in, 256, &(w != l))", "TIFFGetField(in, 256, &(w != tl))", "TIFFGetField(in, 256, &(w != tw))", "TIFFGetField(in, 256, &(w * bitspersample))", "TIFFGetField(in, 256, &(w * bychunk))", "TIFFGetField(in, 256, &(w * l))", "TIFFGetField(in, 256, &(w * samplesperpixel))", "TIFFGetField(in, 256, &(w * shortv))", "TIFFGetField(in, 256, &(w * tl))", "TIFFGetField(in, 256, &(w * tw))", "TIFFGetField(in, 256, &(w + 0))", "TIFFGetField(in, 256, &(w + bychunk))", "TIFFGetField(in, 256, &(w + l))", "TIFFGetField(in, 256, &(w + tl))", "TIFFGetField(in, 256, &(w + tw))", "TIFFGetField(in, 256, &(w - 0))", "TIFFGetField(in, 256, &(w - bychunk))", "TIFFGetField(in, 256, &(w - l))", "TIFFGetField(in, 256, &(w - tl))", "TIFFGetField(in, 256, &(w - tw))", "TIFFGetField(in, 256, &(w == 0))", "TIFFGetField(in, 256, &(w == bychunk))", "TIFFGetField(in, 256, &(w == l))", "TIFFGetField(in, 256, &(w == tl))", "TIFFGetField(in, 256, &(w == tw))", "TIFFGetField(in, 256, &(w))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-8.63768269450134, -7.88885650550134, -7.98195520550134, -9.31810454550134, -8.44200033350134, -7.77329914550134, -8.36888547650134, -7.67576551750134, -8.19456101350134, -8.86962178550134, -8.46659388550134, -8.19422082550134, -9.27806021750134, -9.27806021750134, -8.86962178550134, -8.51005350050134]
								}, {
									"case":	2,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	3,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	4,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	5,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	6,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	7,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	8,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	9,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	10,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	11,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	12,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	13,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	14,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	15,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	16,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	17,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	18,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	19,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	20,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	21,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	22,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	23,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	24,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	25,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	26,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	27,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	28,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	29,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	30,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	31,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	32,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	33,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	34,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	35,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	36,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	37,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	38,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	39,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	40,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	41,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	42,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	43,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	44,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	45,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	46,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	47,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	48,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	49,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	50,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	51,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	52,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	53,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	54,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	55,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	56,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	57,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	58,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	59,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	60,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	61,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	62,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	63,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	64,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	65,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	66,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	67,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	68,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	69,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	70,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	71,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	72,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	73,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	74,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	75,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	76,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	77,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	78,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	79,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	80,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	81,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	82,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	83,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	84,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	85,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	86,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	87,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	88,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	89,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	90,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	91,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	92,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	93,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	94,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	95,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	96,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	97,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	98,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	99,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	100,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	101,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	102,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	103,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	104,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	105,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	106,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	107,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	108,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	109,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	110,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	111,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	112,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	113,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	114,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	115,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	116,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	117,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	118,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	119,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	120,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	121,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	122,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	123,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	124,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	125,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	126,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	127,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	128,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	129,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	130,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	131,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	132,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	133,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	134,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	135,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	136,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	137,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	138,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	139,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	140,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	141,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	142,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	143,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	144,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	145,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	146,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	147,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	148,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	149,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	150,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	151,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	152,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	153,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	154,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	155,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	156,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	157,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	158,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	159,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	160,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	161,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	162,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	163,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	164,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	165,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	166,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	167,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	168,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	169,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	170,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	171,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	172,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	173,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	174,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	175,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	176,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	177,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	178,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	179,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	180,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	181,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	182,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	183,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	184,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	185,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	186,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	187,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	188,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	189,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	190,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	191,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	192,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	193,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	194,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	195,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	196,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	197,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	198,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	199,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	200,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	201,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	202,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	203,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	204,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	205,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	206,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	207,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	208,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	209,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	210,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	211,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	212,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	213,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	214,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	215,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	216,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	217,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	218,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	219,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	220,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	221,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	222,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	223,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	224,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	225,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	226,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	227,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	228,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	229,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	230,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	231,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	232,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	233,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	234,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	235,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	236,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	237,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	238,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	239,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	240,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	241,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	242,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	243,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	244,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	245,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	246,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	247,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	248,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	249,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	250,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	251,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	252,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	253,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	254,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	255,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	256,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	257,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	258,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	259,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	260,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	261,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	262,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	263,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	264,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	265,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	266,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	267,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	268,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	269,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	270,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	271,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	272,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	273,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	274,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	275,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	276,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	277,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	278,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	279,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	280,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	281,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	282,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	283,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	284,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	285,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	286,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	287,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	288,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	289,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	290,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	291,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	292,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	293,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	294,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	295,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	296,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	297,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	298,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	299,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	300,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	301,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	302,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	303,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	304,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	305,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	306,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	307,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	308,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	309,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	310,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	311,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	312,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	313,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	314,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	315,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	316,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	317,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	318,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	319,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	320,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	321,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	322,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	323,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	324,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	325,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	326,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	327,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	328,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	329,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	330,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	331,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	332,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	333,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	334,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	335,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	336,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	337,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	338,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	339,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	340,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	341,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	342,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	343,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	344,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	345,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	346,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	347,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	348,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	349,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	350,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	351,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	352,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	353,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	354,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	355,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	356,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	357,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	358,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	359,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	360,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	361,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	362,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	363,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	364,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	365,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	366,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	367,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	368,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	369,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	370,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	371,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	372,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	373,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	374,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	375,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	376,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	377,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	378,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	379,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	380,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	381,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	382,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	383,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	384,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	385,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	386,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	387,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	388,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	389,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	390,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	391,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	392,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	393,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	394,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	395,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	396,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	397,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	398,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	399,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	400,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	401,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	402,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	403,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	404,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	405,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	406,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	407,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	408,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	409,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	410,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	411,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	412,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	413,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	414,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	415,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	416,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	417,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	418,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	419,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	420,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	421,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	422,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	423,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	424,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	425,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	426,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	427,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	428,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	429,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	430,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	431,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	432,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	433,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	434,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	435,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	436,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	437,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	438,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	439,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	440,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	441,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	442,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	443,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	444,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	445,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	446,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	447,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	448,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	449,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	450,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	451,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	452,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	453,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	454,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	455,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	456,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	457,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	458,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	459,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	460,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	461,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	462,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	463,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	464,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	465,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	466,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	467,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	468,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	469,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	470,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	471,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	472,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	473,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	474,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	475,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	476,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	477,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	478,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	479,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	480,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	481,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	482,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	483,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	484,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	485,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	486,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	487,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	488,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	489,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	490,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	491,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	492,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	493,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	494,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	495,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	496,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	497,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	498,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	499,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	500,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	501,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	502,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	503,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	504,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	505,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	506,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	507,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	508,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	509,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	510,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	511,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	512,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	513,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	514,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	515,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	516,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	517,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	518,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	519,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	520,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	521,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	522,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	523,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	524,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	525,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	526,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	527,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	528,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	529,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	530,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	531,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	532,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	533,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	534,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	535,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	536,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	537,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	538,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	539,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	540,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	541,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	542,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	543,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	544,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	545,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	546,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	547,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	548,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	549,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	550,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	551,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	552,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	553,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	554,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	555,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	556,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	557,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	558,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	559,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	560,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	561,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	562,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	563,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	564,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	565,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	566,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	567,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	568,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	569,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	570,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	571,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	572,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	573,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	574,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	575,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	576,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	577,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	578,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	579,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	580,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	581,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	582,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	583,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	584,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	585,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	586,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	587,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	588,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	589,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	590,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	591,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	592,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	593,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	594,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	595,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	596,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	597,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	598,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	599,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	600,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	601,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	602,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	603,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	604,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	605,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	606,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	607,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	608,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	609,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	610,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	611,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	612,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	613,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	614,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	615,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	616,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	617,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	618,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	619,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	620,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	621,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	622,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	623,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	624,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	625,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	626,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	627,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	628,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	629,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	630,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	631,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	632,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	633,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	634,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	635,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	636,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	637,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	638,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	639,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	640,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	641,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	642,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	643,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	644,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	645,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	646,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	647,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	648,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	649,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	650,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	651,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	652,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	653,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	654,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	655,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	656,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	657,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	658,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	659,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	660,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	661,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	662,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	663,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	664,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	665,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	666,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	667,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	668,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	669,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	670,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	671,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	672,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	673,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	674,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	675,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	676,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	677,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	678,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	679,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	680,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	681,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	682,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	683,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	684,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	685,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	686,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	687,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	688,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	689,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	690,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	691,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	692,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	693,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	694,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	695,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	696,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	697,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	698,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	699,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	700,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	701,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	702,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	703,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	704,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	705,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	706,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	707,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	708,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	709,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	710,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	711,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	712,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	713,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	714,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	715,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	716,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	717,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	718,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	719,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	720,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	721,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	722,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	723,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	724,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	725,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	726,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	727,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	728,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	729,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	730,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	731,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	732,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	733,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	734,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	735,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	736,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	737,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	738,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	739,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	740,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	741,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	742,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	743,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	744,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	745,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	746,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	747,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	748,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	749,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	750,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	751,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	752,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	753,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	754,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	755,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	756,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	757,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	758,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	759,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	760,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	761,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	762,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	763,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	764,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	765,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	766,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	767,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	768,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	769,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	770,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	771,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	772,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	773,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	774,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	775,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	776,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	777,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	778,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	779,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	780,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	781,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	782,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	783,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	784,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	785,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	786,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	787,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	788,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	789,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	790,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	791,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	792,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	793,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	794,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	795,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	796,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	797,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	798,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	799,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	800,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	801,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	802,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	803,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	804,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	805,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	806,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	807,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	808,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	809,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	810,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	811,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	812,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	813,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	814,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	815,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	816,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	817,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	818,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	819,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	820,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	821,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	822,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	823,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	824,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	825,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	826,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	827,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	828,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	829,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	830,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	831,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	832,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	833,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	834,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	835,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	836,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	837,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	838,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	839,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	840,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	841,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	842,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	843,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	844,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	845,
									"scores":	[-7.2252670055013386]
								}, {
									"case":	846,
									"scores":	[-7.2252670055013386]
								}]
						}]
				}, {
					"line":	1662,
					"switches":	[{
							"switch":	78,
							"types":	[[], [], [], [], [1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147], [], [], [], [], [1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], [], [], [], [], [], []],
							"begin_line":	1663,
							"begin_column":	0,
							"end_line":	1663,
							"end_column":	0,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 256, &w)", "TIFFGetField((in), 257, &l)", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 322, &tw)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((in), 323, &tl)", "TIFFGetField((out), 256, &w)", "TIFFGetField((out), 257, &l)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 322, &tw)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetField((out), 323, &tl)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "bychunk = (-1)", "bychunk = (0)", "bychunk = (1)", "bychunk = (11)", "bychunk = (16)", "bychunk = (2)", "bychunk = (2048)", "bychunk = (2056)", "bychunk = (2057)", "bychunk = (2058)", "bychunk = (2059)", "bychunk = (2060)", "bychunk = (2061)", "bychunk = (2062)", "bychunk = (2063)", "bychunk = (2064)", "bychunk = (2065)", "bychunk = (2066)", "bychunk = (2067)", "bychunk = (2068)", "bychunk = (2069)", "bychunk = (2070)", "bychunk = (2071)", "bychunk = (256)", "bychunk = (257)", "bychunk = (278)", "bychunk = (284)", "bychunk = (3)", "bychunk = (322)", "bychunk = (323)", "bychunk = (4)", "bychunk = (4096)", "bychunk = (4104)", "bychunk = (4105)", "bychunk = (4106)", "bychunk = (4107)", "bychunk = (4108)", "bychunk = (4109)", "bychunk = (4110)", "bychunk = (4111)", "bychunk = (4112)", "bychunk = (4113)", "bychunk = (4114)", "bychunk = (4115)", "bychunk = (4116)", "bychunk = (4117)", "bychunk = (4118)", "bychunk = (4119)", "bychunk = (8)", "bychunk = (bychunk)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (11)", "comma = (16)", "comma = (2)", "comma = (2048)", "comma = (2056)", "comma = (2057)", "comma = (2058)", "comma = (2059)", "comma = (2060)", "comma = (2061)", "comma = (2062)", "comma = (2063)", "comma = (2064)", "comma = (2065)", "comma = (2066)", "comma = (2067)", "comma = (2068)", "comma = (2069)", "comma = (2070)", "comma = (2071)", "comma = (256)", "comma = (257)", "comma = (278)", "comma = (284)", "comma = (3)", "comma = (322)", "comma = (323)", "comma = (4)", "comma = (4096)", "comma = (4104)", "comma = (4105)", "comma = (4106)", "comma = (4107)", "comma = (4108)", "comma = (4109)", "comma = (4110)", "comma = (4111)", "comma = (4112)", "comma = (4113)", "comma = (4114)", "comma = (4115)", "comma = (4116)", "comma = (4117)", "comma = (4118)", "comma = (4119)", "comma = (8)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (11)", "compression = (16)", "compression = (2)", "compression = (2048)", "compression = (2056)", "compression = (2057)", "compression = (2058)", "compression = (2059)", "compression = (2060)", "compression = (2061)", "compression = (2062)", "compression = (2063)", "compression = (2064)", "compression = (2065)", "compression = (2066)", "compression = (2067)", "compression = (2068)", "compression = (2069)", "compression = (2070)", "compression = (2071)", "compression = (256)", "compression = (257)", "compression = (278)", "compression = (284)", "compression = (3)", "compression = (322)", "compression = (323)", "compression = (4)", "compression = (4096)", "compression = (4104)", "compression = (4105)", "compression = (4106)", "compression = (4107)", "compression = (4108)", "compression = (4109)", "compression = (4110)", "compression = (4111)", "compression = (4112)", "compression = (4113)", "compression = (4114)", "compression = (4115)", "compression = (4116)", "compression = (4117)", "compression = (4118)", "compression = (4119)", "compression = (8)", "compression = (bitspersample)", "compression = (samplesperpixel)", "compression = (shortv)", "config = (-1)", "config = (0)", "config = (1)", "config = (11)", "config = (16)", "config = (2)", "config = (2048)", "config = (2056)", "config = (2057)", "config = (2058)", "config = (2059)", "config = (2060)", "config = (2061)", "config = (2062)", "config = (2063)", "config = (2064)", "config = (2065)", "config = (2066)", "config = (2067)", "config = (2068)", "config = (2069)", "config = (2070)", "config = (2071)", "config = (256)", "config = (257)", "config = (278)", "config = (284)", "config = (3)", "config = (322)", "config = (323)", "config = (4)", "config = (4096)", "config = (4104)", "config = (4105)", "config = (4106)", "config = (4107)", "config = (4108)", "config = (4109)", "config = (4110)", "config = (4111)", "config = (4112)", "config = (4113)", "config = (4114)", "config = (4115)", "config = (4116)", "config = (4117)", "config = (4118)", "config = (4119)", "config = (8)", "config = (bitspersample)", "config = (samplesperpixel)", "config = (shortv)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (11)", "defcompression = (16)", "defcompression = (2)", "defcompression = (2048)", "defcompression = (2056)", "defcompression = (2057)", "defcompression = (2058)", "defcompression = (2059)", "defcompression = (2060)", "defcompression = (2061)", "defcompression = (2062)", "defcompression = (2063)", "defcompression = (2064)", "defcompression = (2065)", "defcompression = (2066)", "defcompression = (2067)", "defcompression = (2068)", "defcompression = (2069)", "defcompression = (2070)", "defcompression = (2071)", "defcompression = (256)", "defcompression = (257)", "defcompression = (278)", "defcompression = (284)", "defcompression = (3)", "defcompression = (322)", "defcompression = (323)", "defcompression = (4)", "defcompression = (4096)", "defcompression = (4104)", "defcompression = (4105)", "defcompression = (4106)", "defcompression = (4107)", "defcompression = (4108)", "defcompression = (4109)", "defcompression = (4110)", "defcompression = (4111)", "defcompression = (4112)", "defcompression = (4113)", "defcompression = (4114)", "defcompression = (4115)", "defcompression = (4116)", "defcompression = (4117)", "defcompression = (4118)", "defcompression = (4119)", "defcompression = (8)", "defcompression = (bitspersample)", "defcompression = (samplesperpixel)", "defcompression = (shortv)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (11)", "defg3opts = (16)", "defg3opts = (2)", "defg3opts = (2048)", "defg3opts = (2056)", "defg3opts = (2057)", "defg3opts = (2058)", "defg3opts = (2059)", "defg3opts = (2060)", "defg3opts = (2061)", "defg3opts = (2062)", "defg3opts = (2063)", "defg3opts = (2064)", "defg3opts = (2065)", "defg3opts = (2066)", "defg3opts = (2067)", "defg3opts = (2068)", "defg3opts = (2069)", "defg3opts = (2070)", "defg3opts = (2071)", "defg3opts = (256)", "defg3opts = (257)", "defg3opts = (278)", "defg3opts = (284)", "defg3opts = (3)", "defg3opts = (322)", "defg3opts = (323)", "defg3opts = (4)", "defg3opts = (4096)", "defg3opts = (4104)", "defg3opts = (4105)", "defg3opts = (4106)", "defg3opts = (4107)", "defg3opts = (4108)", "defg3opts = (4109)", "defg3opts = (4110)", "defg3opts = (4111)", "defg3opts = (4112)", "defg3opts = (4113)", "defg3opts = (4114)", "defg3opts = (4115)", "defg3opts = (4116)", "defg3opts = (4117)", "defg3opts = (4118)", "defg3opts = (4119)", "defg3opts = (8)", "defg3opts = (l)", "defg3opts = (tl)", "defg3opts = (tw)", "defg3opts = (w)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (11)", "defpredictor = (16)", "defpredictor = (2)", "defpredictor = (2048)", "defpredictor = (2056)", "defpredictor = (2057)", "defpredictor = (2058)", "defpredictor = (2059)", "defpredictor = (2060)", "defpredictor = (2061)", "defpredictor = (2062)", "defpredictor = (2063)", "defpredictor = (2064)", "defpredictor = (2065)", "defpredictor = (2066)", "defpredictor = (2067)", "defpredictor = (2068)", "defpredictor = (2069)", "defpredictor = (2070)", "defpredictor = (2071)", "defpredictor = (256)", "defpredictor = (257)", "defpredictor = (278)", "defpredictor = (284)", "defpredictor = (3)", "defpredictor = (322)", "defpredictor = (323)", "defpredictor = (4)", "defpredictor = (4096)", "defpredictor = (4104)", "defpredictor = (4105)", "defpredictor = (4106)", "defpredictor = (4107)", "defpredictor = (4108)", "defpredictor = (4109)", "defpredictor = (4110)", "defpredictor = (4111)", "defpredictor = (4112)", "defpredictor = (4113)", "defpredictor = (4114)", "defpredictor = (4115)", "defpredictor = (4116)", "defpredictor = (4117)", "defpredictor = (4118)", "defpredictor = (4119)", "defpredictor = (8)", "defpredictor = (bitspersample)", "defpredictor = (samplesperpixel)", "defpredictor = (shortv)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (11)", "fillorder = (16)", "fillorder = (2)", "fillorder = (2048)", "fillorder = (2056)", "fillorder = (2057)", "fillorder = (2058)", "fillorder = (2059)", "fillorder = (2060)", "fillorder = (2061)", "fillorder = (2062)", "fillorder = (2063)", "fillorder = (2064)", "fillorder = (2065)", "fillorder = (2066)", "fillorder = (2067)", "fillorder = (2068)", "fillorder = (2069)", "fillorder = (2070)", "fillorder = (2071)", "fillorder = (256)", "fillorder = (257)", "fillorder = (278)", "fillorder = (284)", "fillorder = (3)", "fillorder = (322)", "fillorder = (323)", "fillorder = (4)", "fillorder = (4096)", "fillorder = (4104)", "fillorder = (4105)", "fillorder = (4106)", "fillorder = (4107)", "fillorder = (4108)", "fillorder = (4109)", "fillorder = (4110)", "fillorder = (4111)", "fillorder = (4112)", "fillorder = (4113)", "fillorder = (4114)", "fillorder = (4115)", "fillorder = (4116)", "fillorder = (4117)", "fillorder = (4118)", "fillorder = (4119)", "fillorder = (8)", "fillorder = (bitspersample)", "fillorder = (samplesperpixel)", "fillorder = (shortv)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (11)", "g3opts = (16)", "g3opts = (2)", "g3opts = (2048)", "g3opts = (2056)", "g3opts = (2057)", "g3opts = (2058)", "g3opts = (2059)", "g3opts = (2060)", "g3opts = (2061)", "g3opts = (2062)", "g3opts = (2063)", "g3opts = (2064)", "g3opts = (2065)", "g3opts = (2066)", "g3opts = (2067)", "g3opts = (2068)", "g3opts = (2069)", "g3opts = (2070)", "g3opts = (2071)", "g3opts = (256)", "g3opts = (257)", "g3opts = (278)", "g3opts = (284)", "g3opts = (3)", "g3opts = (322)", "g3opts = (323)", "g3opts = (4)", "g3opts = (4096)", "g3opts = (4104)", "g3opts = (4105)", "g3opts = (4106)", "g3opts = (4107)", "g3opts = (4108)", "g3opts = (4109)", "g3opts = (4110)", "g3opts = (4111)", "g3opts = (4112)", "g3opts = (4113)", "g3opts = (4114)", "g3opts = (4115)", "g3opts = (4116)", "g3opts = (4117)", "g3opts = (4118)", "g3opts = (4119)", "g3opts = (8)", "g3opts = (l)", "g3opts = (tl)", "g3opts = (tw)", "g3opts = (w)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (11)", "jpegcolormode = (16)", "jpegcolormode = (2)", "jpegcolormode = (2048)", "jpegcolormode = (2056)", "jpegcolormode = (2057)", "jpegcolormode = (2058)", "jpegcolormode = (2059)", "jpegcolormode = (2060)", "jpegcolormode = (2061)", "jpegcolormode = (2062)", "jpegcolormode = (2063)", "jpegcolormode = (2064)", "jpegcolormode = (2065)", "jpegcolormode = (2066)", "jpegcolormode = (2067)", "jpegcolormode = (2068)", "jpegcolormode = (2069)", "jpegcolormode = (2070)", "jpegcolormode = (2071)", "jpegcolormode = (256)", "jpegcolormode = (257)", "jpegcolormode = (278)", "jpegcolormode = (284)", "jpegcolormode = (3)", "jpegcolormode = (322)", "jpegcolormode = (323)", "jpegcolormode = (4)", "jpegcolormode = (4096)", "jpegcolormode = (4104)", "jpegcolormode = (4105)", "jpegcolormode = (4106)", "jpegcolormode = (4108)", "jpegcolormode = (4109)", "jpegcolormode = (4110)", "jpegcolormode = (4111)", "jpegcolormode = (4112)", "jpegcolormode = (4113)", "jpegcolormode = (4114)", "jpegcolormode = (4115)", "jpegcolormode = (4116)", "jpegcolormode = (4117)", "jpegcolormode = (4118)", "jpegcolormode = (4119)", "jpegcolormode = (8)", "jpegcolormode = (bychunk)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (11)", "orientation = (16)", "orientation = (2)", "orientation = (2048)", "orientation = (2056)", "orientation = (2057)", "orientation = (2058)", "orientation = (2059)", "orientation = (2060)", "orientation = (2061)", "orientation = (2062)", "orientation = (2063)", "orientation = (2064)", "orientation = (2065)", "orientation = (2066)", "orientation = (2067)", "orientation = (2068)", "orientation = (2069)", "orientation = (2070)", "orientation = (2071)", "orientation = (256)", "orientation = (257)", "orientation = (278)", "orientation = (284)", "orientation = (3)", "orientation = (322)", "orientation = (323)", "orientation = (4)", "orientation = (4096)", "orientation = (4104)", "orientation = (4105)", "orientation = (4106)", "orientation = (4107)", "orientation = (4108)", "orientation = (4109)", "orientation = (4110)", "orientation = (4111)", "orientation = (4112)", "orientation = (4113)", "orientation = (4114)", "orientation = (4115)", "orientation = (4116)", "orientation = (4117)", "orientation = (4118)", "orientation = (4119)", "orientation = (8)", "orientation = (bitspersample)", "orientation = (samplesperpixel)", "orientation = (shortv)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (11)", "outtiled = (16)", "outtiled = (2)", "outtiled = (2048)", "outtiled = (2056)", "outtiled = (2057)", "outtiled = (2058)", "outtiled = (2059)", "outtiled = (2060)", "outtiled = (2061)", "outtiled = (2062)", "outtiled = (2063)", "outtiled = (2064)", "outtiled = (2065)", "outtiled = (2066)", "outtiled = (2067)", "outtiled = (2068)", "outtiled = (2069)", "outtiled = (2070)", "outtiled = (2071)", "outtiled = (256)", "outtiled = (257)", "outtiled = (278)", "outtiled = (284)", "outtiled = (3)", "outtiled = (322)", "outtiled = (323)", "outtiled = (4)", "outtiled = (4096)", "outtiled = (4104)", "outtiled = (4105)", "outtiled = (4106)", "outtiled = (4107)", "outtiled = (4108)", "outtiled = (4109)", "outtiled = (4110)", "outtiled = (4111)", "outtiled = (4112)", "outtiled = (4113)", "outtiled = (4114)", "outtiled = (4115)", "outtiled = (4116)", "outtiled = (4117)", "outtiled = (4118)", "outtiled = (4119)", "outtiled = (8)", "outtiled = (bychunk)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (11)", "pageNum = (16)", "pageNum = (2)", "pageNum = (2048)", "pageNum = (2056)", "pageNum = (2057)", "pageNum = (2058)", "pageNum = (2059)", "pageNum = (2060)", "pageNum = (2061)", "pageNum = (2062)", "pageNum = (2063)", "pageNum = (2064)", "pageNum = (2065)", "pageNum = (2066)", "pageNum = (2067)", "pageNum = (2068)", "pageNum = (2069)", "pageNum = (2070)", "pageNum = (2071)", "pageNum = (256)", "pageNum = (257)", "pageNum = (278)", "pageNum = (284)", "pageNum = (3)", "pageNum = (322)", "pageNum = (323)", "pageNum = (4)", "pageNum = (4096)", "pageNum = (4104)", "pageNum = (4105)", "pageNum = (4106)", "pageNum = (4107)", "pageNum = (4108)", "pageNum = (4109)", "pageNum = (4110)", "pageNum = (4111)", "pageNum = (4112)", "pageNum = (4113)", "pageNum = (4114)", "pageNum = (4115)", "pageNum = (4116)", "pageNum = (4117)", "pageNum = (4118)", "pageNum = (4119)", "pageNum = (8)", "pageNum = (bychunk)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (11)", "predictor = (16)", "predictor = (2)", "predictor = (2048)", "predictor = (2056)", "predictor = (2057)", "predictor = (2058)", "predictor = (2059)", "predictor = (2060)", "predictor = (2061)", "predictor = (2062)", "predictor = (2063)", "predictor = (2064)", "predictor = (2065)", "predictor = (2066)", "predictor = (2067)", "predictor = (2068)", "predictor = (2069)", "predictor = (2070)", "predictor = (2071)", "predictor = (256)", "predictor = (257)", "predictor = (278)", "predictor = (284)", "predictor = (3)", "predictor = (322)", "predictor = (323)", "predictor = (4)", "predictor = (4096)", "predictor = (4104)", "predictor = (4105)", "predictor = (4106)", "predictor = (4107)", "predictor = (4108)", "predictor = (4109)", "predictor = (4110)", "predictor = (4111)", "predictor = (4112)", "predictor = (4113)", "predictor = (4114)", "predictor = (4115)", "predictor = (4116)", "predictor = (4117)", "predictor = (4118)", "predictor = (4119)", "predictor = (8)", "predictor = (bitspersample)", "predictor = (samplesperpixel)", "predictor = (shortv)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (11)", "quality = (16)", "quality = (2)", "quality = (2048)", "quality = (2056)", "quality = (2057)", "quality = (2058)", "quality = (2059)", "quality = (2060)", "quality = (2061)", "quality = (2062)", "quality = (2063)", "quality = (2064)", "quality = (2065)", "quality = (2066)", "quality = (2067)", "quality = (2068)", "quality = (2069)", "quality = (2070)", "quality = (2071)", "quality = (256)", "quality = (257)", "quality = (278)", "quality = (284)", "quality = (3)", "quality = (322)", "quality = (323)", "quality = (4)", "quality = (4096)", "quality = (4104)", "quality = (4105)", "quality = (4106)", "quality = (4107)", "quality = (4108)", "quality = (4109)", "quality = (4110)", "quality = (4111)", "quality = (4112)", "quality = (4113)", "quality = (4114)", "quality = (4115)", "quality = (4116)", "quality = (4117)", "quality = (4118)", "quality = (4119)", "quality = (8)", "quality = (bychunk)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (11)", "rowsperstrip = (16)", "rowsperstrip = (2)", "rowsperstrip = (2048)", "rowsperstrip = (2056)", "rowsperstrip = (2057)", "rowsperstrip = (2058)", "rowsperstrip = (2059)", "rowsperstrip = (2060)", "rowsperstrip = (2061)", "rowsperstrip = (2062)", "rowsperstrip = (2063)", "rowsperstrip = (2064)", "rowsperstrip = (2065)", "rowsperstrip = (2066)", "rowsperstrip = (2067)", "rowsperstrip = (2068)", "rowsperstrip = (2069)", "rowsperstrip = (2070)", "rowsperstrip = (2071)", "rowsperstrip = (256)", "rowsperstrip = (257)", "rowsperstrip = (278)", "rowsperstrip = (284)", "rowsperstrip = (3)", "rowsperstrip = (322)", "rowsperstrip = (323)", "rowsperstrip = (4)", "rowsperstrip = (4096)", "rowsperstrip = (4104)", "rowsperstrip = (4105)", "rowsperstrip = (4106)", "rowsperstrip = (4107)", "rowsperstrip = (4108)", "rowsperstrip = (4109)", "rowsperstrip = (4110)", "rowsperstrip = (4111)", "rowsperstrip = (4112)", "rowsperstrip = (4113)", "rowsperstrip = (4114)", "rowsperstrip = (4115)", "rowsperstrip = (4116)", "rowsperstrip = (4117)", "rowsperstrip = (4118)", "rowsperstrip = (4119)", "rowsperstrip = (8)", "rowsperstrip = (l)", "rowsperstrip = (tl)", "rowsperstrip = (tw)", "rowsperstrip = (w)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (11)", "tilelength = (16)", "tilelength = (2)", "tilelength = (2048)", "tilelength = (2056)", "tilelength = (2057)", "tilelength = (2058)", "tilelength = (2059)", "tilelength = (2060)", "tilelength = (2061)", "tilelength = (2062)", "tilelength = (2063)", "tilelength = (2064)", "tilelength = (2065)", "tilelength = (2066)", "tilelength = (2067)", "tilelength = (2068)", "tilelength = (2069)", "tilelength = (2070)", "tilelength = (2071)", "tilelength = (256)", "tilelength = (257)", "tilelength = (278)", "tilelength = (284)", "tilelength = (3)", "tilelength = (322)", "tilelength = (323)", "tilelength = (4)", "tilelength = (4096)", "tilelength = (4104)", "tilelength = (4105)", "tilelength = (4106)", "tilelength = (4107)", "tilelength = (4108)", "tilelength = (4109)", "tilelength = (4110)", "tilelength = (4111)", "tilelength = (4112)", "tilelength = (4113)", "tilelength = (4114)", "tilelength = (4115)", "tilelength = (4116)", "tilelength = (4117)", "tilelength = (4118)", "tilelength = (4119)", "tilelength = (8)", "tilelength = (l)", "tilelength = (tl)", "tilelength = (tw)", "tilelength = (w)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (11)", "tilewidth = (16)", "tilewidth = (2)", "tilewidth = (2048)", "tilewidth = (2056)", "tilewidth = (2057)", "tilewidth = (2058)", "tilewidth = (2059)", "tilewidth = (2060)", "tilewidth = (2061)", "tilewidth = (2062)", "tilewidth = (2063)", "tilewidth = (2064)", "tilewidth = (2065)", "tilewidth = (2066)", "tilewidth = (2067)", "tilewidth = (2068)", "tilewidth = (2069)", "tilewidth = (2070)", "tilewidth = (2071)", "tilewidth = (256)", "tilewidth = (257)", "tilewidth = (278)", "tilewidth = (284)", "tilewidth = (3)", "tilewidth = (322)", "tilewidth = (323)", "tilewidth = (4)", "tilewidth = (4096)", "tilewidth = (4104)", "tilewidth = (4105)", "tilewidth = (4106)", "tilewidth = (4107)", "tilewidth = (4108)", "tilewidth = (4109)", "tilewidth = (4110)", "tilewidth = (4111)", "tilewidth = (4112)", "tilewidth = (4113)", "tilewidth = (4114)", "tilewidth = (4115)", "tilewidth = (4116)", "tilewidth = (4117)", "tilewidth = (4118)", "tilewidth = (4119)", "tilewidth = (8)", "tilewidth = (l)", "tilewidth = (tl)", "tilewidth = (tw)", "tilewidth = (w)", "tl = (-1)", "tl = (0)", "tl = (1)", "tl = (11)", "tl = (16)", "tl = (2)", "tl = (2048)", "tl = (2056)", "tl = (2057)", "tl = (2058)", "tl = (2059)", "tl = (2060)", "tl = (2061)", "tl = (2062)", "tl = (2063)", "tl = (2064)", "tl = (2065)", "tl = (2066)", "tl = (2067)", "tl = (2068)", "tl = (2069)", "tl = (2070)", "tl = (2071)", "tl = (256)", "tl = (257)", "tl = (278)", "tl = (284)", "tl = (3)", "tl = (322)", "tl = (323)", "tl = (4)", "tl = (4096)", "tl = (4104)", "tl = (4105)", "tl = (4106)", "tl = (4107)", "tl = (4108)", "tl = (4109)", "tl = (4110)", "tl = (4111)", "tl = (4112)", "tl = (4113)", "tl = (4114)", "tl = (4115)", "tl = (4116)", "tl = (4117)", "tl = (4118)", "tl = (4119)", "tl = (8)", "tl = (l)", "tl = (tl)", "tl = (tw)", "tl = (w)", "tw = (-1)", "tw = (0)", "tw = (1)", "tw = (11)", "tw = (16)", "tw = (2)", "tw = (2048)", "tw = (2056)", "tw = (2057)", "tw = (2058)", "tw = (2059)", "tw = (2060)", "tw = (2061)", "tw = (2062)", "tw = (2063)", "tw = (2064)", "tw = (2065)", "tw = (2066)", "tw = (2067)", "tw = (2068)", "tw = (2069)", "tw = (2070)", "tw = (2071)", "tw = (256)", "tw = (257)", "tw = (278)", "tw = (284)", "tw = (3)", "tw = (322)", "tw = (323)", "tw = (4)", "tw = (4096)", "tw = (4104)", "tw = (4105)", "tw = (4106)", "tw = (4107)", "tw = (4108)", "tw = (4109)", "tw = (4110)", "tw = (4111)", "tw = (4112)", "tw = (4113)", "tw = (4114)", "tw = (4115)", "tw = (4116)", "tw = (4117)", "tw = (4118)", "tw = (4119)", "tw = (8)", "tw = (l)", "tw = (tl)", "tw = (tw)", "tw = (w)", "(void)TIFFGetField(in, 284, &shortv)", "TIFFGetField(in, 256, &w)", "TIFFGetField(in, 257, &l)", "TIFFGetField(in, 322, &tw)", "TIFFGetField(in, 323, &tl)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "bychunk = (tw == tilewidth && tl == tilelength)", "bychunk = (tw == w && tl == rowsperstrip)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "tl = l", "tw = w", "usage()", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return 0;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpBiasedContig2Contig;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContig2ContigByRow;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContig2SeparateByRow;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigStrips2ContigTiles;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigStrips2SeparateTiles;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2ContigStrips;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2ContigTiles;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2SeparateStrips;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpContigTiles2SeparateTiles;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpDecodedStrips;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparate2ContigByRow;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparate2SeparateByRow;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateStrips2ContigTiles;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateStrips2SeparateTiles;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2ContigStrips;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2ContigTiles;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2SeparateStrips;\n", "if (__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    return cpSeparateTiles2SeparateTiles;\n"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.20506429818382]
								}, {
									"case":	2,
									"scores":	[-7.20506429818382]
								}, {
									"case":	3,
									"scores":	[-7.20506429818382]
								}, {
									"case":	4,
									"scores":	[-7.20506429818382]
								}, {
									"case":	5,
									"scores":	[-7.20506429818382]
								}, {
									"case":	6,
									"scores":	[-7.20506429818382]
								}, {
									"case":	7,
									"scores":	[-7.20506429818382]
								}, {
									"case":	8,
									"scores":	[-7.20506429818382]
								}, {
									"case":	9,
									"scores":	[-7.20506429818382]
								}, {
									"case":	10,
									"scores":	[-7.20506429818382]
								}, {
									"case":	11,
									"scores":	[-7.20506429818382]
								}, {
									"case":	12,
									"scores":	[-7.20506429818382]
								}, {
									"case":	13,
									"scores":	[-7.20506429818382]
								}, {
									"case":	14,
									"scores":	[-7.20506429818382]
								}, {
									"case":	15,
									"scores":	[-7.20506429818382]
								}, {
									"case":	16,
									"scores":	[-7.20506429818382]
								}, {
									"case":	17,
									"scores":	[-7.20506429818382]
								}, {
									"case":	18,
									"scores":	[-7.20506429818382]
								}, {
									"case":	19,
									"scores":	[-7.20506429818382]
								}, {
									"case":	20,
									"scores":	[-7.20506429818382]
								}, {
									"case":	21,
									"scores":	[-7.20506429818382]
								}, {
									"case":	22,
									"scores":	[-7.20506429818382]
								}, {
									"case":	23,
									"scores":	[-7.20506429818382]
								}, {
									"case":	24,
									"scores":	[-7.20506429818382]
								}, {
									"case":	25,
									"scores":	[-7.20506429818382]
								}, {
									"case":	26,
									"scores":	[-7.20506429818382]
								}, {
									"case":	27,
									"scores":	[-7.20506429818382]
								}, {
									"case":	28,
									"scores":	[-7.20506429818382]
								}, {
									"case":	29,
									"scores":	[-7.20506429818382]
								}, {
									"case":	30,
									"scores":	[-7.20506429818382]
								}, {
									"case":	31,
									"scores":	[-7.20506429818382]
								}, {
									"case":	32,
									"scores":	[-7.20506429818382]
								}, {
									"case":	33,
									"scores":	[-7.20506429818382]
								}, {
									"case":	34,
									"scores":	[-7.20506429818382]
								}, {
									"case":	35,
									"scores":	[-7.20506429818382]
								}, {
									"case":	36,
									"scores":	[-7.20506429818382]
								}, {
									"case":	37,
									"scores":	[-7.20506429818382]
								}, {
									"case":	38,
									"scores":	[-7.20506429818382]
								}, {
									"case":	39,
									"scores":	[-7.20506429818382]
								}, {
									"case":	40,
									"scores":	[-7.20506429818382]
								}, {
									"case":	41,
									"scores":	[-7.20506429818382]
								}, {
									"case":	42,
									"scores":	[-7.20506429818382]
								}, {
									"case":	43,
									"scores":	[-7.20506429818382]
								}, {
									"case":	44,
									"scores":	[-7.20506429818382]
								}, {
									"case":	45,
									"scores":	[-7.20506429818382]
								}, {
									"case":	46,
									"scores":	[-7.20506429818382]
								}, {
									"case":	47,
									"scores":	[-7.20506429818382]
								}, {
									"case":	48,
									"scores":	[-7.20506429818382]
								}, {
									"case":	49,
									"scores":	[-7.20506429818382]
								}, {
									"case":	50,
									"scores":	[-7.20506429818382]
								}, {
									"case":	51,
									"scores":	[-7.20506429818382]
								}, {
									"case":	52,
									"scores":	[-7.20506429818382]
								}, {
									"case":	53,
									"scores":	[-7.20506429818382]
								}, {
									"case":	54,
									"scores":	[-7.20506429818382]
								}, {
									"case":	55,
									"scores":	[-7.20506429818382]
								}, {
									"case":	56,
									"scores":	[-7.20506429818382]
								}, {
									"case":	57,
									"scores":	[-7.20506429818382]
								}, {
									"case":	58,
									"scores":	[-7.20506429818382]
								}, {
									"case":	59,
									"scores":	[-7.20506429818382]
								}, {
									"case":	60,
									"scores":	[-7.20506429818382]
								}, {
									"case":	61,
									"scores":	[-7.20506429818382]
								}, {
									"case":	62,
									"scores":	[-7.20506429818382]
								}, {
									"case":	63,
									"scores":	[-7.20506429818382]
								}, {
									"case":	64,
									"scores":	[-7.20506429818382]
								}, {
									"case":	65,
									"scores":	[-7.20506429818382]
								}, {
									"case":	66,
									"scores":	[-7.20506429818382]
								}, {
									"case":	67,
									"scores":	[-7.20506429818382]
								}, {
									"case":	68,
									"scores":	[-7.20506429818382]
								}, {
									"case":	69,
									"scores":	[-7.20506429818382]
								}, {
									"case":	70,
									"scores":	[-7.20506429818382]
								}, {
									"case":	71,
									"scores":	[-7.20506429818382]
								}, {
									"case":	72,
									"scores":	[-7.20506429818382]
								}, {
									"case":	73,
									"scores":	[-7.20506429818382]
								}, {
									"case":	74,
									"scores":	[-7.20506429818382]
								}, {
									"case":	75,
									"scores":	[-7.20506429818382]
								}, {
									"case":	76,
									"scores":	[-7.20506429818382]
								}, {
									"case":	77,
									"scores":	[-7.20506429818382]
								}, {
									"case":	78,
									"scores":	[-7.20506429818382]
								}, {
									"case":	79,
									"scores":	[-7.20506429818382]
								}, {
									"case":	80,
									"scores":	[-7.20506429818382]
								}, {
									"case":	81,
									"scores":	[-7.20506429818382]
								}, {
									"case":	82,
									"scores":	[-7.20506429818382]
								}, {
									"case":	83,
									"scores":	[-7.20506429818382]
								}, {
									"case":	84,
									"scores":	[-7.20506429818382]
								}, {
									"case":	85,
									"scores":	[-7.20506429818382]
								}, {
									"case":	86,
									"scores":	[-7.20506429818382]
								}, {
									"case":	87,
									"scores":	[-7.20506429818382]
								}, {
									"case":	88,
									"scores":	[-7.20506429818382]
								}, {
									"case":	89,
									"scores":	[-7.20506429818382]
								}, {
									"case":	90,
									"scores":	[-7.20506429818382]
								}, {
									"case":	91,
									"scores":	[-7.20506429818382]
								}, {
									"case":	92,
									"scores":	[-7.20506429818382]
								}, {
									"case":	93,
									"scores":	[-7.20506429818382]
								}, {
									"case":	94,
									"scores":	[-7.20506429818382]
								}, {
									"case":	95,
									"scores":	[-7.20506429818382]
								}, {
									"case":	96,
									"scores":	[-7.20506429818382]
								}, {
									"case":	97,
									"scores":	[-7.20506429818382]
								}, {
									"case":	98,
									"scores":	[-7.20506429818382]
								}, {
									"case":	99,
									"scores":	[-7.20506429818382]
								}, {
									"case":	100,
									"scores":	[-7.20506429818382]
								}, {
									"case":	101,
									"scores":	[-7.20506429818382]
								}, {
									"case":	102,
									"scores":	[-7.20506429818382]
								}, {
									"case":	103,
									"scores":	[-7.20506429818382]
								}, {
									"case":	104,
									"scores":	[-7.20506429818382]
								}, {
									"case":	105,
									"scores":	[-7.20506429818382]
								}, {
									"case":	106,
									"scores":	[-7.20506429818382]
								}, {
									"case":	107,
									"scores":	[-7.20506429818382]
								}, {
									"case":	108,
									"scores":	[-7.20506429818382]
								}, {
									"case":	109,
									"scores":	[-7.20506429818382]
								}, {
									"case":	110,
									"scores":	[-7.20506429818382]
								}, {
									"case":	111,
									"scores":	[-7.20506429818382]
								}, {
									"case":	112,
									"scores":	[-7.20506429818382]
								}, {
									"case":	113,
									"scores":	[-7.20506429818382]
								}, {
									"case":	114,
									"scores":	[-7.20506429818382]
								}, {
									"case":	115,
									"scores":	[-7.20506429818382]
								}, {
									"case":	116,
									"scores":	[-7.20506429818382]
								}, {
									"case":	117,
									"scores":	[-7.20506429818382]
								}, {
									"case":	118,
									"scores":	[-7.20506429818382]
								}, {
									"case":	119,
									"scores":	[-7.20506429818382]
								}, {
									"case":	120,
									"scores":	[-7.20506429818382]
								}, {
									"case":	121,
									"scores":	[-7.20506429818382]
								}, {
									"case":	122,
									"scores":	[-7.20506429818382]
								}, {
									"case":	123,
									"scores":	[-7.20506429818382]
								}, {
									"case":	124,
									"scores":	[-7.20506429818382]
								}, {
									"case":	125,
									"scores":	[-7.20506429818382]
								}, {
									"case":	126,
									"scores":	[-7.20506429818382]
								}, {
									"case":	127,
									"scores":	[-7.20506429818382]
								}, {
									"case":	128,
									"scores":	[-7.20506429818382]
								}, {
									"case":	129,
									"scores":	[-7.20506429818382]
								}, {
									"case":	130,
									"scores":	[-7.20506429818382]
								}, {
									"case":	131,
									"scores":	[-7.20506429818382]
								}, {
									"case":	132,
									"scores":	[-7.20506429818382]
								}, {
									"case":	133,
									"scores":	[-7.20506429818382]
								}, {
									"case":	134,
									"scores":	[-7.20506429818382]
								}, {
									"case":	135,
									"scores":	[-7.20506429818382]
								}, {
									"case":	136,
									"scores":	[-7.20506429818382]
								}, {
									"case":	137,
									"scores":	[-7.20506429818382]
								}, {
									"case":	138,
									"scores":	[-7.20506429818382]
								}, {
									"case":	139,
									"scores":	[-7.20506429818382]
								}, {
									"case":	140,
									"scores":	[-7.20506429818382]
								}, {
									"case":	141,
									"scores":	[-7.20506429818382]
								}, {
									"case":	142,
									"scores":	[-7.20506429818382]
								}, {
									"case":	143,
									"scores":	[-7.20506429818382]
								}, {
									"case":	144,
									"scores":	[-7.20506429818382]
								}, {
									"case":	145,
									"scores":	[-7.20506429818382]
								}, {
									"case":	146,
									"scores":	[-7.20506429818382]
								}, {
									"case":	147,
									"scores":	[-7.20506429818382]
								}, {
									"case":	148,
									"scores":	[-7.20506429818382]
								}, {
									"case":	149,
									"scores":	[-7.20506429818382]
								}, {
									"case":	150,
									"scores":	[-7.20506429818382]
								}, {
									"case":	151,
									"scores":	[-7.20506429818382]
								}, {
									"case":	152,
									"scores":	[-7.20506429818382]
								}, {
									"case":	153,
									"scores":	[-7.20506429818382]
								}, {
									"case":	154,
									"scores":	[-7.20506429818382]
								}, {
									"case":	155,
									"scores":	[-7.20506429818382]
								}, {
									"case":	156,
									"scores":	[-7.20506429818382]
								}, {
									"case":	157,
									"scores":	[-7.20506429818382]
								}, {
									"case":	158,
									"scores":	[-7.20506429818382]
								}, {
									"case":	159,
									"scores":	[-7.20506429818382]
								}, {
									"case":	160,
									"scores":	[-7.20506429818382]
								}, {
									"case":	161,
									"scores":	[-7.20506429818382]
								}, {
									"case":	162,
									"scores":	[-7.20506429818382]
								}, {
									"case":	163,
									"scores":	[-7.20506429818382]
								}, {
									"case":	164,
									"scores":	[-7.20506429818382]
								}, {
									"case":	165,
									"scores":	[-7.20506429818382]
								}, {
									"case":	166,
									"scores":	[-7.20506429818382]
								}, {
									"case":	167,
									"scores":	[-7.20506429818382]
								}, {
									"case":	168,
									"scores":	[-7.20506429818382]
								}, {
									"case":	169,
									"scores":	[-7.20506429818382]
								}, {
									"case":	170,
									"scores":	[-7.20506429818382]
								}, {
									"case":	171,
									"scores":	[-7.20506429818382]
								}, {
									"case":	172,
									"scores":	[-7.20506429818382]
								}, {
									"case":	173,
									"scores":	[-7.20506429818382]
								}, {
									"case":	174,
									"scores":	[-7.20506429818382]
								}, {
									"case":	175,
									"scores":	[-7.20506429818382]
								}, {
									"case":	176,
									"scores":	[-7.20506429818382]
								}, {
									"case":	177,
									"scores":	[-7.20506429818382]
								}, {
									"case":	178,
									"scores":	[-7.20506429818382]
								}, {
									"case":	179,
									"scores":	[-7.20506429818382]
								}, {
									"case":	180,
									"scores":	[-7.20506429818382]
								}, {
									"case":	181,
									"scores":	[-7.20506429818382]
								}, {
									"case":	182,
									"scores":	[-7.20506429818382]
								}, {
									"case":	183,
									"scores":	[-7.20506429818382]
								}, {
									"case":	184,
									"scores":	[-7.20506429818382]
								}, {
									"case":	185,
									"scores":	[-7.20506429818382]
								}, {
									"case":	186,
									"scores":	[-7.20506429818382]
								}, {
									"case":	187,
									"scores":	[-7.20506429818382]
								}, {
									"case":	188,
									"scores":	[-7.20506429818382]
								}, {
									"case":	189,
									"scores":	[-7.20506429818382]
								}, {
									"case":	190,
									"scores":	[-7.20506429818382]
								}, {
									"case":	191,
									"scores":	[-7.20506429818382]
								}, {
									"case":	192,
									"scores":	[-7.20506429818382]
								}, {
									"case":	193,
									"scores":	[-7.20506429818382]
								}, {
									"case":	194,
									"scores":	[-7.20506429818382]
								}, {
									"case":	195,
									"scores":	[-7.20506429818382]
								}, {
									"case":	196,
									"scores":	[-7.20506429818382]
								}, {
									"case":	197,
									"scores":	[-7.20506429818382]
								}, {
									"case":	198,
									"scores":	[-7.20506429818382]
								}, {
									"case":	199,
									"scores":	[-7.20506429818382]
								}, {
									"case":	200,
									"scores":	[-7.20506429818382]
								}, {
									"case":	201,
									"scores":	[-7.20506429818382]
								}, {
									"case":	202,
									"scores":	[-7.20506429818382]
								}, {
									"case":	203,
									"scores":	[-7.20506429818382]
								}, {
									"case":	204,
									"scores":	[-7.20506429818382]
								}, {
									"case":	205,
									"scores":	[-7.20506429818382]
								}, {
									"case":	206,
									"scores":	[-7.20506429818382]
								}, {
									"case":	207,
									"scores":	[-7.20506429818382]
								}, {
									"case":	208,
									"scores":	[-7.20506429818382]
								}, {
									"case":	209,
									"scores":	[-7.20506429818382]
								}, {
									"case":	210,
									"scores":	[-7.20506429818382]
								}, {
									"case":	211,
									"scores":	[-7.20506429818382]
								}, {
									"case":	212,
									"scores":	[-7.20506429818382]
								}, {
									"case":	213,
									"scores":	[-7.20506429818382]
								}, {
									"case":	214,
									"scores":	[-7.20506429818382]
								}, {
									"case":	215,
									"scores":	[-7.20506429818382]
								}, {
									"case":	216,
									"scores":	[-7.20506429818382]
								}, {
									"case":	217,
									"scores":	[-7.20506429818382]
								}, {
									"case":	218,
									"scores":	[-7.20506429818382]
								}, {
									"case":	219,
									"scores":	[-7.20506429818382]
								}, {
									"case":	220,
									"scores":	[-7.20506429818382]
								}, {
									"case":	221,
									"scores":	[-7.20506429818382]
								}, {
									"case":	222,
									"scores":	[-7.20506429818382]
								}, {
									"case":	223,
									"scores":	[-7.20506429818382]
								}, {
									"case":	224,
									"scores":	[-7.20506429818382]
								}, {
									"case":	225,
									"scores":	[-7.20506429818382]
								}, {
									"case":	226,
									"scores":	[-7.20506429818382]
								}, {
									"case":	227,
									"scores":	[-7.20506429818382]
								}, {
									"case":	228,
									"scores":	[-7.20506429818382]
								}, {
									"case":	229,
									"scores":	[-7.20506429818382]
								}, {
									"case":	230,
									"scores":	[-7.20506429818382]
								}, {
									"case":	231,
									"scores":	[-7.20506429818382]
								}, {
									"case":	232,
									"scores":	[-7.20506429818382]
								}, {
									"case":	233,
									"scores":	[-7.20506429818382]
								}, {
									"case":	234,
									"scores":	[-7.20506429818382]
								}, {
									"case":	235,
									"scores":	[-7.20506429818382]
								}, {
									"case":	236,
									"scores":	[-7.20506429818382]
								}, {
									"case":	237,
									"scores":	[-7.20506429818382]
								}, {
									"case":	238,
									"scores":	[-7.20506429818382]
								}, {
									"case":	239,
									"scores":	[-7.20506429818382]
								}, {
									"case":	240,
									"scores":	[-7.20506429818382]
								}, {
									"case":	241,
									"scores":	[-7.20506429818382]
								}, {
									"case":	242,
									"scores":	[-7.20506429818382]
								}, {
									"case":	243,
									"scores":	[-7.20506429818382]
								}, {
									"case":	244,
									"scores":	[-7.20506429818382]
								}, {
									"case":	245,
									"scores":	[-7.20506429818382]
								}, {
									"case":	246,
									"scores":	[-7.20506429818382]
								}, {
									"case":	247,
									"scores":	[-7.20506429818382]
								}, {
									"case":	248,
									"scores":	[-7.20506429818382]
								}, {
									"case":	249,
									"scores":	[-7.20506429818382]
								}, {
									"case":	250,
									"scores":	[-7.20506429818382]
								}, {
									"case":	251,
									"scores":	[-7.20506429818382]
								}, {
									"case":	252,
									"scores":	[-7.20506429818382]
								}, {
									"case":	253,
									"scores":	[-7.20506429818382]
								}, {
									"case":	254,
									"scores":	[-7.20506429818382]
								}, {
									"case":	255,
									"scores":	[-7.20506429818382]
								}, {
									"case":	256,
									"scores":	[-7.20506429818382]
								}, {
									"case":	257,
									"scores":	[-7.20506429818382]
								}, {
									"case":	258,
									"scores":	[-7.20506429818382]
								}, {
									"case":	259,
									"scores":	[-7.20506429818382]
								}, {
									"case":	260,
									"scores":	[-7.20506429818382]
								}, {
									"case":	261,
									"scores":	[-7.20506429818382]
								}, {
									"case":	262,
									"scores":	[-7.20506429818382]
								}, {
									"case":	263,
									"scores":	[-7.20506429818382]
								}, {
									"case":	264,
									"scores":	[-7.20506429818382]
								}, {
									"case":	265,
									"scores":	[-7.20506429818382]
								}, {
									"case":	266,
									"scores":	[-7.20506429818382]
								}, {
									"case":	267,
									"scores":	[-7.20506429818382]
								}, {
									"case":	268,
									"scores":	[-7.20506429818382]
								}, {
									"case":	269,
									"scores":	[-7.20506429818382]
								}, {
									"case":	270,
									"scores":	[-7.20506429818382]
								}, {
									"case":	271,
									"scores":	[-7.20506429818382]
								}, {
									"case":	272,
									"scores":	[-7.20506429818382]
								}, {
									"case":	273,
									"scores":	[-7.20506429818382]
								}, {
									"case":	274,
									"scores":	[-7.20506429818382]
								}, {
									"case":	275,
									"scores":	[-7.20506429818382]
								}, {
									"case":	276,
									"scores":	[-7.20506429818382]
								}, {
									"case":	277,
									"scores":	[-7.20506429818382]
								}, {
									"case":	278,
									"scores":	[-7.20506429818382]
								}, {
									"case":	279,
									"scores":	[-7.20506429818382]
								}, {
									"case":	280,
									"scores":	[-7.20506429818382]
								}, {
									"case":	281,
									"scores":	[-7.20506429818382]
								}, {
									"case":	282,
									"scores":	[-7.20506429818382]
								}, {
									"case":	283,
									"scores":	[-7.20506429818382]
								}, {
									"case":	284,
									"scores":	[-7.20506429818382]
								}, {
									"case":	285,
									"scores":	[-7.20506429818382]
								}, {
									"case":	286,
									"scores":	[-7.20506429818382]
								}, {
									"case":	287,
									"scores":	[-7.20506429818382]
								}, {
									"case":	288,
									"scores":	[-7.20506429818382]
								}, {
									"case":	289,
									"scores":	[-7.20506429818382]
								}, {
									"case":	290,
									"scores":	[-7.20506429818382]
								}, {
									"case":	291,
									"scores":	[-7.20506429818382]
								}, {
									"case":	292,
									"scores":	[-7.20506429818382]
								}, {
									"case":	293,
									"scores":	[-7.20506429818382]
								}, {
									"case":	294,
									"scores":	[-7.20506429818382]
								}, {
									"case":	295,
									"scores":	[-7.20506429818382]
								}, {
									"case":	296,
									"scores":	[-7.20506429818382]
								}, {
									"case":	297,
									"scores":	[-7.20506429818382]
								}, {
									"case":	298,
									"scores":	[-7.20506429818382]
								}, {
									"case":	299,
									"scores":	[-7.20506429818382]
								}, {
									"case":	300,
									"scores":	[-7.20506429818382]
								}, {
									"case":	301,
									"scores":	[-7.20506429818382]
								}, {
									"case":	302,
									"scores":	[-7.20506429818382]
								}, {
									"case":	303,
									"scores":	[-7.20506429818382]
								}, {
									"case":	304,
									"scores":	[-7.20506429818382]
								}, {
									"case":	305,
									"scores":	[-7.20506429818382]
								}, {
									"case":	306,
									"scores":	[-7.20506429818382]
								}, {
									"case":	307,
									"scores":	[-7.20506429818382]
								}, {
									"case":	308,
									"scores":	[-7.20506429818382]
								}, {
									"case":	309,
									"scores":	[-7.20506429818382]
								}, {
									"case":	310,
									"scores":	[-7.20506429818382]
								}, {
									"case":	311,
									"scores":	[-7.20506429818382]
								}, {
									"case":	312,
									"scores":	[-7.20506429818382]
								}, {
									"case":	313,
									"scores":	[-7.20506429818382]
								}, {
									"case":	314,
									"scores":	[-7.20506429818382]
								}, {
									"case":	315,
									"scores":	[-7.20506429818382]
								}, {
									"case":	316,
									"scores":	[-7.20506429818382]
								}, {
									"case":	317,
									"scores":	[-7.20506429818382]
								}, {
									"case":	318,
									"scores":	[-7.20506429818382]
								}, {
									"case":	319,
									"scores":	[-7.20506429818382]
								}, {
									"case":	320,
									"scores":	[-7.20506429818382]
								}, {
									"case":	321,
									"scores":	[-7.20506429818382]
								}, {
									"case":	322,
									"scores":	[-7.20506429818382]
								}, {
									"case":	323,
									"scores":	[-7.20506429818382]
								}, {
									"case":	324,
									"scores":	[-7.20506429818382]
								}, {
									"case":	325,
									"scores":	[-7.20506429818382]
								}, {
									"case":	326,
									"scores":	[-7.20506429818382]
								}, {
									"case":	327,
									"scores":	[-7.20506429818382]
								}, {
									"case":	328,
									"scores":	[-7.20506429818382]
								}, {
									"case":	329,
									"scores":	[-7.20506429818382]
								}, {
									"case":	330,
									"scores":	[-7.20506429818382]
								}, {
									"case":	331,
									"scores":	[-7.20506429818382]
								}, {
									"case":	332,
									"scores":	[-7.20506429818382]
								}, {
									"case":	333,
									"scores":	[-7.20506429818382]
								}, {
									"case":	334,
									"scores":	[-7.20506429818382]
								}, {
									"case":	335,
									"scores":	[-7.20506429818382]
								}, {
									"case":	336,
									"scores":	[-7.20506429818382]
								}, {
									"case":	337,
									"scores":	[-7.20506429818382]
								}, {
									"case":	338,
									"scores":	[-7.20506429818382]
								}, {
									"case":	339,
									"scores":	[-7.20506429818382]
								}, {
									"case":	340,
									"scores":	[-7.20506429818382]
								}, {
									"case":	341,
									"scores":	[-7.20506429818382]
								}, {
									"case":	342,
									"scores":	[-7.20506429818382]
								}, {
									"case":	343,
									"scores":	[-7.20506429818382]
								}, {
									"case":	344,
									"scores":	[-7.20506429818382]
								}, {
									"case":	345,
									"scores":	[-7.20506429818382]
								}, {
									"case":	346,
									"scores":	[-7.20506429818382]
								}, {
									"case":	347,
									"scores":	[-7.20506429818382]
								}, {
									"case":	348,
									"scores":	[-7.20506429818382]
								}, {
									"case":	349,
									"scores":	[-7.20506429818382]
								}, {
									"case":	350,
									"scores":	[-7.20506429818382]
								}, {
									"case":	351,
									"scores":	[-7.20506429818382]
								}, {
									"case":	352,
									"scores":	[-7.20506429818382]
								}, {
									"case":	353,
									"scores":	[-7.20506429818382]
								}, {
									"case":	354,
									"scores":	[-7.20506429818382]
								}, {
									"case":	355,
									"scores":	[-7.20506429818382]
								}, {
									"case":	356,
									"scores":	[-7.20506429818382]
								}, {
									"case":	357,
									"scores":	[-7.20506429818382]
								}, {
									"case":	358,
									"scores":	[-7.20506429818382]
								}, {
									"case":	359,
									"scores":	[-7.20506429818382]
								}, {
									"case":	360,
									"scores":	[-7.20506429818382]
								}, {
									"case":	361,
									"scores":	[-7.20506429818382]
								}, {
									"case":	362,
									"scores":	[-7.20506429818382]
								}, {
									"case":	363,
									"scores":	[-7.20506429818382]
								}, {
									"case":	364,
									"scores":	[-7.20506429818382]
								}, {
									"case":	365,
									"scores":	[-7.20506429818382]
								}, {
									"case":	366,
									"scores":	[-7.20506429818382]
								}, {
									"case":	367,
									"scores":	[-7.20506429818382]
								}, {
									"case":	368,
									"scores":	[-7.20506429818382]
								}, {
									"case":	369,
									"scores":	[-7.20506429818382]
								}, {
									"case":	370,
									"scores":	[-7.20506429818382]
								}, {
									"case":	371,
									"scores":	[-7.20506429818382]
								}, {
									"case":	372,
									"scores":	[-7.20506429818382]
								}, {
									"case":	373,
									"scores":	[-7.20506429818382]
								}, {
									"case":	374,
									"scores":	[-7.20506429818382]
								}, {
									"case":	375,
									"scores":	[-7.20506429818382]
								}, {
									"case":	376,
									"scores":	[-7.20506429818382]
								}, {
									"case":	377,
									"scores":	[-7.20506429818382]
								}, {
									"case":	378,
									"scores":	[-7.20506429818382]
								}, {
									"case":	379,
									"scores":	[-7.20506429818382]
								}, {
									"case":	380,
									"scores":	[-7.20506429818382]
								}, {
									"case":	381,
									"scores":	[-7.20506429818382]
								}, {
									"case":	382,
									"scores":	[-7.20506429818382]
								}, {
									"case":	383,
									"scores":	[-7.20506429818382]
								}, {
									"case":	384,
									"scores":	[-7.20506429818382]
								}, {
									"case":	385,
									"scores":	[-7.20506429818382]
								}, {
									"case":	386,
									"scores":	[-7.20506429818382]
								}, {
									"case":	387,
									"scores":	[-7.20506429818382]
								}, {
									"case":	388,
									"scores":	[-7.20506429818382]
								}, {
									"case":	389,
									"scores":	[-7.20506429818382]
								}, {
									"case":	390,
									"scores":	[-7.20506429818382]
								}, {
									"case":	391,
									"scores":	[-7.20506429818382]
								}, {
									"case":	392,
									"scores":	[-7.20506429818382]
								}, {
									"case":	393,
									"scores":	[-7.20506429818382]
								}, {
									"case":	394,
									"scores":	[-7.20506429818382]
								}, {
									"case":	395,
									"scores":	[-7.20506429818382]
								}, {
									"case":	396,
									"scores":	[-7.20506429818382]
								}, {
									"case":	397,
									"scores":	[-7.20506429818382]
								}, {
									"case":	398,
									"scores":	[-7.20506429818382]
								}, {
									"case":	399,
									"scores":	[-7.20506429818382]
								}, {
									"case":	400,
									"scores":	[-7.20506429818382]
								}, {
									"case":	401,
									"scores":	[-7.20506429818382]
								}, {
									"case":	402,
									"scores":	[-7.20506429818382]
								}, {
									"case":	403,
									"scores":	[-7.20506429818382]
								}, {
									"case":	404,
									"scores":	[-7.20506429818382]
								}, {
									"case":	405,
									"scores":	[-7.20506429818382]
								}, {
									"case":	406,
									"scores":	[-7.20506429818382]
								}, {
									"case":	407,
									"scores":	[-7.20506429818382]
								}, {
									"case":	408,
									"scores":	[-7.20506429818382]
								}, {
									"case":	409,
									"scores":	[-7.20506429818382]
								}, {
									"case":	410,
									"scores":	[-7.20506429818382]
								}, {
									"case":	411,
									"scores":	[-7.20506429818382]
								}, {
									"case":	412,
									"scores":	[-7.20506429818382]
								}, {
									"case":	413,
									"scores":	[-7.20506429818382]
								}, {
									"case":	414,
									"scores":	[-7.20506429818382]
								}, {
									"case":	415,
									"scores":	[-7.20506429818382]
								}, {
									"case":	416,
									"scores":	[-7.20506429818382]
								}, {
									"case":	417,
									"scores":	[-7.20506429818382]
								}, {
									"case":	418,
									"scores":	[-7.20506429818382]
								}, {
									"case":	419,
									"scores":	[-7.20506429818382]
								}, {
									"case":	420,
									"scores":	[-7.20506429818382]
								}, {
									"case":	421,
									"scores":	[-7.20506429818382]
								}, {
									"case":	422,
									"scores":	[-7.20506429818382]
								}, {
									"case":	423,
									"scores":	[-7.20506429818382]
								}, {
									"case":	424,
									"scores":	[-7.20506429818382]
								}, {
									"case":	425,
									"scores":	[-7.20506429818382]
								}, {
									"case":	426,
									"scores":	[-7.20506429818382]
								}, {
									"case":	427,
									"scores":	[-7.20506429818382]
								}, {
									"case":	428,
									"scores":	[-7.20506429818382]
								}, {
									"case":	429,
									"scores":	[-7.20506429818382]
								}, {
									"case":	430,
									"scores":	[-7.20506429818382]
								}, {
									"case":	431,
									"scores":	[-7.20506429818382]
								}, {
									"case":	432,
									"scores":	[-7.20506429818382]
								}, {
									"case":	433,
									"scores":	[-7.20506429818382]
								}, {
									"case":	434,
									"scores":	[-7.20506429818382]
								}, {
									"case":	435,
									"scores":	[-7.20506429818382]
								}, {
									"case":	436,
									"scores":	[-7.20506429818382]
								}, {
									"case":	437,
									"scores":	[-7.20506429818382]
								}, {
									"case":	438,
									"scores":	[-7.20506429818382]
								}, {
									"case":	439,
									"scores":	[-7.20506429818382]
								}, {
									"case":	440,
									"scores":	[-7.20506429818382]
								}, {
									"case":	441,
									"scores":	[-7.20506429818382]
								}, {
									"case":	442,
									"scores":	[-7.20506429818382]
								}, {
									"case":	443,
									"scores":	[-7.20506429818382]
								}, {
									"case":	444,
									"scores":	[-7.20506429818382]
								}, {
									"case":	445,
									"scores":	[-7.20506429818382]
								}, {
									"case":	446,
									"scores":	[-7.20506429818382]
								}, {
									"case":	447,
									"scores":	[-7.20506429818382]
								}, {
									"case":	448,
									"scores":	[-7.20506429818382]
								}, {
									"case":	449,
									"scores":	[-7.20506429818382]
								}, {
									"case":	450,
									"scores":	[-7.20506429818382]
								}, {
									"case":	451,
									"scores":	[-7.20506429818382]
								}, {
									"case":	452,
									"scores":	[-7.20506429818382]
								}, {
									"case":	453,
									"scores":	[-7.20506429818382]
								}, {
									"case":	454,
									"scores":	[-7.20506429818382]
								}, {
									"case":	455,
									"scores":	[-7.20506429818382]
								}, {
									"case":	456,
									"scores":	[-7.20506429818382]
								}, {
									"case":	457,
									"scores":	[-7.20506429818382]
								}, {
									"case":	458,
									"scores":	[-7.20506429818382]
								}, {
									"case":	459,
									"scores":	[-7.20506429818382]
								}, {
									"case":	460,
									"scores":	[-7.20506429818382]
								}, {
									"case":	461,
									"scores":	[-7.20506429818382]
								}, {
									"case":	462,
									"scores":	[-7.20506429818382]
								}, {
									"case":	463,
									"scores":	[-7.20506429818382]
								}, {
									"case":	464,
									"scores":	[-7.20506429818382]
								}, {
									"case":	465,
									"scores":	[-7.20506429818382]
								}, {
									"case":	466,
									"scores":	[-7.20506429818382]
								}, {
									"case":	467,
									"scores":	[-7.20506429818382]
								}, {
									"case":	468,
									"scores":	[-7.20506429818382]
								}, {
									"case":	469,
									"scores":	[-7.20506429818382]
								}, {
									"case":	470,
									"scores":	[-7.20506429818382]
								}, {
									"case":	471,
									"scores":	[-7.20506429818382]
								}, {
									"case":	472,
									"scores":	[-7.20506429818382]
								}, {
									"case":	473,
									"scores":	[-7.20506429818382]
								}, {
									"case":	474,
									"scores":	[-7.20506429818382]
								}, {
									"case":	475,
									"scores":	[-7.20506429818382]
								}, {
									"case":	476,
									"scores":	[-7.20506429818382]
								}, {
									"case":	477,
									"scores":	[-7.20506429818382]
								}, {
									"case":	478,
									"scores":	[-7.20506429818382]
								}, {
									"case":	479,
									"scores":	[-7.20506429818382]
								}, {
									"case":	480,
									"scores":	[-7.20506429818382]
								}, {
									"case":	481,
									"scores":	[-7.20506429818382]
								}, {
									"case":	482,
									"scores":	[-7.20506429818382]
								}, {
									"case":	483,
									"scores":	[-7.20506429818382]
								}, {
									"case":	484,
									"scores":	[-7.20506429818382]
								}, {
									"case":	485,
									"scores":	[-7.20506429818382]
								}, {
									"case":	486,
									"scores":	[-7.20506429818382]
								}, {
									"case":	487,
									"scores":	[-7.20506429818382]
								}, {
									"case":	488,
									"scores":	[-7.20506429818382]
								}, {
									"case":	489,
									"scores":	[-7.20506429818382]
								}, {
									"case":	490,
									"scores":	[-7.20506429818382]
								}, {
									"case":	491,
									"scores":	[-7.20506429818382]
								}, {
									"case":	492,
									"scores":	[-7.20506429818382]
								}, {
									"case":	493,
									"scores":	[-7.20506429818382]
								}, {
									"case":	494,
									"scores":	[-7.20506429818382]
								}, {
									"case":	495,
									"scores":	[-7.20506429818382]
								}, {
									"case":	496,
									"scores":	[-7.20506429818382]
								}, {
									"case":	497,
									"scores":	[-7.20506429818382]
								}, {
									"case":	498,
									"scores":	[-7.20506429818382]
								}, {
									"case":	499,
									"scores":	[-7.20506429818382]
								}, {
									"case":	500,
									"scores":	[-7.20506429818382]
								}, {
									"case":	501,
									"scores":	[-7.20506429818382]
								}, {
									"case":	502,
									"scores":	[-7.20506429818382]
								}, {
									"case":	503,
									"scores":	[-7.20506429818382]
								}, {
									"case":	504,
									"scores":	[-7.20506429818382]
								}, {
									"case":	505,
									"scores":	[-7.20506429818382]
								}, {
									"case":	506,
									"scores":	[-7.20506429818382]
								}, {
									"case":	507,
									"scores":	[-7.20506429818382]
								}, {
									"case":	508,
									"scores":	[-7.20506429818382]
								}, {
									"case":	509,
									"scores":	[-7.20506429818382]
								}, {
									"case":	510,
									"scores":	[-7.20506429818382]
								}, {
									"case":	511,
									"scores":	[-7.20506429818382]
								}, {
									"case":	512,
									"scores":	[-7.20506429818382]
								}, {
									"case":	513,
									"scores":	[-7.20506429818382]
								}, {
									"case":	514,
									"scores":	[-7.20506429818382]
								}, {
									"case":	515,
									"scores":	[-7.20506429818382]
								}, {
									"case":	516,
									"scores":	[-7.20506429818382]
								}, {
									"case":	517,
									"scores":	[-7.20506429818382]
								}, {
									"case":	518,
									"scores":	[-7.20506429818382]
								}, {
									"case":	519,
									"scores":	[-7.20506429818382]
								}, {
									"case":	520,
									"scores":	[-7.20506429818382]
								}, {
									"case":	521,
									"scores":	[-7.20506429818382]
								}, {
									"case":	522,
									"scores":	[-7.20506429818382]
								}, {
									"case":	523,
									"scores":	[-7.20506429818382]
								}, {
									"case":	524,
									"scores":	[-7.20506429818382]
								}, {
									"case":	525,
									"scores":	[-7.20506429818382]
								}, {
									"case":	526,
									"scores":	[-7.20506429818382]
								}, {
									"case":	527,
									"scores":	[-7.20506429818382]
								}, {
									"case":	528,
									"scores":	[-7.20506429818382]
								}, {
									"case":	529,
									"scores":	[-7.20506429818382]
								}, {
									"case":	530,
									"scores":	[-7.20506429818382]
								}, {
									"case":	531,
									"scores":	[-7.20506429818382]
								}, {
									"case":	532,
									"scores":	[-7.20506429818382]
								}, {
									"case":	533,
									"scores":	[-7.20506429818382]
								}, {
									"case":	534,
									"scores":	[-7.20506429818382]
								}, {
									"case":	535,
									"scores":	[-7.20506429818382]
								}, {
									"case":	536,
									"scores":	[-7.20506429818382]
								}, {
									"case":	537,
									"scores":	[-7.20506429818382]
								}, {
									"case":	538,
									"scores":	[-7.20506429818382]
								}, {
									"case":	539,
									"scores":	[-7.20506429818382]
								}, {
									"case":	540,
									"scores":	[-7.20506429818382]
								}, {
									"case":	541,
									"scores":	[-7.20506429818382]
								}, {
									"case":	542,
									"scores":	[-7.20506429818382]
								}, {
									"case":	543,
									"scores":	[-7.20506429818382]
								}, {
									"case":	544,
									"scores":	[-7.20506429818382]
								}, {
									"case":	545,
									"scores":	[-7.20506429818382]
								}, {
									"case":	546,
									"scores":	[-7.20506429818382]
								}, {
									"case":	547,
									"scores":	[-7.20506429818382]
								}, {
									"case":	548,
									"scores":	[-7.20506429818382]
								}, {
									"case":	549,
									"scores":	[-7.20506429818382]
								}, {
									"case":	550,
									"scores":	[-7.20506429818382]
								}, {
									"case":	551,
									"scores":	[-7.20506429818382]
								}, {
									"case":	552,
									"scores":	[-7.20506429818382]
								}, {
									"case":	553,
									"scores":	[-7.20506429818382]
								}, {
									"case":	554,
									"scores":	[-7.20506429818382]
								}, {
									"case":	555,
									"scores":	[-7.20506429818382]
								}, {
									"case":	556,
									"scores":	[-7.20506429818382]
								}, {
									"case":	557,
									"scores":	[-7.20506429818382]
								}, {
									"case":	558,
									"scores":	[-7.20506429818382]
								}, {
									"case":	559,
									"scores":	[-7.20506429818382]
								}, {
									"case":	560,
									"scores":	[-7.20506429818382]
								}, {
									"case":	561,
									"scores":	[-7.20506429818382]
								}, {
									"case":	562,
									"scores":	[-7.20506429818382]
								}, {
									"case":	563,
									"scores":	[-7.20506429818382]
								}, {
									"case":	564,
									"scores":	[-7.20506429818382]
								}, {
									"case":	565,
									"scores":	[-7.20506429818382]
								}, {
									"case":	566,
									"scores":	[-7.20506429818382]
								}, {
									"case":	567,
									"scores":	[-7.20506429818382]
								}, {
									"case":	568,
									"scores":	[-7.20506429818382]
								}, {
									"case":	569,
									"scores":	[-7.20506429818382]
								}, {
									"case":	570,
									"scores":	[-7.20506429818382]
								}, {
									"case":	571,
									"scores":	[-7.20506429818382]
								}, {
									"case":	572,
									"scores":	[-7.20506429818382]
								}, {
									"case":	573,
									"scores":	[-7.20506429818382]
								}, {
									"case":	574,
									"scores":	[-7.20506429818382]
								}, {
									"case":	575,
									"scores":	[-7.20506429818382]
								}, {
									"case":	576,
									"scores":	[-7.20506429818382]
								}, {
									"case":	577,
									"scores":	[-7.20506429818382]
								}, {
									"case":	578,
									"scores":	[-7.20506429818382]
								}, {
									"case":	579,
									"scores":	[-7.20506429818382]
								}, {
									"case":	580,
									"scores":	[-7.20506429818382]
								}, {
									"case":	581,
									"scores":	[-7.20506429818382]
								}, {
									"case":	582,
									"scores":	[-7.20506429818382]
								}, {
									"case":	583,
									"scores":	[-7.20506429818382]
								}, {
									"case":	584,
									"scores":	[-7.20506429818382]
								}, {
									"case":	585,
									"scores":	[-7.20506429818382]
								}, {
									"case":	586,
									"scores":	[-7.20506429818382]
								}, {
									"case":	587,
									"scores":	[-7.20506429818382]
								}, {
									"case":	588,
									"scores":	[-7.20506429818382]
								}, {
									"case":	589,
									"scores":	[-7.20506429818382]
								}, {
									"case":	590,
									"scores":	[-7.20506429818382]
								}, {
									"case":	591,
									"scores":	[-7.20506429818382]
								}, {
									"case":	592,
									"scores":	[-7.20506429818382]
								}, {
									"case":	593,
									"scores":	[-7.20506429818382]
								}, {
									"case":	594,
									"scores":	[-7.20506429818382]
								}, {
									"case":	595,
									"scores":	[-7.20506429818382]
								}, {
									"case":	596,
									"scores":	[-7.20506429818382]
								}, {
									"case":	597,
									"scores":	[-7.20506429818382]
								}, {
									"case":	598,
									"scores":	[-7.20506429818382]
								}, {
									"case":	599,
									"scores":	[-7.20506429818382]
								}, {
									"case":	600,
									"scores":	[-7.20506429818382]
								}, {
									"case":	601,
									"scores":	[-7.20506429818382]
								}, {
									"case":	602,
									"scores":	[-7.20506429818382]
								}, {
									"case":	603,
									"scores":	[-7.20506429818382]
								}, {
									"case":	604,
									"scores":	[-7.20506429818382]
								}, {
									"case":	605,
									"scores":	[-7.20506429818382]
								}, {
									"case":	606,
									"scores":	[-7.20506429818382]
								}, {
									"case":	607,
									"scores":	[-7.20506429818382]
								}, {
									"case":	608,
									"scores":	[-7.20506429818382]
								}, {
									"case":	609,
									"scores":	[-7.20506429818382]
								}, {
									"case":	610,
									"scores":	[-7.20506429818382]
								}, {
									"case":	611,
									"scores":	[-7.20506429818382]
								}, {
									"case":	612,
									"scores":	[-7.20506429818382]
								}, {
									"case":	613,
									"scores":	[-7.20506429818382]
								}, {
									"case":	614,
									"scores":	[-7.20506429818382]
								}, {
									"case":	615,
									"scores":	[-7.20506429818382]
								}, {
									"case":	616,
									"scores":	[-7.20506429818382]
								}, {
									"case":	617,
									"scores":	[-7.20506429818382]
								}, {
									"case":	618,
									"scores":	[-7.20506429818382]
								}, {
									"case":	619,
									"scores":	[-7.20506429818382]
								}, {
									"case":	620,
									"scores":	[-7.20506429818382]
								}, {
									"case":	621,
									"scores":	[-7.20506429818382]
								}, {
									"case":	622,
									"scores":	[-7.20506429818382]
								}, {
									"case":	623,
									"scores":	[-7.20506429818382]
								}, {
									"case":	624,
									"scores":	[-7.20506429818382]
								}, {
									"case":	625,
									"scores":	[-7.20506429818382]
								}, {
									"case":	626,
									"scores":	[-7.20506429818382]
								}, {
									"case":	627,
									"scores":	[-7.20506429818382]
								}, {
									"case":	628,
									"scores":	[-7.20506429818382]
								}, {
									"case":	629,
									"scores":	[-7.20506429818382]
								}, {
									"case":	630,
									"scores":	[-7.20506429818382]
								}, {
									"case":	631,
									"scores":	[-7.20506429818382]
								}, {
									"case":	632,
									"scores":	[-7.20506429818382]
								}, {
									"case":	633,
									"scores":	[-7.20506429818382]
								}, {
									"case":	634,
									"scores":	[-7.20506429818382]
								}, {
									"case":	635,
									"scores":	[-7.20506429818382]
								}, {
									"case":	636,
									"scores":	[-7.20506429818382]
								}, {
									"case":	637,
									"scores":	[-7.20506429818382]
								}, {
									"case":	638,
									"scores":	[-7.20506429818382]
								}, {
									"case":	639,
									"scores":	[-7.20506429818382]
								}, {
									"case":	640,
									"scores":	[-7.20506429818382]
								}, {
									"case":	641,
									"scores":	[-7.20506429818382]
								}, {
									"case":	642,
									"scores":	[-7.20506429818382]
								}, {
									"case":	643,
									"scores":	[-7.20506429818382]
								}, {
									"case":	644,
									"scores":	[-7.20506429818382]
								}, {
									"case":	645,
									"scores":	[-7.20506429818382]
								}, {
									"case":	646,
									"scores":	[-7.20506429818382]
								}, {
									"case":	647,
									"scores":	[-7.20506429818382]
								}, {
									"case":	648,
									"scores":	[-7.20506429818382]
								}, {
									"case":	649,
									"scores":	[-7.20506429818382]
								}, {
									"case":	650,
									"scores":	[-7.20506429818382]
								}, {
									"case":	651,
									"scores":	[-7.20506429818382]
								}, {
									"case":	652,
									"scores":	[-7.20506429818382]
								}, {
									"case":	653,
									"scores":	[-7.20506429818382]
								}, {
									"case":	654,
									"scores":	[-7.20506429818382]
								}, {
									"case":	655,
									"scores":	[-7.20506429818382]
								}, {
									"case":	656,
									"scores":	[-7.20506429818382]
								}, {
									"case":	657,
									"scores":	[-7.20506429818382]
								}, {
									"case":	658,
									"scores":	[-7.20506429818382]
								}, {
									"case":	659,
									"scores":	[-7.20506429818382]
								}, {
									"case":	660,
									"scores":	[-7.20506429818382]
								}, {
									"case":	661,
									"scores":	[-7.20506429818382]
								}, {
									"case":	662,
									"scores":	[-7.20506429818382]
								}, {
									"case":	663,
									"scores":	[-7.20506429818382]
								}, {
									"case":	664,
									"scores":	[-7.20506429818382]
								}, {
									"case":	665,
									"scores":	[-7.20506429818382]
								}, {
									"case":	666,
									"scores":	[-7.20506429818382]
								}, {
									"case":	667,
									"scores":	[-7.20506429818382]
								}, {
									"case":	668,
									"scores":	[-7.20506429818382]
								}, {
									"case":	669,
									"scores":	[-7.20506429818382]
								}, {
									"case":	670,
									"scores":	[-7.20506429818382]
								}, {
									"case":	671,
									"scores":	[-7.20506429818382]
								}, {
									"case":	672,
									"scores":	[-7.20506429818382]
								}, {
									"case":	673,
									"scores":	[-7.20506429818382]
								}, {
									"case":	674,
									"scores":	[-7.20506429818382]
								}, {
									"case":	675,
									"scores":	[-7.20506429818382]
								}, {
									"case":	676,
									"scores":	[-7.20506429818382]
								}, {
									"case":	677,
									"scores":	[-7.20506429818382]
								}, {
									"case":	678,
									"scores":	[-7.20506429818382]
								}, {
									"case":	679,
									"scores":	[-7.20506429818382]
								}, {
									"case":	680,
									"scores":	[-7.20506429818382]
								}, {
									"case":	681,
									"scores":	[-7.20506429818382]
								}, {
									"case":	682,
									"scores":	[-7.20506429818382]
								}, {
									"case":	683,
									"scores":	[-7.20506429818382]
								}, {
									"case":	684,
									"scores":	[-7.20506429818382]
								}, {
									"case":	685,
									"scores":	[-7.20506429818382]
								}, {
									"case":	686,
									"scores":	[-7.20506429818382]
								}, {
									"case":	687,
									"scores":	[-7.20506429818382]
								}, {
									"case":	688,
									"scores":	[-7.20506429818382]
								}, {
									"case":	689,
									"scores":	[-7.20506429818382]
								}, {
									"case":	690,
									"scores":	[-7.20506429818382]
								}, {
									"case":	691,
									"scores":	[-7.20506429818382]
								}, {
									"case":	692,
									"scores":	[-7.20506429818382]
								}, {
									"case":	693,
									"scores":	[-7.20506429818382]
								}, {
									"case":	694,
									"scores":	[-7.20506429818382]
								}, {
									"case":	695,
									"scores":	[-7.20506429818382]
								}, {
									"case":	696,
									"scores":	[-7.20506429818382]
								}, {
									"case":	697,
									"scores":	[-7.20506429818382]
								}, {
									"case":	698,
									"scores":	[-7.20506429818382]
								}, {
									"case":	699,
									"scores":	[-7.20506429818382]
								}, {
									"case":	700,
									"scores":	[-7.20506429818382]
								}, {
									"case":	701,
									"scores":	[-7.20506429818382]
								}, {
									"case":	702,
									"scores":	[-7.20506429818382]
								}, {
									"case":	703,
									"scores":	[-7.20506429818382]
								}, {
									"case":	704,
									"scores":	[-7.20506429818382]
								}, {
									"case":	705,
									"scores":	[-7.20506429818382]
								}, {
									"case":	706,
									"scores":	[-7.20506429818382]
								}, {
									"case":	707,
									"scores":	[-7.20506429818382]
								}, {
									"case":	708,
									"scores":	[-7.20506429818382]
								}, {
									"case":	709,
									"scores":	[-7.20506429818382]
								}, {
									"case":	710,
									"scores":	[-7.20506429818382]
								}, {
									"case":	711,
									"scores":	[-7.20506429818382]
								}, {
									"case":	712,
									"scores":	[-7.20506429818382]
								}, {
									"case":	713,
									"scores":	[-7.20506429818382]
								}, {
									"case":	714,
									"scores":	[-7.20506429818382]
								}, {
									"case":	715,
									"scores":	[-7.20506429818382]
								}, {
									"case":	716,
									"scores":	[-7.20506429818382]
								}, {
									"case":	717,
									"scores":	[-7.20506429818382]
								}, {
									"case":	718,
									"scores":	[-7.20506429818382]
								}, {
									"case":	719,
									"scores":	[-7.20506429818382]
								}, {
									"case":	720,
									"scores":	[-7.20506429818382]
								}, {
									"case":	721,
									"scores":	[-7.20506429818382]
								}, {
									"case":	722,
									"scores":	[-7.20506429818382]
								}, {
									"case":	723,
									"scores":	[-7.20506429818382]
								}, {
									"case":	724,
									"scores":	[-7.20506429818382]
								}, {
									"case":	725,
									"scores":	[-7.20506429818382]
								}, {
									"case":	726,
									"scores":	[-7.20506429818382]
								}, {
									"case":	727,
									"scores":	[-7.20506429818382]
								}, {
									"case":	728,
									"scores":	[-7.20506429818382]
								}, {
									"case":	729,
									"scores":	[-7.20506429818382]
								}, {
									"case":	730,
									"scores":	[-7.20506429818382]
								}, {
									"case":	731,
									"scores":	[-7.20506429818382]
								}, {
									"case":	732,
									"scores":	[-7.20506429818382]
								}, {
									"case":	733,
									"scores":	[-7.20506429818382]
								}, {
									"case":	734,
									"scores":	[-7.20506429818382]
								}, {
									"case":	735,
									"scores":	[-7.20506429818382]
								}, {
									"case":	736,
									"scores":	[-7.20506429818382]
								}, {
									"case":	737,
									"scores":	[-7.20506429818382]
								}, {
									"case":	738,
									"scores":	[-7.20506429818382]
								}, {
									"case":	739,
									"scores":	[-7.20506429818382]
								}, {
									"case":	740,
									"scores":	[-7.20506429818382]
								}, {
									"case":	741,
									"scores":	[-7.20506429818382]
								}, {
									"case":	742,
									"scores":	[-7.20506429818382]
								}, {
									"case":	743,
									"scores":	[-7.20506429818382]
								}, {
									"case":	744,
									"scores":	[-7.20506429818382]
								}, {
									"case":	745,
									"scores":	[-7.20506429818382]
								}, {
									"case":	746,
									"scores":	[-7.20506429818382]
								}, {
									"case":	747,
									"scores":	[-7.20506429818382]
								}, {
									"case":	748,
									"scores":	[-7.20506429818382]
								}, {
									"case":	749,
									"scores":	[-7.20506429818382]
								}, {
									"case":	750,
									"scores":	[-7.20506429818382]
								}, {
									"case":	751,
									"scores":	[-7.20506429818382]
								}, {
									"case":	752,
									"scores":	[-7.20506429818382]
								}, {
									"case":	753,
									"scores":	[-7.20506429818382]
								}, {
									"case":	754,
									"scores":	[-7.20506429818382]
								}, {
									"case":	755,
									"scores":	[-7.20506429818382]
								}, {
									"case":	756,
									"scores":	[-7.20506429818382]
								}, {
									"case":	757,
									"scores":	[-7.20506429818382]
								}, {
									"case":	758,
									"scores":	[-7.20506429818382]
								}, {
									"case":	759,
									"scores":	[-7.20506429818382]
								}, {
									"case":	760,
									"scores":	[-7.20506429818382]
								}, {
									"case":	761,
									"scores":	[-7.20506429818382]
								}, {
									"case":	762,
									"scores":	[-7.20506429818382]
								}, {
									"case":	763,
									"scores":	[-7.20506429818382]
								}, {
									"case":	764,
									"scores":	[-7.20506429818382]
								}, {
									"case":	765,
									"scores":	[-7.20506429818382]
								}, {
									"case":	766,
									"scores":	[-7.20506429818382]
								}, {
									"case":	767,
									"scores":	[-7.20506429818382]
								}, {
									"case":	768,
									"scores":	[-7.20506429818382]
								}, {
									"case":	769,
									"scores":	[-7.20506429818382]
								}, {
									"case":	770,
									"scores":	[-7.20506429818382]
								}, {
									"case":	771,
									"scores":	[-7.20506429818382]
								}, {
									"case":	772,
									"scores":	[-7.20506429818382]
								}, {
									"case":	773,
									"scores":	[-7.20506429818382]
								}, {
									"case":	774,
									"scores":	[-7.20506429818382]
								}, {
									"case":	775,
									"scores":	[-7.20506429818382]
								}, {
									"case":	776,
									"scores":	[-7.20506429818382]
								}, {
									"case":	777,
									"scores":	[-7.20506429818382]
								}, {
									"case":	778,
									"scores":	[-7.20506429818382]
								}, {
									"case":	779,
									"scores":	[-7.20506429818382]
								}, {
									"case":	780,
									"scores":	[-7.20506429818382]
								}, {
									"case":	781,
									"scores":	[-7.20506429818382]
								}, {
									"case":	782,
									"scores":	[-7.20506429818382]
								}, {
									"case":	783,
									"scores":	[-7.20506429818382]
								}, {
									"case":	784,
									"scores":	[-7.20506429818382]
								}, {
									"case":	785,
									"scores":	[-7.20506429818382]
								}, {
									"case":	786,
									"scores":	[-7.20506429818382]
								}, {
									"case":	787,
									"scores":	[-7.20506429818382]
								}, {
									"case":	788,
									"scores":	[-7.20506429818382]
								}, {
									"case":	789,
									"scores":	[-7.20506429818382]
								}, {
									"case":	790,
									"scores":	[-7.20506429818382]
								}, {
									"case":	791,
									"scores":	[-7.20506429818382]
								}, {
									"case":	792,
									"scores":	[-7.20506429818382]
								}, {
									"case":	793,
									"scores":	[-7.20506429818382]
								}, {
									"case":	794,
									"scores":	[-7.20506429818382]
								}, {
									"case":	795,
									"scores":	[-7.20506429818382]
								}, {
									"case":	796,
									"scores":	[-7.20506429818382]
								}, {
									"case":	797,
									"scores":	[-7.20506429818382]
								}, {
									"case":	798,
									"scores":	[-7.20506429818382]
								}, {
									"case":	799,
									"scores":	[-7.20506429818382]
								}, {
									"case":	800,
									"scores":	[-7.20506429818382]
								}, {
									"case":	801,
									"scores":	[-7.20506429818382]
								}, {
									"case":	802,
									"scores":	[-7.20506429818382]
								}, {
									"case":	803,
									"scores":	[-7.20506429818382]
								}, {
									"case":	804,
									"scores":	[-7.20506429818382]
								}, {
									"case":	805,
									"scores":	[-7.20506429818382]
								}, {
									"case":	806,
									"scores":	[-7.20506429818382]
								}, {
									"case":	807,
									"scores":	[-7.20506429818382]
								}, {
									"case":	808,
									"scores":	[-7.20506429818382]
								}, {
									"case":	809,
									"scores":	[-7.20506429818382]
								}, {
									"case":	810,
									"scores":	[-7.20506429818382]
								}, {
									"case":	811,
									"scores":	[-7.20506429818382]
								}, {
									"case":	812,
									"scores":	[-7.20506429818382]
								}, {
									"case":	813,
									"scores":	[-7.20506429818382]
								}, {
									"case":	814,
									"scores":	[-7.20506429818382]
								}, {
									"case":	815,
									"scores":	[-7.20506429818382]
								}, {
									"case":	816,
									"scores":	[-7.20506429818382]
								}, {
									"case":	817,
									"scores":	[-7.20506429818382]
								}, {
									"case":	818,
									"scores":	[-7.20506429818382]
								}, {
									"case":	819,
									"scores":	[-7.20506429818382]
								}, {
									"case":	820,
									"scores":	[-7.20506429818382]
								}, {
									"case":	821,
									"scores":	[-7.20506429818382]
								}, {
									"case":	822,
									"scores":	[-7.20506429818382]
								}, {
									"case":	823,
									"scores":	[-7.20506429818382]
								}, {
									"case":	824,
									"scores":	[-7.20506429818382]
								}, {
									"case":	825,
									"scores":	[-7.20506429818382]
								}, {
									"case":	826,
									"scores":	[-7.20506429818382]
								}, {
									"case":	827,
									"scores":	[-7.20506429818382]
								}, {
									"case":	828,
									"scores":	[-7.20506429818382]
								}, {
									"case":	829,
									"scores":	[-7.20506429818382]
								}, {
									"case":	830,
									"scores":	[-7.20506429818382]
								}, {
									"case":	831,
									"scores":	[-7.20506429818382]
								}, {
									"case":	832,
									"scores":	[-7.20506429818382]
								}, {
									"case":	833,
									"scores":	[-7.20506429818382]
								}, {
									"case":	834,
									"scores":	[-7.20506429818382]
								}, {
									"case":	835,
									"scores":	[-7.20506429818382]
								}, {
									"case":	836,
									"scores":	[-7.20506429818382]
								}, {
									"case":	837,
									"scores":	[-7.20506429818382]
								}, {
									"case":	838,
									"scores":	[-7.20506429818382]
								}, {
									"case":	839,
									"scores":	[-7.20506429818382]
								}, {
									"case":	840,
									"scores":	[-7.20506429818382]
								}, {
									"case":	841,
									"scores":	[-7.20506429818382]
								}, {
									"case":	842,
									"scores":	[-7.20506429818382]
								}, {
									"case":	843,
									"scores":	[-7.20506429818382]
								}, {
									"case":	844,
									"scores":	[-7.20506429818382]
								}, {
									"case":	845,
									"scores":	[-7.20506429818382]
								}, {
									"case":	846,
									"scores":	[-7.20506429818382]
								}, {
									"case":	847,
									"scores":	[-7.20506429818382]
								}, {
									"case":	848,
									"scores":	[-7.20506429818382]
								}, {
									"case":	849,
									"scores":	[-7.20506429818382]
								}, {
									"case":	850,
									"scores":	[-7.20506429818382]
								}, {
									"case":	851,
									"scores":	[-7.20506429818382]
								}, {
									"case":	852,
									"scores":	[-7.20506429818382]
								}, {
									"case":	853,
									"scores":	[-7.20506429818382]
								}, {
									"case":	854,
									"scores":	[-7.20506429818382]
								}, {
									"case":	855,
									"scores":	[-7.20506429818382]
								}, {
									"case":	856,
									"scores":	[-7.20506429818382]
								}, {
									"case":	857,
									"scores":	[-7.20506429818382]
								}, {
									"case":	858,
									"scores":	[-7.20506429818382]
								}, {
									"case":	859,
									"scores":	[-7.20506429818382]
								}, {
									"case":	860,
									"scores":	[-7.20506429818382]
								}, {
									"case":	861,
									"scores":	[-7.20506429818382]
								}, {
									"case":	862,
									"scores":	[-7.20506429818382]
								}, {
									"case":	863,
									"scores":	[-7.20506429818382]
								}, {
									"case":	864,
									"scores":	[-7.20506429818382]
								}, {
									"case":	865,
									"scores":	[-7.20506429818382]
								}, {
									"case":	866,
									"scores":	[-7.20506429818382]
								}, {
									"case":	867,
									"scores":	[-7.20506429818382]
								}, {
									"case":	868,
									"scores":	[-7.20506429818382]
								}, {
									"case":	869,
									"scores":	[-7.20506429818382]
								}, {
									"case":	870,
									"scores":	[-7.20506429818382]
								}, {
									"case":	871,
									"scores":	[-7.20506429818382]
								}, {
									"case":	872,
									"scores":	[-7.20506429818382]
								}, {
									"case":	873,
									"scores":	[-7.20506429818382]
								}, {
									"case":	874,
									"scores":	[-7.20506429818382]
								}, {
									"case":	875,
									"scores":	[-7.20506429818382]
								}, {
									"case":	876,
									"scores":	[-7.20506429818382]
								}, {
									"case":	877,
									"scores":	[-7.20506429818382]
								}, {
									"case":	878,
									"scores":	[-7.20506429818382]
								}, {
									"case":	879,
									"scores":	[-7.20506429818382]
								}, {
									"case":	880,
									"scores":	[-7.20506429818382]
								}, {
									"case":	881,
									"scores":	[-7.20506429818382]
								}, {
									"case":	882,
									"scores":	[-7.20506429818382]
								}, {
									"case":	883,
									"scores":	[-7.20506429818382]
								}, {
									"case":	884,
									"scores":	[-7.20506429818382]
								}, {
									"case":	885,
									"scores":	[-7.20506429818382]
								}, {
									"case":	886,
									"scores":	[-7.20506429818382]
								}, {
									"case":	887,
									"scores":	[-7.20506429818382]
								}, {
									"case":	888,
									"scores":	[-7.20506429818382]
								}, {
									"case":	889,
									"scores":	[-7.20506429818382]
								}, {
									"case":	890,
									"scores":	[-7.20506429818382]
								}, {
									"case":	891,
									"scores":	[-7.20506429818382]
								}, {
									"case":	892,
									"scores":	[-7.20506429818382]
								}, {
									"case":	893,
									"scores":	[-7.20506429818382]
								}, {
									"case":	894,
									"scores":	[-7.20506429818382]
								}, {
									"case":	895,
									"scores":	[-7.20506429818382]
								}, {
									"case":	896,
									"scores":	[-7.20506429818382]
								}, {
									"case":	897,
									"scores":	[-7.20506429818382]
								}, {
									"case":	898,
									"scores":	[-7.20506429818382]
								}, {
									"case":	899,
									"scores":	[-7.20506429818382]
								}, {
									"case":	900,
									"scores":	[-7.20506429818382]
								}, {
									"case":	901,
									"scores":	[-7.20506429818382]
								}, {
									"case":	902,
									"scores":	[-7.20506429818382]
								}, {
									"case":	903,
									"scores":	[-7.20506429818382]
								}, {
									"case":	904,
									"scores":	[-7.20506429818382]
								}, {
									"case":	905,
									"scores":	[-7.20506429818382]
								}, {
									"case":	906,
									"scores":	[-7.20506429818382]
								}, {
									"case":	907,
									"scores":	[-7.20506429818382]
								}, {
									"case":	908,
									"scores":	[-7.20506429818382]
								}, {
									"case":	909,
									"scores":	[-7.20506429818382]
								}, {
									"case":	910,
									"scores":	[-7.20506429818382]
								}, {
									"case":	911,
									"scores":	[-7.20506429818382]
								}, {
									"case":	912,
									"scores":	[-7.20506429818382]
								}, {
									"case":	913,
									"scores":	[-7.20506429818382]
								}, {
									"case":	914,
									"scores":	[-7.20506429818382]
								}, {
									"case":	915,
									"scores":	[-7.20506429818382]
								}, {
									"case":	916,
									"scores":	[-7.20506429818382]
								}, {
									"case":	917,
									"scores":	[-7.20506429818382]
								}, {
									"case":	918,
									"scores":	[-7.20506429818382]
								}, {
									"case":	919,
									"scores":	[-7.20506429818382]
								}, {
									"case":	920,
									"scores":	[-7.20506429818382]
								}, {
									"case":	921,
									"scores":	[-7.20506429818382]
								}, {
									"case":	922,
									"scores":	[-7.20506429818382]
								}, {
									"case":	923,
									"scores":	[-7.20506429818382]
								}, {
									"case":	924,
									"scores":	[-7.20506429818382]
								}, {
									"case":	925,
									"scores":	[-7.20506429818382]
								}, {
									"case":	926,
									"scores":	[-7.20506429818382]
								}, {
									"case":	927,
									"scores":	[-7.20506429818382]
								}, {
									"case":	928,
									"scores":	[-7.20506429818382]
								}, {
									"case":	929,
									"scores":	[-7.20506429818382]
								}, {
									"case":	930,
									"scores":	[-7.20506429818382]
								}, {
									"case":	931,
									"scores":	[-7.20506429818382]
								}, {
									"case":	932,
									"scores":	[-7.20506429818382]
								}, {
									"case":	933,
									"scores":	[-7.20506429818382]
								}, {
									"case":	934,
									"scores":	[-7.20506429818382]
								}, {
									"case":	935,
									"scores":	[-7.20506429818382]
								}, {
									"case":	936,
									"scores":	[-7.20506429818382]
								}, {
									"case":	937,
									"scores":	[-7.20506429818382]
								}, {
									"case":	938,
									"scores":	[-7.20506429818382]
								}, {
									"case":	939,
									"scores":	[-7.20506429818382]
								}, {
									"case":	940,
									"scores":	[-7.20506429818382]
								}, {
									"case":	941,
									"scores":	[-7.20506429818382]
								}, {
									"case":	942,
									"scores":	[-7.20506429818382]
								}, {
									"case":	943,
									"scores":	[-7.20506429818382]
								}, {
									"case":	944,
									"scores":	[-7.20506429818382]
								}, {
									"case":	945,
									"scores":	[-7.20506429818382]
								}, {
									"case":	946,
									"scores":	[-7.20506429818382]
								}, {
									"case":	947,
									"scores":	[-7.20506429818382]
								}, {
									"case":	948,
									"scores":	[-7.20506429818382]
								}, {
									"case":	949,
									"scores":	[-7.20506429818382]
								}, {
									"case":	950,
									"scores":	[-7.20506429818382]
								}, {
									"case":	951,
									"scores":	[-7.20506429818382]
								}, {
									"case":	952,
									"scores":	[-7.20506429818382]
								}, {
									"case":	953,
									"scores":	[-7.20506429818382]
								}, {
									"case":	954,
									"scores":	[-7.20506429818382]
								}, {
									"case":	955,
									"scores":	[-7.20506429818382]
								}, {
									"case":	956,
									"scores":	[-7.20506429818382]
								}, {
									"case":	957,
									"scores":	[-7.20506429818382]
								}, {
									"case":	958,
									"scores":	[-7.20506429818382]
								}, {
									"case":	959,
									"scores":	[-7.20506429818382]
								}, {
									"case":	960,
									"scores":	[-7.20506429818382]
								}, {
									"case":	961,
									"scores":	[-7.20506429818382]
								}, {
									"case":	962,
									"scores":	[-7.20506429818382]
								}, {
									"case":	963,
									"scores":	[-7.20506429818382]
								}, {
									"case":	964,
									"scores":	[-7.20506429818382]
								}, {
									"case":	965,
									"scores":	[-7.20506429818382]
								}, {
									"case":	966,
									"scores":	[-7.20506429818382]
								}, {
									"case":	967,
									"scores":	[-7.20506429818382]
								}, {
									"case":	968,
									"scores":	[-7.20506429818382]
								}, {
									"case":	969,
									"scores":	[-7.20506429818382]
								}, {
									"case":	970,
									"scores":	[-7.20506429818382]
								}, {
									"case":	971,
									"scores":	[-7.20506429818382]
								}, {
									"case":	972,
									"scores":	[-7.20506429818382]
								}, {
									"case":	973,
									"scores":	[-7.20506429818382]
								}, {
									"case":	974,
									"scores":	[-7.20506429818382]
								}, {
									"case":	975,
									"scores":	[-7.20506429818382]
								}, {
									"case":	976,
									"scores":	[-7.20506429818382]
								}, {
									"case":	977,
									"scores":	[-7.20506429818382]
								}, {
									"case":	978,
									"scores":	[-7.20506429818382]
								}, {
									"case":	979,
									"scores":	[-7.20506429818382]
								}, {
									"case":	980,
									"scores":	[-7.20506429818382]
								}, {
									"case":	981,
									"scores":	[-7.20506429818382]
								}, {
									"case":	982,
									"scores":	[-7.20506429818382]
								}, {
									"case":	983,
									"scores":	[-7.20506429818382]
								}, {
									"case":	984,
									"scores":	[-7.20506429818382]
								}, {
									"case":	985,
									"scores":	[-7.20506429818382]
								}, {
									"case":	986,
									"scores":	[-7.20506429818382]
								}, {
									"case":	987,
									"scores":	[-7.20506429818382]
								}, {
									"case":	988,
									"scores":	[-7.20506429818382]
								}, {
									"case":	989,
									"scores":	[-7.20506429818382]
								}, {
									"case":	990,
									"scores":	[-7.20506429818382]
								}, {
									"case":	991,
									"scores":	[-7.20506429818382]
								}, {
									"case":	992,
									"scores":	[-7.20506429818382]
								}, {
									"case":	993,
									"scores":	[-7.20506429818382]
								}, {
									"case":	994,
									"scores":	[-7.20506429818382]
								}, {
									"case":	995,
									"scores":	[-7.20506429818382]
								}, {
									"case":	996,
									"scores":	[-7.20506429818382]
								}, {
									"case":	997,
									"scores":	[-7.20506429818382]
								}, {
									"case":	998,
									"scores":	[-7.20506429818382]
								}, {
									"case":	999,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1000,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1001,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1002,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1003,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1004,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1005,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1006,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1007,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1008,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1009,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1010,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1011,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1012,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1013,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1014,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1015,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1016,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1017,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1018,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1019,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1020,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1021,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1022,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1023,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1024,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1025,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1026,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1027,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1028,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1029,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1030,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1031,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1032,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1033,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1034,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1035,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1036,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1037,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1038,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1039,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1040,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1041,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1042,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1043,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1044,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1045,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1046,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1047,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1048,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1049,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1050,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1051,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1052,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1053,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1054,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1055,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1056,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1057,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1058,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1059,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1060,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1061,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1062,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1063,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1064,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1065,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1066,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1067,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1068,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1069,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1070,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1071,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1072,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1073,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1074,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1075,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1076,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1077,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1078,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1079,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1080,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1081,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1082,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1083,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1084,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1085,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1086,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1087,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1088,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1089,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1090,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1091,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1092,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1093,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1094,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1095,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1096,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1097,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1098,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1099,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1100,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1101,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1102,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1103,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1104,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1105,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1106,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1107,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1108,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1109,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1110,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1111,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1112,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1113,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1114,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1115,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1116,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1117,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1118,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1119,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1120,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1121,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1122,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1123,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1124,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1125,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1126,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1127,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1128,
									"scores":	[-7.20506429818382]
								}, {
									"case":	1129,
									"scores":	[-11.062969618183818, -11.99593022818382, -11.99973231818382, -12.891961871483819, -11.944783765183821, -12.886154608183819, -12.03140980818382, -12.143495906183819, -11.810718728183819, -12.367076199483819, -11.916406836183821, -11.94288564818382, -13.481223875183819, -13.481223875183819, -12.886154608183819, -12.251078608183819]
								}, {
									"case":	1130,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1131,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1132,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1133,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1134,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1135,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1136,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1137,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1138,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1139,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1140,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1141,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1142,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1143,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1144,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1145,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1146,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}, {
									"case":	1147,
									"scores":	[-10.320000318183819, -11.252960928183819, -11.25676301818382, -12.148992571483818, -11.201814465183819, -12.143185308183819, -11.288440508183822, -11.400526606183821, -11.06774942818382, -11.62410689948382, -11.173437536183819, -11.19991634818382, -12.738254575183818, -12.738254575183818, -12.143185308183819, -11.508109308183819]
								}]
						}, {
							"switch":	79,
							"types":	[[], [], [1], [], [], [], [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846], [], [395, 396, 397, 398, 399, 400, 401], [], [], [], [], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], [], [], [394]],
							"begin_line":	1663,
							"begin_column":	2,
							"end_line":	1663,
							"end_column":	42,
							"patch_codes":	["if (!__is_neg(\"\", \"L1663\", 16, &(in), sizeof (in), &(l), sizeof (l), &(out), sizeof (out), &(w), sizeof (w), &(bychunk), sizeof (bychunk), &(rowsperstrip), sizeof (rowsperstrip), &(bias), sizeof (bias), &(bitspersample), sizeof (bitspersample), &(samplesperpixel), sizeof (samplesperpixel), &(shortv), sizeof (shortv), &(config), sizeof (config), &(jpegcolormode), sizeof (jpegcolormode), &(tw), sizeof (tw), &(tl), sizeof (tl), &(tilewidth), sizeof (tilewidth), &(tilelength), sizeof (tilelength)))\n    TIFFGetField(in, 257, &l);\n", "TIFFReadEncodedStrip(in, 257, &l, -1)", "TIFFReadEncodedStrip(in, 257, &l, 0)", "TIFFReadEncodedStrip(in, 257, &l, 1)", "TIFFReadEncodedStrip(in, 257, &l, 11)", "TIFFReadEncodedStrip(in, 257, &l, 16)", "TIFFReadEncodedStrip(in, 257, &l, 2)", "TIFFReadEncodedStrip(in, 257, &l, 2048)", "TIFFReadEncodedStrip(in, 257, &l, 2056)", "TIFFReadEncodedStrip(in, 257, &l, 2057)", "TIFFReadEncodedStrip(in, 257, &l, 2058)", "TIFFReadEncodedStrip(in, 257, &l, 2059)", "TIFFReadEncodedStrip(in, 257, &l, 2060)", "TIFFReadEncodedStrip(in, 257, &l, 2061)", "TIFFReadEncodedStrip(in, 257, &l, 2062)", "TIFFReadEncodedStrip(in, 257, &l, 2063)", "TIFFReadEncodedStrip(in, 257, &l, 2064)", "TIFFReadEncodedStrip(in, 257, &l, 2065)", "TIFFReadEncodedStrip(in, 257, &l, 2066)", "TIFFReadEncodedStrip(in, 257, &l, 2067)", "TIFFReadEncodedStrip(in, 257, &l, 2068)", "TIFFReadEncodedStrip(in, 257, &l, 2069)", "TIFFReadEncodedStrip(in, 257, &l, 2070)", "TIFFReadEncodedStrip(in, 257, &l, 2071)", "TIFFReadEncodedStrip(in, 257, &l, 256)", "TIFFReadEncodedStrip(in, 257, &l, 257)", "TIFFReadEncodedStrip(in, 257, &l, 278)", "TIFFReadEncodedStrip(in, 257, &l, 284)", "TIFFReadEncodedStrip(in, 257, &l, 3)", "TIFFReadEncodedStrip(in, 257, &l, 322)", "TIFFReadEncodedStrip(in, 257, &l, 323)", "TIFFReadEncodedStrip(in, 257, &l, 4)", "TIFFReadEncodedStrip(in, 257, &l, 4096)", "TIFFReadEncodedStrip(in, 257, &l, 4104)", "TIFFReadEncodedStrip(in, 257, &l, 4105)", "TIFFReadEncodedStrip(in, 257, &l, 4106)", "TIFFReadEncodedStrip(in, 257, &l, 4107)", "TIFFReadEncodedStrip(in, 257, &l, 4108)", "TIFFReadEncodedStrip(in, 257, &l, 4109)", "TIFFReadEncodedStrip(in, 257, &l, 4110)", "TIFFReadEncodedStrip(in, 257, &l, 4111)", "TIFFReadEncodedStrip(in, 257, &l, 4112)", "TIFFReadEncodedStrip(in, 257, &l, 4113)", "TIFFReadEncodedStrip(in, 257, &l, 4114)", "TIFFReadEncodedStrip(in, 257, &l, 4115)", "TIFFReadEncodedStrip(in, 257, &l, 4116)", "TIFFReadEncodedStrip(in, 257, &l, 4117)", "TIFFReadEncodedStrip(in, 257, &l, 4118)", "TIFFReadEncodedStrip(in, 257, &l, 4119)", "TIFFReadEncodedStrip(in, 257, &l, 8)", "TIFFReadEncodedTile(in, 257, &l, -1)", "TIFFReadEncodedTile(in, 257, &l, 0)", "TIFFReadEncodedTile(in, 257, &l, 1)", "TIFFReadEncodedTile(in, 257, &l, 11)", "TIFFReadEncodedTile(in, 257, &l, 16)", "TIFFReadEncodedTile(in, 257, &l, 2)", "TIFFReadEncodedTile(in, 257, &l, 2048)", "TIFFReadEncodedTile(in, 257, &l, 2056)", "TIFFReadEncodedTile(in, 257, &l, 2057)", "TIFFReadEncodedTile(in, 257, &l, 2058)", "TIFFReadEncodedTile(in, 257, &l, 2059)", "TIFFReadEncodedTile(in, 257, &l, 2060)", "TIFFReadEncodedTile(in, 257, &l, 2061)", "TIFFReadEncodedTile(in, 257, &l, 2062)", "TIFFReadEncodedTile(in, 257, &l, 2063)", "TIFFReadEncodedTile(in, 257, &l, 2064)", "TIFFReadEncodedTile(in, 257, &l, 2065)", "TIFFReadEncodedTile(in, 257, &l, 2066)", "TIFFReadEncodedTile(in, 257, &l, 2067)", "TIFFReadEncodedTile(in, 257, &l, 2068)", "TIFFReadEncodedTile(in, 257, &l, 2069)", "TIFFReadEncodedTile(in, 257, &l, 2070)", "TIFFReadEncodedTile(in, 257, &l, 2071)", "TIFFReadEncodedTile(in, 257, &l, 256)", "TIFFReadEncodedTile(in, 257, &l, 257)", "TIFFReadEncodedTile(in, 257, &l, 278)", "TIFFReadEncodedTile(in, 257, &l, 284)", "TIFFReadEncodedTile(in, 257, &l, 3)", "TIFFReadEncodedTile(in, 257, &l, 322)", "TIFFReadEncodedTile(in, 257, &l, 323)", "TIFFReadEncodedTile(in, 257, &l, 4)", "TIFFReadEncodedTile(in, 257, &l, 4096)", "TIFFReadEncodedTile(in, 257, &l, 4104)", "TIFFReadEncodedTile(in, 257, &l, 4105)", "TIFFReadEncodedTile(in, 257, &l, 4106)", "TIFFReadEncodedTile(in, 257, &l, 4107)", "TIFFReadEncodedTile(in, 257, &l, 4108)", "TIFFReadEncodedTile(in, 257, &l, 4109)", "TIFFReadEncodedTile(in, 257, &l, 4110)", "TIFFReadEncodedTile(in, 257, &l, 4111)", "TIFFReadEncodedTile(in, 257, &l, 4112)", "TIFFReadEncodedTile(in, 257, &l, 4113)", "TIFFReadEncodedTile(in, 257, &l, 4114)", "TIFFReadEncodedTile(in, 257, &l, 4115)", "TIFFReadEncodedTile(in, 257, &l, 4116)", "TIFFReadEncodedTile(in, 257, &l, 4117)", "TIFFReadEncodedTile(in, 257, &l, 4118)", "TIFFReadEncodedTile(in, 257, &l, 4119)", "TIFFReadEncodedTile(in, 257, &l, 8)", "TIFFReadRawStrip(in, 257, &l, -1)", "TIFFReadRawStrip(in, 257, &l, 0)", "TIFFReadRawStrip(in, 257, &l, 1)", "TIFFReadRawStrip(in, 257, &l, 11)", "TIFFReadRawStrip(in, 257, &l, 16)", "TIFFReadRawStrip(in, 257, &l, 2)", "TIFFReadRawStrip(in, 257, &l, 2048)", "TIFFReadRawStrip(in, 257, &l, 2056)", "TIFFReadRawStrip(in, 257, &l, 2057)", "TIFFReadRawStrip(in, 257, &l, 2058)", "TIFFReadRawStrip(in, 257, &l, 2059)", "TIFFReadRawStrip(in, 257, &l, 2060)", "TIFFReadRawStrip(in, 257, &l, 2061)", "TIFFReadRawStrip(in, 257, &l, 2062)", "TIFFReadRawStrip(in, 257, &l, 2063)", "TIFFReadRawStrip(in, 257, &l, 2064)", "TIFFReadRawStrip(in, 257, &l, 2065)", "TIFFReadRawStrip(in, 257, &l, 2066)", "TIFFReadRawStrip(in, 257, &l, 2067)", "TIFFReadRawStrip(in, 257, &l, 2068)", "TIFFReadRawStrip(in, 257, &l, 2069)", "TIFFReadRawStrip(in, 257, &l, 2070)", "TIFFReadRawStrip(in, 257, &l, 2071)", "TIFFReadRawStrip(in, 257, &l, 256)", "TIFFReadRawStrip(in, 257, &l, 257)", "TIFFReadRawStrip(in, 257, &l, 278)", "TIFFReadRawStrip(in, 257, &l, 284)", "TIFFReadRawStrip(in, 257, &l, 3)", "TIFFReadRawStrip(in, 257, &l, 322)", "TIFFReadRawStrip(in, 257, &l, 323)", "TIFFReadRawStrip(in, 257, &l, 4)", "TIFFReadRawStrip(in, 257, &l, 4096)", "TIFFReadRawStrip(in, 257, &l, 4104)", "TIFFReadRawStrip(in, 257, &l, 4105)", "TIFFReadRawStrip(in, 257, &l, 4106)", "TIFFReadRawStrip(in, 257, &l, 4107)", "TIFFReadRawStrip(in, 257, &l, 4108)", "TIFFReadRawStrip(in, 257, &l, 4109)", "TIFFReadRawStrip(in, 257, &l, 4110)", "TIFFReadRawStrip(in, 257, &l, 4111)", "TIFFReadRawStrip(in, 257, &l, 4112)", "TIFFReadRawStrip(in, 257, &l, 4113)", "TIFFReadRawStrip(in, 257, &l, 4114)", "TIFFReadRawStrip(in, 257, &l, 4115)", "TIFFReadRawStrip(in, 257, &l, 4116)", "TIFFReadRawStrip(in, 257, &l, 4117)", "TIFFReadRawStrip(in, 257, &l, 4118)", "TIFFReadRawStrip(in, 257, &l, 4119)", "TIFFReadRawStrip(in, 257, &l, 8)", "TIFFReadRawTile(in, 257, &l, -1)", "TIFFReadRawTile(in, 257, &l, 0)", "TIFFReadRawTile(in, 257, &l, 1)", "TIFFReadRawTile(in, 257, &l, 11)", "TIFFReadRawTile(in, 257, &l, 16)", "TIFFReadRawTile(in, 257, &l, 2)", "TIFFReadRawTile(in, 257, &l, 2048)", "TIFFReadRawTile(in, 257, &l, 2056)", "TIFFReadRawTile(in, 257, &l, 2057)", "TIFFReadRawTile(in, 257, &l, 2058)", "TIFFReadRawTile(in, 257, &l, 2059)", "TIFFReadRawTile(in, 257, &l, 2060)", "TIFFReadRawTile(in, 257, &l, 2061)", "TIFFReadRawTile(in, 257, &l, 2062)", "TIFFReadRawTile(in, 257, &l, 2063)", "TIFFReadRawTile(in, 257, &l, 2064)", "TIFFReadRawTile(in, 257, &l, 2065)", "TIFFReadRawTile(in, 257, &l, 2066)", "TIFFReadRawTile(in, 257, &l, 2067)", "TIFFReadRawTile(in, 257, &l, 2068)", "TIFFReadRawTile(in, 257, &l, 2069)", "TIFFReadRawTile(in, 257, &l, 2070)", "TIFFReadRawTile(in, 257, &l, 2071)", "TIFFReadRawTile(in, 257, &l, 256)", "TIFFReadRawTile(in, 257, &l, 257)", "TIFFReadRawTile(in, 257, &l, 278)", "TIFFReadRawTile(in, 257, &l, 284)", "TIFFReadRawTile(in, 257, &l, 3)", "TIFFReadRawTile(in, 257, &l, 322)", "TIFFReadRawTile(in, 257, &l, 323)", "TIFFReadRawTile(in, 257, &l, 4)", "TIFFReadRawTile(in, 257, &l, 4096)", "TIFFReadRawTile(in, 257, &l, 4104)", "TIFFReadRawTile(in, 257, &l, 4105)", "TIFFReadRawTile(in, 257, &l, 4106)", "TIFFReadRawTile(in, 257, &l, 4107)", "TIFFReadRawTile(in, 257, &l, 4108)", "TIFFReadRawTile(in, 257, &l, 4109)", "TIFFReadRawTile(in, 257, &l, 4110)", "TIFFReadRawTile(in, 257, &l, 4111)", "TIFFReadRawTile(in, 257, &l, 4112)", "TIFFReadRawTile(in, 257, &l, 4113)", "TIFFReadRawTile(in, 257, &l, 4114)", "TIFFReadRawTile(in, 257, &l, 4115)", "TIFFReadRawTile(in, 257, &l, 4116)", "TIFFReadRawTile(in, 257, &l, 4117)", "TIFFReadRawTile(in, 257, &l, 4118)", "TIFFReadRawTile(in, 257, &l, 4119)", "TIFFReadRawTile(in, 257, &l, 8)", "TIFFWriteEncodedStrip(in, 257, &l, -1)", "TIFFWriteEncodedStrip(in, 257, &l, 0)", "TIFFWriteEncodedStrip(in, 257, &l, 1)", "TIFFWriteEncodedStrip(in, 257, &l, 11)", "TIFFWriteEncodedStrip(in, 257, &l, 16)", "TIFFWriteEncodedStrip(in, 257, &l, 2)", "TIFFWriteEncodedStrip(in, 257, &l, 2048)", "TIFFWriteEncodedStrip(in, 257, &l, 2056)", "TIFFWriteEncodedStrip(in, 257, &l, 2057)", "TIFFWriteEncodedStrip(in, 257, &l, 2058)", "TIFFWriteEncodedStrip(in, 257, &l, 2059)", "TIFFWriteEncodedStrip(in, 257, &l, 2060)", "TIFFWriteEncodedStrip(in, 257, &l, 2061)", "TIFFWriteEncodedStrip(in, 257, &l, 2062)", "TIFFWriteEncodedStrip(in, 257, &l, 2063)", "TIFFWriteEncodedStrip(in, 257, &l, 2064)", "TIFFWriteEncodedStrip(in, 257, &l, 2065)", "TIFFWriteEncodedStrip(in, 257, &l, 2066)", "TIFFWriteEncodedStrip(in, 257, &l, 2067)", "TIFFWriteEncodedStrip(in, 257, &l, 2068)", "TIFFWriteEncodedStrip(in, 257, &l, 2069)", "TIFFWriteEncodedStrip(in, 257, &l, 2070)", "TIFFWriteEncodedStrip(in, 257, &l, 2071)", "TIFFWriteEncodedStrip(in, 257, &l, 256)", "TIFFWriteEncodedStrip(in, 257, &l, 257)", "TIFFWriteEncodedStrip(in, 257, &l, 278)", "TIFFWriteEncodedStrip(in, 257, &l, 284)", "TIFFWriteEncodedStrip(in, 257, &l, 3)", "TIFFWriteEncodedStrip(in, 257, &l, 322)", "TIFFWriteEncodedStrip(in, 257, &l, 323)", "TIFFWriteEncodedStrip(in, 257, &l, 4)", "TIFFWriteEncodedStrip(in, 257, &l, 4096)", "TIFFWriteEncodedStrip(in, 257, &l, 4104)", "TIFFWriteEncodedStrip(in, 257, &l, 4105)", "TIFFWriteEncodedStrip(in, 257, &l, 4106)", "TIFFWriteEncodedStrip(in, 257, &l, 4107)", "TIFFWriteEncodedStrip(in, 257, &l, 4108)", "TIFFWriteEncodedStrip(in, 257, &l, 4109)", "TIFFWriteEncodedStrip(in, 257, &l, 4110)", "TIFFWriteEncodedStrip(in, 257, &l, 4111)", "TIFFWriteEncodedStrip(in, 257, &l, 4112)", "TIFFWriteEncodedStrip(in, 257, &l, 4113)", "TIFFWriteEncodedStrip(in, 257, &l, 4114)", "TIFFWriteEncodedStrip(in, 257, &l, 4115)", "TIFFWriteEncodedStrip(in, 257, &l, 4116)", "TIFFWriteEncodedStrip(in, 257, &l, 4117)", "TIFFWriteEncodedStrip(in, 257, &l, 4118)", "TIFFWriteEncodedStrip(in, 257, &l, 4119)", "TIFFWriteEncodedStrip(in, 257, &l, 8)", "TIFFWriteEncodedTile(in, 257, &l, -1)", "TIFFWriteEncodedTile(in, 257, &l, 0)", "TIFFWriteEncodedTile(in, 257, &l, 1)", "TIFFWriteEncodedTile(in, 257, &l, 11)", "TIFFWriteEncodedTile(in, 257, &l, 16)", "TIFFWriteEncodedTile(in, 257, &l, 2)", "TIFFWriteEncodedTile(in, 257, &l, 2048)", "TIFFWriteEncodedTile(in, 257, &l, 2056)", "TIFFWriteEncodedTile(in, 257, &l, 2057)", "TIFFWriteEncodedTile(in, 257, &l, 2058)", "TIFFWriteEncodedTile(in, 257, &l, 2059)", "TIFFWriteEncodedTile(in, 257, &l, 2060)", "TIFFWriteEncodedTile(in, 257, &l, 2061)", "TIFFWriteEncodedTile(in, 257, &l, 2062)", "TIFFWriteEncodedTile(in, 257, &l, 2063)", "TIFFWriteEncodedTile(in, 257, &l, 2064)", "TIFFWriteEncodedTile(in, 257, &l, 2065)", "TIFFWriteEncodedTile(in, 257, &l, 2066)", "TIFFWriteEncodedTile(in, 257, &l, 2067)", "TIFFWriteEncodedTile(in, 257, &l, 2068)", "TIFFWriteEncodedTile(in, 257, &l, 2069)", "TIFFWriteEncodedTile(in, 257, &l, 2070)", "TIFFWriteEncodedTile(in, 257, &l, 2071)", "TIFFWriteEncodedTile(in, 257, &l, 256)", "TIFFWriteEncodedTile(in, 257, &l, 257)", "TIFFWriteEncodedTile(in, 257, &l, 278)", "TIFFWriteEncodedTile(in, 257, &l, 284)", "TIFFWriteEncodedTile(in, 257, &l, 3)", "TIFFWriteEncodedTile(in, 257, &l, 322)", "TIFFWriteEncodedTile(in, 257, &l, 323)", "TIFFWriteEncodedTile(in, 257, &l, 4)", "TIFFWriteEncodedTile(in, 257, &l, 4096)", "TIFFWriteEncodedTile(in, 257, &l, 4104)", "TIFFWriteEncodedTile(in, 257, &l, 4105)", "TIFFWriteEncodedTile(in, 257, &l, 4106)", "TIFFWriteEncodedTile(in, 257, &l, 4107)", "TIFFWriteEncodedTile(in, 257, &l, 4108)", "TIFFWriteEncodedTile(in, 257, &l, 4109)", "TIFFWriteEncodedTile(in, 257, &l, 4110)", "TIFFWriteEncodedTile(in, 257, &l, 4111)", "TIFFWriteEncodedTile(in, 257, &l, 4112)", "TIFFWriteEncodedTile(in, 257, &l, 4113)", "TIFFWriteEncodedTile(in, 257, &l, 4114)", "TIFFWriteEncodedTile(in, 257, &l, 4115)", "TIFFWriteEncodedTile(in, 257, &l, 4116)", "TIFFWriteEncodedTile(in, 257, &l, 4117)", "TIFFWriteEncodedTile(in, 257, &l, 4118)", "TIFFWriteEncodedTile(in, 257, &l, 4119)", "TIFFWriteEncodedTile(in, 257, &l, 8)", "TIFFWriteRawStrip(in, 257, &l, -1)", "TIFFWriteRawStrip(in, 257, &l, 0)", "TIFFWriteRawStrip(in, 257, &l, 1)", "TIFFWriteRawStrip(in, 257, &l, 11)", "TIFFWriteRawStrip(in, 257, &l, 16)", "TIFFWriteRawStrip(in, 257, &l, 2)", "TIFFWriteRawStrip(in, 257, &l, 2048)", "TIFFWriteRawStrip(in, 257, &l, 2056)", "TIFFWriteRawStrip(in, 257, &l, 2057)", "TIFFWriteRawStrip(in, 257, &l, 2058)", "TIFFWriteRawStrip(in, 257, &l, 2059)", "TIFFWriteRawStrip(in, 257, &l, 2060)", "TIFFWriteRawStrip(in, 257, &l, 2061)", "TIFFWriteRawStrip(in, 257, &l, 2062)", "TIFFWriteRawStrip(in, 257, &l, 2063)", "TIFFWriteRawStrip(in, 257, &l, 2064)", "TIFFWriteRawStrip(in, 257, &l, 2065)", "TIFFWriteRawStrip(in, 257, &l, 2066)", "TIFFWriteRawStrip(in, 257, &l, 2067)", "TIFFWriteRawStrip(in, 257, &l, 2068)", "TIFFWriteRawStrip(in, 257, &l, 2069)", "TIFFWriteRawStrip(in, 257, &l, 2070)", "TIFFWriteRawStrip(in, 257, &l, 2071)", "TIFFWriteRawStrip(in, 257, &l, 256)", "TIFFWriteRawStrip(in, 257, &l, 257)", "TIFFWriteRawStrip(in, 257, &l, 278)", "TIFFWriteRawStrip(in, 257, &l, 284)", "TIFFWriteRawStrip(in, 257, &l, 3)", "TIFFWriteRawStrip(in, 257, &l, 322)", "TIFFWriteRawStrip(in, 257, &l, 323)", "TIFFWriteRawStrip(in, 257, &l, 4)", "TIFFWriteRawStrip(in, 257, &l, 4096)", "TIFFWriteRawStrip(in, 257, &l, 4104)", "TIFFWriteRawStrip(in, 257, &l, 4105)", "TIFFWriteRawStrip(in, 257, &l, 4106)", "TIFFWriteRawStrip(in, 257, &l, 4107)", "TIFFWriteRawStrip(in, 257, &l, 4108)", "TIFFWriteRawStrip(in, 257, &l, 4109)", "TIFFWriteRawStrip(in, 257, &l, 4110)", "TIFFWriteRawStrip(in, 257, &l, 4111)", "TIFFWriteRawStrip(in, 257, &l, 4112)", "TIFFWriteRawStrip(in, 257, &l, 4113)", "TIFFWriteRawStrip(in, 257, &l, 4114)", "TIFFWriteRawStrip(in, 257, &l, 4115)", "TIFFWriteRawStrip(in, 257, &l, 4116)", "TIFFWriteRawStrip(in, 257, &l, 4117)", "TIFFWriteRawStrip(in, 257, &l, 4118)", "TIFFWriteRawStrip(in, 257, &l, 4119)", "TIFFWriteRawStrip(in, 257, &l, 8)", "TIFFWriteRawTile(in, 257, &l, -1)", "TIFFWriteRawTile(in, 257, &l, 0)", "TIFFWriteRawTile(in, 257, &l, 1)", "TIFFWriteRawTile(in, 257, &l, 11)", "TIFFWriteRawTile(in, 257, &l, 16)", "TIFFWriteRawTile(in, 257, &l, 2)", "TIFFWriteRawTile(in, 257, &l, 2048)", "TIFFWriteRawTile(in, 257, &l, 2056)", "TIFFWriteRawTile(in, 257, &l, 2057)", "TIFFWriteRawTile(in, 257, &l, 2058)", "TIFFWriteRawTile(in, 257, &l, 2059)", "TIFFWriteRawTile(in, 257, &l, 2060)", "TIFFWriteRawTile(in, 257, &l, 2061)", "TIFFWriteRawTile(in, 257, &l, 2062)", "TIFFWriteRawTile(in, 257, &l, 2063)", "TIFFWriteRawTile(in, 257, &l, 2064)", "TIFFWriteRawTile(in, 257, &l, 2065)", "TIFFWriteRawTile(in, 257, &l, 2066)", "TIFFWriteRawTile(in, 257, &l, 2067)", "TIFFWriteRawTile(in, 257, &l, 2068)", "TIFFWriteRawTile(in, 257, &l, 2069)", "TIFFWriteRawTile(in, 257, &l, 2070)", "TIFFWriteRawTile(in, 257, &l, 2071)", "TIFFWriteRawTile(in, 257, &l, 256)", "TIFFWriteRawTile(in, 257, &l, 257)", "TIFFWriteRawTile(in, 257, &l, 278)", "TIFFWriteRawTile(in, 257, &l, 284)", "TIFFWriteRawTile(in, 257, &l, 3)", "TIFFWriteRawTile(in, 257, &l, 322)", "TIFFWriteRawTile(in, 257, &l, 323)", "TIFFWriteRawTile(in, 257, &l, 4)", "TIFFWriteRawTile(in, 257, &l, 4096)", "TIFFWriteRawTile(in, 257, &l, 4104)", "TIFFWriteRawTile(in, 257, &l, 4105)", "TIFFWriteRawTile(in, 257, &l, 4106)", "TIFFWriteRawTile(in, 257, &l, 4107)", "TIFFWriteRawTile(in, 257, &l, 4108)", "TIFFWriteRawTile(in, 257, &l, 4109)", "TIFFWriteRawTile(in, 257, &l, 4110)", "TIFFWriteRawTile(in, 257, &l, 4111)", "TIFFWriteRawTile(in, 257, &l, 4112)", "TIFFWriteRawTile(in, 257, &l, 4113)", "TIFFWriteRawTile(in, 257, &l, 4114)", "TIFFWriteRawTile(in, 257, &l, 4115)", "TIFFWriteRawTile(in, 257, &l, 4116)", "TIFFWriteRawTile(in, 257, &l, 4117)", "TIFFWriteRawTile(in, 257, &l, 4118)", "TIFFWriteRawTile(in, 257, &l, 4119)", "TIFFWriteRawTile(in, 257, &l, 8)", "{\n}\n", "TIFFGetFieldDefaulted(in, 257, &l)", "TIFFReadRGBAStrip(in, 257, &l)", "TIFFSetField(in, 257, &l)", "TIFFVGetField(in, 257, &l)", "TIFFVGetFieldDefaulted(in, 257, &l)", "TIFFVSetField(in, 257, &l)", "printf(in, 257, &l)", "TIFFGetField((&bitspersample), 257, &l)", "TIFFGetField((&bychunk), 257, &l)", "TIFFGetField((&in), 257, &l)", "TIFFGetField((&l), 257, &l)", "TIFFGetField((&out), 257, &l)", "TIFFGetField((&samplesperpixel), 257, &l)", "TIFFGetField((&shortv), 257, &l)", "TIFFGetField((&tl), 257, &l)", "TIFFGetField((&tw), 257, &l)", "TIFFGetField((&w), 257, &l)", "TIFFGetField((in), 257, &l)", "TIFFGetField((out), 257, &l)", "TIFFGetField(in, (0 * bitspersample), &l)", "TIFFGetField(in, (0 * bychunk), &l)", "TIFFGetField(in, (0 * l), &l)", "TIFFGetField(in, (0 * samplesperpixel), &l)", "TIFFGetField(in, (0 * shortv), &l)", "TIFFGetField(in, (0 * tl), &l)", "TIFFGetField(in, (0 * tw), &l)", "TIFFGetField(in, (0 * w), &l)", "TIFFGetField(in, (0), &l)", "TIFFGetField(in, (bitspersample != 0), &l)", "TIFFGetField(in, (bitspersample != bychunk), &l)", "TIFFGetField(in, (bitspersample != l), &l)", "TIFFGetField(in, (bitspersample != samplesperpixel), &l)", "TIFFGetField(in, (bitspersample != shortv), &l)", "TIFFGetField(in, (bitspersample != tl), &l)", "TIFFGetField(in, (bitspersample != tw), &l)", "TIFFGetField(in, (bitspersample != w), &l)", "TIFFGetField(in, (bitspersample * bychunk), &l)", "TIFFGetField(in, (bitspersample * l), &l)", "TIFFGetField(in, (bitspersample * samplesperpixel), &l)", "TIFFGetField(in, (bitspersample * shortv), &l)", "TIFFGetField(in, (bitspersample * tl), &l)", "TIFFGetField(in, (bitspersample * tw), &l)", "TIFFGetField(in, (bitspersample * w), &l)", "TIFFGetField(in, (bitspersample + 0), &l)", "TIFFGetField(in, (bitspersample + bychunk), &l)", "TIFFGetField(in, (bitspersample + l), &l)", "TIFFGetField(in, (bitspersample + samplesperpixel), &l)", "TIFFGetField(in, (bitspersample + shortv), &l)", "TIFFGetField(in, (bitspersample + tl), &l)", "TIFFGetField(in, (bitspersample + tw), &l)", "TIFFGetField(in, (bitspersample + w), &l)", "TIFFGetField(in, (bitspersample - 0), &l)", "TIFFGetField(in, (bitspersample - bychunk), &l)", "TIFFGetField(in, (bitspersample - l), &l)", "TIFFGetField(in, (bitspersample - samplesperpixel), &l)", "TIFFGetField(in, (bitspersample - shortv), &l)", "TIFFGetField(in, (bitspersample - tl), &l)", "TIFFGetField(in, (bitspersample - tw), &l)", "TIFFGetField(in, (bitspersample - w), &l)", "TIFFGetField(in, (bitspersample == 0), &l)", "TIFFGetField(in, (bitspersample == bychunk), &l)", "TIFFGetField(in, (bitspersample == l), &l)", "TIFFGetField(in, (bitspersample == samplesperpixel), &l)", "TIFFGetField(in, (bitspersample == shortv), &l)", "TIFFGetField(in, (bitspersample == tl), &l)", "TIFFGetField(in, (bitspersample == tw), &l)", "TIFFGetField(in, (bitspersample == w), &l)", "TIFFGetField(in, (bychunk != 0), &l)", "TIFFGetField(in, (bychunk * bitspersample), &l)", "TIFFGetField(in, (bychunk * l), &l)", "TIFFGetField(in, (bychunk * samplesperpixel), &l)", "TIFFGetField(in, (bychunk * shortv), &l)", "TIFFGetField(in, (bychunk * tl), &l)", "TIFFGetField(in, (bychunk * tw), &l)", "TIFFGetField(in, (bychunk * w), &l)", "TIFFGetField(in, (bychunk + 0), &l)", "TIFFGetField(in, (bychunk - 0), &l)", "TIFFGetField(in, (bychunk == 0), &l)", "TIFFGetField(in, (in != 0), &l)", "TIFFGetField(in, (in != out), &l)", "TIFFGetField(in, (in == 0), &l)", "TIFFGetField(in, (in == out), &l)", "TIFFGetField(in, (l != 0), &l)", "TIFFGetField(in, (l != bychunk), &l)", "TIFFGetField(in, (l != tl), &l)", "TIFFGetField(in, (l != tw), &l)", "TIFFGetField(in, (l * bitspersample), &l)", "TIFFGetField(in, (l * bychunk), &l)", "TIFFGetField(in, (l * samplesperpixel), &l)", "TIFFGetField(in, (l * shortv), &l)", "TIFFGetField(in, (l * tl), &l)", "TIFFGetField(in, (l * tw), &l)", "TIFFGetField(in, (l * w), &l)", "TIFFGetField(in, (l + 0), &l)", "TIFFGetField(in, (l + bychunk), &l)", "TIFFGetField(in, (l + tl), &l)", "TIFFGetField(in, (l + tw), &l)", "TIFFGetField(in, (l - 0), &l)", "TIFFGetField(in, (l - bychunk), &l)", "TIFFGetField(in, (l - tl), &l)", "TIFFGetField(in, (l - tw), &l)", "TIFFGetField(in, (l == 0), &l)", "TIFFGetField(in, (l == bychunk), &l)", "TIFFGetField(in, (l == tl), &l)", "TIFFGetField(in, (l == tw), &l)", "TIFFGetField(in, (out != 0), &l)", "TIFFGetField(in, (out == 0), &l)", "TIFFGetField(in, (samplesperpixel != 0), &l)", "TIFFGetField(in, (samplesperpixel != bychunk), &l)", "TIFFGetField(in, (samplesperpixel != l), &l)", "TIFFGetField(in, (samplesperpixel != shortv), &l)", "TIFFGetField(in, (samplesperpixel != tl), &l)", "TIFFGetField(in, (samplesperpixel != tw), &l)", "TIFFGetField(in, (samplesperpixel != w), &l)", "TIFFGetField(in, (samplesperpixel * bitspersample), &l)", "TIFFGetField(in, (samplesperpixel * bychunk), &l)", "TIFFGetField(in, (samplesperpixel * l), &l)", "TIFFGetField(in, (samplesperpixel * shortv), &l)", "TIFFGetField(in, (samplesperpixel * tl), &l)", "TIFFGetField(in, (samplesperpixel * tw), &l)", "TIFFGetField(in, (samplesperpixel * w), &l)", "TIFFGetField(in, (samplesperpixel + 0), &l)", "TIFFGetField(in, (samplesperpixel + bychunk), &l)", "TIFFGetField(in, (samplesperpixel + l), &l)", "TIFFGetField(in, (samplesperpixel + shortv), &l)", "TIFFGetField(in, (samplesperpixel + tl), &l)", "TIFFGetField(in, (samplesperpixel + tw), &l)", "TIFFGetField(in, (samplesperpixel + w), &l)", "TIFFGetField(in, (samplesperpixel - 0), &l)", "TIFFGetField(in, (samplesperpixel - bychunk), &l)", "TIFFGetField(in, (samplesperpixel - l), &l)", "TIFFGetField(in, (samplesperpixel - shortv), &l)", "TIFFGetField(in, (samplesperpixel - tl), &l)", "TIFFGetField(in, (samplesperpixel - tw), &l)", "TIFFGetField(in, (samplesperpixel - w), &l)", "TIFFGetField(in, (samplesperpixel == 0), &l)", "TIFFGetField(in, (samplesperpixel == bychunk), &l)", "TIFFGetField(in, (samplesperpixel == l), &l)", "TIFFGetField(in, (samplesperpixel == shortv), &l)", "TIFFGetField(in, (samplesperpixel == tl), &l)", "TIFFGetField(in, (samplesperpixel == tw), &l)", "TIFFGetField(in, (samplesperpixel == w), &l)", "TIFFGetField(in, (shortv != 0), &l)", "TIFFGetField(in, (shortv != bychunk), &l)", "TIFFGetField(in, (shortv != l), &l)", "TIFFGetField(in, (shortv != tl), &l)", "TIFFGetField(in, (shortv != tw), &l)", "TIFFGetField(in, (shortv != w), &l)", "TIFFGetField(in, (shortv * bitspersample), &l)", "TIFFGetField(in, (shortv * bychunk), &l)", "TIFFGetField(in, (shortv * l), &l)", "TIFFGetField(in, (shortv * samplesperpixel), &l)", "TIFFGetField(in, (shortv * tl), &l)", "TIFFGetField(in, (shortv * tw), &l)", "TIFFGetField(in, (shortv * w), &l)", "TIFFGetField(in, (shortv + 0), &l)", "TIFFGetField(in, (shortv + bychunk), &l)", "TIFFGetField(in, (shortv + l), &l)", "TIFFGetField(in, (shortv + tl), &l)", "TIFFGetField(in, (shortv + tw), &l)", "TIFFGetField(in, (shortv + w), &l)", "TIFFGetField(in, (shortv - 0), &l)", "TIFFGetField(in, (shortv - bychunk), &l)", "TIFFGetField(in, (shortv - l), &l)", "TIFFGetField(in, (shortv - tl), &l)", "TIFFGetField(in, (shortv - tw), &l)", "TIFFGetField(in, (shortv - w), &l)", "TIFFGetField(in, (shortv == 0), &l)", "TIFFGetField(in, (shortv == bychunk), &l)", "TIFFGetField(in, (shortv == l), &l)", "TIFFGetField(in, (shortv == tl), &l)", "TIFFGetField(in, (shortv == tw), &l)", "TIFFGetField(in, (shortv == w), &l)", "TIFFGetField(in, (tl != 0), &l)", "TIFFGetField(in, (tl != bychunk), &l)", "TIFFGetField(in, (tl * bitspersample), &l)", "TIFFGetField(in, (tl * bychunk), &l)", "TIFFGetField(in, (tl * l), &l)", "TIFFGetField(in, (tl * samplesperpixel), &l)", "TIFFGetField(in, (tl * shortv), &l)", "TIFFGetField(in, (tl * tw), &l)", "TIFFGetField(in, (tl * w), &l)", "TIFFGetField(in, (tl + 0), &l)", "TIFFGetField(in, (tl + bychunk), &l)", "TIFFGetField(in, (tl - 0), &l)", "TIFFGetField(in, (tl - bychunk), &l)", "TIFFGetField(in, (tl == 0), &l)", "TIFFGetField(in, (tl == bychunk), &l)", "TIFFGetField(in, (tw != 0), &l)", "TIFFGetField(in, (tw != bychunk), &l)", "TIFFGetField(in, (tw != tl), &l)", "TIFFGetField(in, (tw * bitspersample), &l)", "TIFFGetField(in, (tw * bychunk), &l)", "TIFFGetField(in, (tw * l), &l)", "TIFFGetField(in, (tw * samplesperpixel), &l)", "TIFFGetField(in, (tw * shortv), &l)", "TIFFGetField(in, (tw * tl), &l)", "TIFFGetField(in, (tw * w), &l)", "TIFFGetField(in, (tw + 0), &l)", "TIFFGetField(in, (tw + bychunk), &l)", "TIFFGetField(in, (tw + tl), &l)", "TIFFGetField(in, (tw - 0), &l)", "TIFFGetField(in, (tw - bychunk), &l)", "TIFFGetField(in, (tw - tl), &l)", "TIFFGetField(in, (tw == 0), &l)", "TIFFGetField(in, (tw == bychunk), &l)", "TIFFGetField(in, (tw == tl), &l)", "TIFFGetField(in, (w != 0), &l)", "TIFFGetField(in, (w != bychunk), &l)", "TIFFGetField(in, (w != l), &l)", "TIFFGetField(in, (w != tl), &l)", "TIFFGetField(in, (w != tw), &l)", "TIFFGetField(in, (w * bitspersample), &l)", "TIFFGetField(in, (w * bychunk), &l)", "TIFFGetField(in, (w * l), &l)", "TIFFGetField(in, (w * samplesperpixel), &l)", "TIFFGetField(in, (w * shortv), &l)", "TIFFGetField(in, (w * tl), &l)", "TIFFGetField(in, (w * tw), &l)", "TIFFGetField(in, (w + 0), &l)", "TIFFGetField(in, (w + bychunk), &l)", "TIFFGetField(in, (w + l), &l)", "TIFFGetField(in, (w + tl), &l)", "TIFFGetField(in, (w + tw), &l)", "TIFFGetField(in, (w - 0), &l)", "TIFFGetField(in, (w - bychunk), &l)", "TIFFGetField(in, (w - l), &l)", "TIFFGetField(in, (w - tl), &l)", "TIFFGetField(in, (w - tw), &l)", "TIFFGetField(in, (w == 0), &l)", "TIFFGetField(in, (w == bychunk), &l)", "TIFFGetField(in, (w == l), &l)", "TIFFGetField(in, (w == tl), &l)", "TIFFGetField(in, (w == tw), &l)", "TIFFGetField(in, 257, &(0 * bitspersample))", "TIFFGetField(in, 257, &(0 * bychunk))", "TIFFGetField(in, 257, &(0 * l))", "TIFFGetField(in, 257, &(0 * samplesperpixel))", "TIFFGetField(in, 257, &(0 * shortv))", "TIFFGetField(in, 257, &(0 * tl))", "TIFFGetField(in, 257, &(0 * tw))", "TIFFGetField(in, 257, &(0 * w))", "TIFFGetField(in, 257, &(bitspersample != 0))", "TIFFGetField(in, 257, &(bitspersample != bychunk))", "TIFFGetField(in, 257, &(bitspersample != l))", "TIFFGetField(in, 257, &(bitspersample != samplesperpixel))", "TIFFGetField(in, 257, &(bitspersample != shortv))", "TIFFGetField(in, 257, &(bitspersample != tl))", "TIFFGetField(in, 257, &(bitspersample != tw))", "TIFFGetField(in, 257, &(bitspersample != w))", "TIFFGetField(in, 257, &(bitspersample * bychunk))", "TIFFGetField(in, 257, &(bitspersample * l))", "TIFFGetField(in, 257, &(bitspersample * samplesperpixel))", "TIFFGetField(in, 257, &(bitspersample * shortv))", "TIFFGetField(in, 257, &(bitspersample * tl))", "TIFFGetField(in, 257, &(bitspersample * tw))", "TIFFGetField(in, 257, &(bitspersample * w))", "TIFFGetField(in, 257, &(bitspersample + 0))", "TIFFGetField(in, 257, &(bitspersample + bychunk))", "TIFFGetField(in, 257, &(bitspersample + l))", "TIFFGetField(in, 257, &(bitspersample + samplesperpixel))", "TIFFGetField(in, 257, &(bitspersample + shortv))", "TIFFGetField(in, 257, &(bitspersample + tl))", "TIFFGetField(in, 257, &(bitspersample + tw))", "TIFFGetField(in, 257, &(bitspersample + w))", "TIFFGetField(in, 257, &(bitspersample - 0))", "TIFFGetField(in, 257, &(bitspersample - bychunk))", "TIFFGetField(in, 257, &(bitspersample - l))", "TIFFGetField(in, 257, &(bitspersample - samplesperpixel))", "TIFFGetField(in, 257, &(bitspersample - shortv))", "TIFFGetField(in, 257, &(bitspersample - tl))", "TIFFGetField(in, 257, &(bitspersample - tw))", "TIFFGetField(in, 257, &(bitspersample - w))", "TIFFGetField(in, 257, &(bitspersample == 0))", "TIFFGetField(in, 257, &(bitspersample == bychunk))", "TIFFGetField(in, 257, &(bitspersample == l))", "TIFFGetField(in, 257, &(bitspersample == samplesperpixel))", "TIFFGetField(in, 257, &(bitspersample == shortv))", "TIFFGetField(in, 257, &(bitspersample == tl))", "TIFFGetField(in, 257, &(bitspersample == tw))", "TIFFGetField(in, 257, &(bitspersample == w))", "TIFFGetField(in, 257, &(bychunk != 0))", "TIFFGetField(in, 257, &(bychunk * bitspersample))", "TIFFGetField(in, 257, &(bychunk * l))", "TIFFGetField(in, 257, &(bychunk * samplesperpixel))", "TIFFGetField(in, 257, &(bychunk * shortv))", "TIFFGetField(in, 257, &(bychunk * tl))", "TIFFGetField(in, 257, &(bychunk * tw))", "TIFFGetField(in, 257, &(bychunk * w))", "TIFFGetField(in, 257, &(bychunk + 0))", "TIFFGetField(in, 257, &(bychunk - 0))", "TIFFGetField(in, 257, &(bychunk == 0))", "TIFFGetField(in, 257, &(in != 0))", "TIFFGetField(in, 257, &(in != out))", "TIFFGetField(in, 257, &(in == 0))", "TIFFGetField(in, 257, &(in == out))", "TIFFGetField(in, 257, &(l != 0))", "TIFFGetField(in, 257, &(l != bychunk))", "TIFFGetField(in, 257, &(l != tl))", "TIFFGetField(in, 257, &(l != tw))", "TIFFGetField(in, 257, &(l * bitspersample))", "TIFFGetField(in, 257, &(l * bychunk))", "TIFFGetField(in, 257, &(l * samplesperpixel))", "TIFFGetField(in, 257, &(l * shortv))", "TIFFGetField(in, 257, &(l * tl))", "TIFFGetField(in, 257, &(l * tw))", "TIFFGetField(in, 257, &(l * w))", "TIFFGetField(in, 257, &(l + 0))", "TIFFGetField(in, 257, &(l + bychunk))", "TIFFGetField(in, 257, &(l + tl))", "TIFFGetField(in, 257, &(l + tw))", "TIFFGetField(in, 257, &(l - 0))", "TIFFGetField(in, 257, &(l - bychunk))", "TIFFGetField(in, 257, &(l - tl))", "TIFFGetField(in, 257, &(l - tw))", "TIFFGetField(in, 257, &(l == 0))", "TIFFGetField(in, 257, &(l == bychunk))", "TIFFGetField(in, 257, &(l == tl))", "TIFFGetField(in, 257, &(l == tw))", "TIFFGetField(in, 257, &(l))", "TIFFGetField(in, 257, &(out != 0))", "TIFFGetField(in, 257, &(out == 0))", "TIFFGetField(in, 257, &(samplesperpixel != 0))", "TIFFGetField(in, 257, &(samplesperpixel != bychunk))", "TIFFGetField(in, 257, &(samplesperpixel != l))", "TIFFGetField(in, 257, &(samplesperpixel != shortv))", "TIFFGetField(in, 257, &(samplesperpixel != tl))", "TIFFGetField(in, 257, &(samplesperpixel != tw))", "TIFFGetField(in, 257, &(samplesperpixel != w))", "TIFFGetField(in, 257, &(samplesperpixel * bitspersample))", "TIFFGetField(in, 257, &(samplesperpixel * bychunk))", "TIFFGetField(in, 257, &(samplesperpixel * l))", "TIFFGetField(in, 257, &(samplesperpixel * shortv))", "TIFFGetField(in, 257, &(samplesperpixel * tl))", "TIFFGetField(in, 257, &(samplesperpixel * tw))", "TIFFGetField(in, 257, &(samplesperpixel * w))", "TIFFGetField(in, 257, &(samplesperpixel + 0))", "TIFFGetField(in, 257, &(samplesperpixel + bychunk))", "TIFFGetField(in, 257, &(samplesperpixel + l))", "TIFFGetField(in, 257, &(samplesperpixel + shortv))", "TIFFGetField(in, 257, &(samplesperpixel + tl))", "TIFFGetField(in, 257, &(samplesperpixel + tw))", "TIFFGetField(in, 257, &(samplesperpixel + w))", "TIFFGetField(in, 257, &(samplesperpixel - 0))", "TIFFGetField(in, 257, &(samplesperpixel - bychunk))", "TIFFGetField(in, 257, &(samplesperpixel - l))", "TIFFGetField(in, 257, &(samplesperpixel - shortv))", "TIFFGetField(in, 257, &(samplesperpixel - tl))", "TIFFGetField(in, 257, &(samplesperpixel - tw))", "TIFFGetField(in, 257, &(samplesperpixel - w))", "TIFFGetField(in, 257, &(samplesperpixel == 0))", "TIFFGetField(in, 257, &(samplesperpixel == bychunk))", "TIFFGetField(in, 257, &(samplesperpixel == l))", "TIFFGetField(in, 257, &(samplesperpixel == shortv))", "TIFFGetField(in, 257, &(samplesperpixel == tl))", "TIFFGetField(in, 257, &(samplesperpixel == tw))", "TIFFGetField(in, 257, &(samplesperpixel == w))", "TIFFGetField(in, 257, &(shortv != 0))", "TIFFGetField(in, 257, &(shortv != bychunk))", "TIFFGetField(in, 257, &(shortv != l))", "TIFFGetField(in, 257, &(shortv != tl))", "TIFFGetField(in, 257, &(shortv != tw))", "TIFFGetField(in, 257, &(shortv != w))", "TIFFGetField(in, 257, &(shortv * bitspersample))", "TIFFGetField(in, 257, &(shortv * bychunk))", "TIFFGetField(in, 257, &(shortv * l))", "TIFFGetField(in, 257, &(shortv * samplesperpixel))", "TIFFGetField(in, 257, &(shortv * tl))", "TIFFGetField(in, 257, &(shortv * tw))", "TIFFGetField(in, 257, &(shortv * w))", "TIFFGetField(in, 257, &(shortv + 0))", "TIFFGetField(in, 257, &(shortv + bychunk))", "TIFFGetField(in, 257, &(shortv + l))", "TIFFGetField(in, 257, &(shortv + tl))", "TIFFGetField(in, 257, &(shortv + tw))", "TIFFGetField(in, 257, &(shortv + w))", "TIFFGetField(in, 257, &(shortv - 0))", "TIFFGetField(in, 257, &(shortv - bychunk))", "TIFFGetField(in, 257, &(shortv - l))", "TIFFGetField(in, 257, &(shortv - tl))", "TIFFGetField(in, 257, &(shortv - tw))", "TIFFGetField(in, 257, &(shortv - w))", "TIFFGetField(in, 257, &(shortv == 0))", "TIFFGetField(in, 257, &(shortv == bychunk))", "TIFFGetField(in, 257, &(shortv == l))", "TIFFGetField(in, 257, &(shortv == tl))", "TIFFGetField(in, 257, &(shortv == tw))", "TIFFGetField(in, 257, &(shortv == w))", "TIFFGetField(in, 257, &(tl != 0))", "TIFFGetField(in, 257, &(tl != bychunk))", "TIFFGetField(in, 257, &(tl * bitspersample))", "TIFFGetField(in, 257, &(tl * bychunk))", "TIFFGetField(in, 257, &(tl * l))", "TIFFGetField(in, 257, &(tl * samplesperpixel))", "TIFFGetField(in, 257, &(tl * shortv))", "TIFFGetField(in, 257, &(tl * tw))", "TIFFGetField(in, 257, &(tl * w))", "TIFFGetField(in, 257, &(tl + 0))", "TIFFGetField(in, 257, &(tl + bychunk))", "TIFFGetField(in, 257, &(tl - 0))", "TIFFGetField(in, 257, &(tl - bychunk))", "TIFFGetField(in, 257, &(tl == 0))", "TIFFGetField(in, 257, &(tl == bychunk))", "TIFFGetField(in, 257, &(tl))", "TIFFGetField(in, 257, &(tw != 0))", "TIFFGetField(in, 257, &(tw != bychunk))", "TIFFGetField(in, 257, &(tw != tl))", "TIFFGetField(in, 257, &(tw * bitspersample))", "TIFFGetField(in, 257, &(tw * bychunk))", "TIFFGetField(in, 257, &(tw * l))", "TIFFGetField(in, 257, &(tw * samplesperpixel))", "TIFFGetField(in, 257, &(tw * shortv))", "TIFFGetField(in, 257, &(tw * tl))", "TIFFGetField(in, 257, &(tw * w))", "TIFFGetField(in, 257, &(tw + 0))", "TIFFGetField(in, 257, &(tw + bychunk))", "TIFFGetField(in, 257, &(tw + tl))", "TIFFGetField(in, 257, &(tw - 0))", "TIFFGetField(in, 257, &(tw - bychunk))", "TIFFGetField(in, 257, &(tw - tl))", "TIFFGetField(in, 257, &(tw == 0))", "TIFFGetField(in, 257, &(tw == bychunk))", "TIFFGetField(in, 257, &(tw == tl))", "TIFFGetField(in, 257, &(tw))", "TIFFGetField(in, 257, &(w != 0))", "TIFFGetField(in, 257, &(w != bychunk))", "TIFFGetField(in, 257, &(w != l))", "TIFFGetField(in, 257, &(w != tl))", "TIFFGetField(in, 257, &(w != tw))", "TIFFGetField(in, 257, &(w * bitspersample))", "TIFFGetField(in, 257, &(w * bychunk))", "TIFFGetField(in, 257, &(w * l))", "TIFFGetField(in, 257, &(w * samplesperpixel))", "TIFFGetField(in, 257, &(w * shortv))", "TIFFGetField(in, 257, &(w * tl))", "TIFFGetField(in, 257, &(w * tw))", "TIFFGetField(in, 257, &(w + 0))", "TIFFGetField(in, 257, &(w + bychunk))", "TIFFGetField(in, 257, &(w + l))", "TIFFGetField(in, 257, &(w + tl))", "TIFFGetField(in, 257, &(w + tw))", "TIFFGetField(in, 257, &(w - 0))", "TIFFGetField(in, 257, &(w - bychunk))", "TIFFGetField(in, 257, &(w - l))", "TIFFGetField(in, 257, &(w - tl))", "TIFFGetField(in, 257, &(w - tw))", "TIFFGetField(in, 257, &(w == 0))", "TIFFGetField(in, 257, &(w == bychunk))", "TIFFGetField(in, 257, &(w == l))", "TIFFGetField(in, 257, &(w == tl))", "TIFFGetField(in, 257, &(w == tw))", "TIFFGetField(in, 257, &(w))"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-9.47882198718382, -7.54052319818382, -9.43881483818382, -6.92641894118382, -8.55059381018382, -7.23993547818382, -8.87285857818382, -9.28313962618382, -8.61443843818382, -9.21002476918382, -9.03570030618382, -9.03536011818382, -7.68719321018382, -7.68719321018382, -7.23993547818382, -6.88036719318382]
								}, {
									"case":	2,
									"scores":	[-7.20506429818382]
								}, {
									"case":	3,
									"scores":	[-7.20506429818382]
								}, {
									"case":	4,
									"scores":	[-7.20506429818382]
								}, {
									"case":	5,
									"scores":	[-7.20506429818382]
								}, {
									"case":	6,
									"scores":	[-7.20506429818382]
								}, {
									"case":	7,
									"scores":	[-7.20506429818382]
								}, {
									"case":	8,
									"scores":	[-7.20506429818382]
								}, {
									"case":	9,
									"scores":	[-7.20506429818382]
								}, {
									"case":	10,
									"scores":	[-7.20506429818382]
								}, {
									"case":	11,
									"scores":	[-7.20506429818382]
								}, {
									"case":	12,
									"scores":	[-7.20506429818382]
								}, {
									"case":	13,
									"scores":	[-7.20506429818382]
								}, {
									"case":	14,
									"scores":	[-7.20506429818382]
								}, {
									"case":	15,
									"scores":	[-7.20506429818382]
								}, {
									"case":	16,
									"scores":	[-7.20506429818382]
								}, {
									"case":	17,
									"scores":	[-7.20506429818382]
								}, {
									"case":	18,
									"scores":	[-7.20506429818382]
								}, {
									"case":	19,
									"scores":	[-7.20506429818382]
								}, {
									"case":	20,
									"scores":	[-7.20506429818382]
								}, {
									"case":	21,
									"scores":	[-7.20506429818382]
								}, {
									"case":	22,
									"scores":	[-7.20506429818382]
								}, {
									"case":	23,
									"scores":	[-7.20506429818382]
								}, {
									"case":	24,
									"scores":	[-7.20506429818382]
								}, {
									"case":	25,
									"scores":	[-7.20506429818382]
								}, {
									"case":	26,
									"scores":	[-7.20506429818382]
								}, {
									"case":	27,
									"scores":	[-7.20506429818382]
								}, {
									"case":	28,
									"scores":	[-7.20506429818382]
								}, {
									"case":	29,
									"scores":	[-7.20506429818382]
								}, {
									"case":	30,
									"scores":	[-7.20506429818382]
								}, {
									"case":	31,
									"scores":	[-7.20506429818382]
								}, {
									"case":	32,
									"scores":	[-7.20506429818382]
								}, {
									"case":	33,
									"scores":	[-7.20506429818382]
								}, {
									"case":	34,
									"scores":	[-7.20506429818382]
								}, {
									"case":	35,
									"scores":	[-7.20506429818382]
								}, {
									"case":	36,
									"scores":	[-7.20506429818382]
								}, {
									"case":	37,
									"scores":	[-7.20506429818382]
								}, {
									"case":	38,
									"scores":	[-7.20506429818382]
								}, {
									"case":	39,
									"scores":	[-7.20506429818382]
								}, {
									"case":	40,
									"scores":	[-7.20506429818382]
								}, {
									"case":	41,
									"scores":	[-7.20506429818382]
								}, {
									"case":	42,
									"scores":	[-7.20506429818382]
								}, {
									"case":	43,
									"scores":	[-7.20506429818382]
								}, {
									"case":	44,
									"scores":	[-7.20506429818382]
								}, {
									"case":	45,
									"scores":	[-7.20506429818382]
								}, {
									"case":	46,
									"scores":	[-7.20506429818382]
								}, {
									"case":	47,
									"scores":	[-7.20506429818382]
								}, {
									"case":	48,
									"scores":	[-7.20506429818382]
								}, {
									"case":	49,
									"scores":	[-7.20506429818382]
								}, {
									"case":	50,
									"scores":	[-7.20506429818382]
								}, {
									"case":	51,
									"scores":	[-7.20506429818382]
								}, {
									"case":	52,
									"scores":	[-7.20506429818382]
								}, {
									"case":	53,
									"scores":	[-7.20506429818382]
								}, {
									"case":	54,
									"scores":	[-7.20506429818382]
								}, {
									"case":	55,
									"scores":	[-7.20506429818382]
								}, {
									"case":	56,
									"scores":	[-7.20506429818382]
								}, {
									"case":	57,
									"scores":	[-7.20506429818382]
								}, {
									"case":	58,
									"scores":	[-7.20506429818382]
								}, {
									"case":	59,
									"scores":	[-7.20506429818382]
								}, {
									"case":	60,
									"scores":	[-7.20506429818382]
								}, {
									"case":	61,
									"scores":	[-7.20506429818382]
								}, {
									"case":	62,
									"scores":	[-7.20506429818382]
								}, {
									"case":	63,
									"scores":	[-7.20506429818382]
								}, {
									"case":	64,
									"scores":	[-7.20506429818382]
								}, {
									"case":	65,
									"scores":	[-7.20506429818382]
								}, {
									"case":	66,
									"scores":	[-7.20506429818382]
								}, {
									"case":	67,
									"scores":	[-7.20506429818382]
								}, {
									"case":	68,
									"scores":	[-7.20506429818382]
								}, {
									"case":	69,
									"scores":	[-7.20506429818382]
								}, {
									"case":	70,
									"scores":	[-7.20506429818382]
								}, {
									"case":	71,
									"scores":	[-7.20506429818382]
								}, {
									"case":	72,
									"scores":	[-7.20506429818382]
								}, {
									"case":	73,
									"scores":	[-7.20506429818382]
								}, {
									"case":	74,
									"scores":	[-7.20506429818382]
								}, {
									"case":	75,
									"scores":	[-7.20506429818382]
								}, {
									"case":	76,
									"scores":	[-7.20506429818382]
								}, {
									"case":	77,
									"scores":	[-7.20506429818382]
								}, {
									"case":	78,
									"scores":	[-7.20506429818382]
								}, {
									"case":	79,
									"scores":	[-7.20506429818382]
								}, {
									"case":	80,
									"scores":	[-7.20506429818382]
								}, {
									"case":	81,
									"scores":	[-7.20506429818382]
								}, {
									"case":	82,
									"scores":	[-7.20506429818382]
								}, {
									"case":	83,
									"scores":	[-7.20506429818382]
								}, {
									"case":	84,
									"scores":	[-7.20506429818382]
								}, {
									"case":	85,
									"scores":	[-7.20506429818382]
								}, {
									"case":	86,
									"scores":	[-7.20506429818382]
								}, {
									"case":	87,
									"scores":	[-7.20506429818382]
								}, {
									"case":	88,
									"scores":	[-7.20506429818382]
								}, {
									"case":	89,
									"scores":	[-7.20506429818382]
								}, {
									"case":	90,
									"scores":	[-7.20506429818382]
								}, {
									"case":	91,
									"scores":	[-7.20506429818382]
								}, {
									"case":	92,
									"scores":	[-7.20506429818382]
								}, {
									"case":	93,
									"scores":	[-7.20506429818382]
								}, {
									"case":	94,
									"scores":	[-7.20506429818382]
								}, {
									"case":	95,
									"scores":	[-7.20506429818382]
								}, {
									"case":	96,
									"scores":	[-7.20506429818382]
								}, {
									"case":	97,
									"scores":	[-7.20506429818382]
								}, {
									"case":	98,
									"scores":	[-7.20506429818382]
								}, {
									"case":	99,
									"scores":	[-7.20506429818382]
								}, {
									"case":	100,
									"scores":	[-7.20506429818382]
								}, {
									"case":	101,
									"scores":	[-7.20506429818382]
								}, {
									"case":	102,
									"scores":	[-7.20506429818382]
								}, {
									"case":	103,
									"scores":	[-7.20506429818382]
								}, {
									"case":	104,
									"scores":	[-7.20506429818382]
								}, {
									"case":	105,
									"scores":	[-7.20506429818382]
								}, {
									"case":	106,
									"scores":	[-7.20506429818382]
								}, {
									"case":	107,
									"scores":	[-7.20506429818382]
								}, {
									"case":	108,
									"scores":	[-7.20506429818382]
								}, {
									"case":	109,
									"scores":	[-7.20506429818382]
								}, {
									"case":	110,
									"scores":	[-7.20506429818382]
								}, {
									"case":	111,
									"scores":	[-7.20506429818382]
								}, {
									"case":	112,
									"scores":	[-7.20506429818382]
								}, {
									"case":	113,
									"scores":	[-7.20506429818382]
								}, {
									"case":	114,
									"scores":	[-7.20506429818382]
								}, {
									"case":	115,
									"scores":	[-7.20506429818382]
								}, {
									"case":	116,
									"scores":	[-7.20506429818382]
								}, {
									"case":	117,
									"scores":	[-7.20506429818382]
								}, {
									"case":	118,
									"scores":	[-7.20506429818382]
								}, {
									"case":	119,
									"scores":	[-7.20506429818382]
								}, {
									"case":	120,
									"scores":	[-7.20506429818382]
								}, {
									"case":	121,
									"scores":	[-7.20506429818382]
								}, {
									"case":	122,
									"scores":	[-7.20506429818382]
								}, {
									"case":	123,
									"scores":	[-7.20506429818382]
								}, {
									"case":	124,
									"scores":	[-7.20506429818382]
								}, {
									"case":	125,
									"scores":	[-7.20506429818382]
								}, {
									"case":	126,
									"scores":	[-7.20506429818382]
								}, {
									"case":	127,
									"scores":	[-7.20506429818382]
								}, {
									"case":	128,
									"scores":	[-7.20506429818382]
								}, {
									"case":	129,
									"scores":	[-7.20506429818382]
								}, {
									"case":	130,
									"scores":	[-7.20506429818382]
								}, {
									"case":	131,
									"scores":	[-7.20506429818382]
								}, {
									"case":	132,
									"scores":	[-7.20506429818382]
								}, {
									"case":	133,
									"scores":	[-7.20506429818382]
								}, {
									"case":	134,
									"scores":	[-7.20506429818382]
								}, {
									"case":	135,
									"scores":	[-7.20506429818382]
								}, {
									"case":	136,
									"scores":	[-7.20506429818382]
								}, {
									"case":	137,
									"scores":	[-7.20506429818382]
								}, {
									"case":	138,
									"scores":	[-7.20506429818382]
								}, {
									"case":	139,
									"scores":	[-7.20506429818382]
								}, {
									"case":	140,
									"scores":	[-7.20506429818382]
								}, {
									"case":	141,
									"scores":	[-7.20506429818382]
								}, {
									"case":	142,
									"scores":	[-7.20506429818382]
								}, {
									"case":	143,
									"scores":	[-7.20506429818382]
								}, {
									"case":	144,
									"scores":	[-7.20506429818382]
								}, {
									"case":	145,
									"scores":	[-7.20506429818382]
								}, {
									"case":	146,
									"scores":	[-7.20506429818382]
								}, {
									"case":	147,
									"scores":	[-7.20506429818382]
								}, {
									"case":	148,
									"scores":	[-7.20506429818382]
								}, {
									"case":	149,
									"scores":	[-7.20506429818382]
								}, {
									"case":	150,
									"scores":	[-7.20506429818382]
								}, {
									"case":	151,
									"scores":	[-7.20506429818382]
								}, {
									"case":	152,
									"scores":	[-7.20506429818382]
								}, {
									"case":	153,
									"scores":	[-7.20506429818382]
								}, {
									"case":	154,
									"scores":	[-7.20506429818382]
								}, {
									"case":	155,
									"scores":	[-7.20506429818382]
								}, {
									"case":	156,
									"scores":	[-7.20506429818382]
								}, {
									"case":	157,
									"scores":	[-7.20506429818382]
								}, {
									"case":	158,
									"scores":	[-7.20506429818382]
								}, {
									"case":	159,
									"scores":	[-7.20506429818382]
								}, {
									"case":	160,
									"scores":	[-7.20506429818382]
								}, {
									"case":	161,
									"scores":	[-7.20506429818382]
								}, {
									"case":	162,
									"scores":	[-7.20506429818382]
								}, {
									"case":	163,
									"scores":	[-7.20506429818382]
								}, {
									"case":	164,
									"scores":	[-7.20506429818382]
								}, {
									"case":	165,
									"scores":	[-7.20506429818382]
								}, {
									"case":	166,
									"scores":	[-7.20506429818382]
								}, {
									"case":	167,
									"scores":	[-7.20506429818382]
								}, {
									"case":	168,
									"scores":	[-7.20506429818382]
								}, {
									"case":	169,
									"scores":	[-7.20506429818382]
								}, {
									"case":	170,
									"scores":	[-7.20506429818382]
								}, {
									"case":	171,
									"scores":	[-7.20506429818382]
								}, {
									"case":	172,
									"scores":	[-7.20506429818382]
								}, {
									"case":	173,
									"scores":	[-7.20506429818382]
								}, {
									"case":	174,
									"scores":	[-7.20506429818382]
								}, {
									"case":	175,
									"scores":	[-7.20506429818382]
								}, {
									"case":	176,
									"scores":	[-7.20506429818382]
								}, {
									"case":	177,
									"scores":	[-7.20506429818382]
								}, {
									"case":	178,
									"scores":	[-7.20506429818382]
								}, {
									"case":	179,
									"scores":	[-7.20506429818382]
								}, {
									"case":	180,
									"scores":	[-7.20506429818382]
								}, {
									"case":	181,
									"scores":	[-7.20506429818382]
								}, {
									"case":	182,
									"scores":	[-7.20506429818382]
								}, {
									"case":	183,
									"scores":	[-7.20506429818382]
								}, {
									"case":	184,
									"scores":	[-7.20506429818382]
								}, {
									"case":	185,
									"scores":	[-7.20506429818382]
								}, {
									"case":	186,
									"scores":	[-7.20506429818382]
								}, {
									"case":	187,
									"scores":	[-7.20506429818382]
								}, {
									"case":	188,
									"scores":	[-7.20506429818382]
								}, {
									"case":	189,
									"scores":	[-7.20506429818382]
								}, {
									"case":	190,
									"scores":	[-7.20506429818382]
								}, {
									"case":	191,
									"scores":	[-7.20506429818382]
								}, {
									"case":	192,
									"scores":	[-7.20506429818382]
								}, {
									"case":	193,
									"scores":	[-7.20506429818382]
								}, {
									"case":	194,
									"scores":	[-7.20506429818382]
								}, {
									"case":	195,
									"scores":	[-7.20506429818382]
								}, {
									"case":	196,
									"scores":	[-7.20506429818382]
								}, {
									"case":	197,
									"scores":	[-7.20506429818382]
								}, {
									"case":	198,
									"scores":	[-7.20506429818382]
								}, {
									"case":	199,
									"scores":	[-7.20506429818382]
								}, {
									"case":	200,
									"scores":	[-7.20506429818382]
								}, {
									"case":	201,
									"scores":	[-7.20506429818382]
								}, {
									"case":	202,
									"scores":	[-7.20506429818382]
								}, {
									"case":	203,
									"scores":	[-7.20506429818382]
								}, {
									"case":	204,
									"scores":	[-7.20506429818382]
								}, {
									"case":	205,
									"scores":	[-7.20506429818382]
								}, {
									"case":	206,
									"scores":	[-7.20506429818382]
								}, {
									"case":	207,
									"scores":	[-7.20506429818382]
								}, {
									"case":	208,
									"scores":	[-7.20506429818382]
								}, {
									"case":	209,
									"scores":	[-7.20506429818382]
								}, {
									"case":	210,
									"scores":	[-7.20506429818382]
								}, {
									"case":	211,
									"scores":	[-7.20506429818382]
								}, {
									"case":	212,
									"scores":	[-7.20506429818382]
								}, {
									"case":	213,
									"scores":	[-7.20506429818382]
								}, {
									"case":	214,
									"scores":	[-7.20506429818382]
								}, {
									"case":	215,
									"scores":	[-7.20506429818382]
								}, {
									"case":	216,
									"scores":	[-7.20506429818382]
								}, {
									"case":	217,
									"scores":	[-7.20506429818382]
								}, {
									"case":	218,
									"scores":	[-7.20506429818382]
								}, {
									"case":	219,
									"scores":	[-7.20506429818382]
								}, {
									"case":	220,
									"scores":	[-7.20506429818382]
								}, {
									"case":	221,
									"scores":	[-7.20506429818382]
								}, {
									"case":	222,
									"scores":	[-7.20506429818382]
								}, {
									"case":	223,
									"scores":	[-7.20506429818382]
								}, {
									"case":	224,
									"scores":	[-7.20506429818382]
								}, {
									"case":	225,
									"scores":	[-7.20506429818382]
								}, {
									"case":	226,
									"scores":	[-7.20506429818382]
								}, {
									"case":	227,
									"scores":	[-7.20506429818382]
								}, {
									"case":	228,
									"scores":	[-7.20506429818382]
								}, {
									"case":	229,
									"scores":	[-7.20506429818382]
								}, {
									"case":	230,
									"scores":	[-7.20506429818382]
								}, {
									"case":	231,
									"scores":	[-7.20506429818382]
								}, {
									"case":	232,
									"scores":	[-7.20506429818382]
								}, {
									"case":	233,
									"scores":	[-7.20506429818382]
								}, {
									"case":	234,
									"scores":	[-7.20506429818382]
								}, {
									"case":	235,
									"scores":	[-7.20506429818382]
								}, {
									"case":	236,
									"scores":	[-7.20506429818382]
								}, {
									"case":	237,
									"scores":	[-7.20506429818382]
								}, {
									"case":	238,
									"scores":	[-7.20506429818382]
								}, {
									"case":	239,
									"scores":	[-7.20506429818382]
								}, {
									"case":	240,
									"scores":	[-7.20506429818382]
								}, {
									"case":	241,
									"scores":	[-7.20506429818382]
								}, {
									"case":	242,
									"scores":	[-7.20506429818382]
								}, {
									"case":	243,
									"scores":	[-7.20506429818382]
								}, {
									"case":	244,
									"scores":	[-7.20506429818382]
								}, {
									"case":	245,
									"scores":	[-7.20506429818382]
								}, {
									"case":	246,
									"scores":	[-7.20506429818382]
								}, {
									"case":	247,
									"scores":	[-7.20506429818382]
								}, {
									"case":	248,
									"scores":	[-7.20506429818382]
								}, {
									"case":	249,
									"scores":	[-7.20506429818382]
								}, {
									"case":	250,
									"scores":	[-7.20506429818382]
								}, {
									"case":	251,
									"scores":	[-7.20506429818382]
								}, {
									"case":	252,
									"scores":	[-7.20506429818382]
								}, {
									"case":	253,
									"scores":	[-7.20506429818382]
								}, {
									"case":	254,
									"scores":	[-7.20506429818382]
								}, {
									"case":	255,
									"scores":	[-7.20506429818382]
								}, {
									"case":	256,
									"scores":	[-7.20506429818382]
								}, {
									"case":	257,
									"scores":	[-7.20506429818382]
								}, {
									"case":	258,
									"scores":	[-7.20506429818382]
								}, {
									"case":	259,
									"scores":	[-7.20506429818382]
								}, {
									"case":	260,
									"scores":	[-7.20506429818382]
								}, {
									"case":	261,
									"scores":	[-7.20506429818382]
								}, {
									"case":	262,
									"scores":	[-7.20506429818382]
								}, {
									"case":	263,
									"scores":	[-7.20506429818382]
								}, {
									"case":	264,
									"scores":	[-7.20506429818382]
								}, {
									"case":	265,
									"scores":	[-7.20506429818382]
								}, {
									"case":	266,
									"scores":	[-7.20506429818382]
								}, {
									"case":	267,
									"scores":	[-7.20506429818382]
								}, {
									"case":	268,
									"scores":	[-7.20506429818382]
								}, {
									"case":	269,
									"scores":	[-7.20506429818382]
								}, {
									"case":	270,
									"scores":	[-7.20506429818382]
								}, {
									"case":	271,
									"scores":	[-7.20506429818382]
								}, {
									"case":	272,
									"scores":	[-7.20506429818382]
								}, {
									"case":	273,
									"scores":	[-7.20506429818382]
								}, {
									"case":	274,
									"scores":	[-7.20506429818382]
								}, {
									"case":	275,
									"scores":	[-7.20506429818382]
								}, {
									"case":	276,
									"scores":	[-7.20506429818382]
								}, {
									"case":	277,
									"scores":	[-7.20506429818382]
								}, {
									"case":	278,
									"scores":	[-7.20506429818382]
								}, {
									"case":	279,
									"scores":	[-7.20506429818382]
								}, {
									"case":	280,
									"scores":	[-7.20506429818382]
								}, {
									"case":	281,
									"scores":	[-7.20506429818382]
								}, {
									"case":	282,
									"scores":	[-7.20506429818382]
								}, {
									"case":	283,
									"scores":	[-7.20506429818382]
								}, {
									"case":	284,
									"scores":	[-7.20506429818382]
								}, {
									"case":	285,
									"scores":	[-7.20506429818382]
								}, {
									"case":	286,
									"scores":	[-7.20506429818382]
								}, {
									"case":	287,
									"scores":	[-7.20506429818382]
								}, {
									"case":	288,
									"scores":	[-7.20506429818382]
								}, {
									"case":	289,
									"scores":	[-7.20506429818382]
								}, {
									"case":	290,
									"scores":	[-7.20506429818382]
								}, {
									"case":	291,
									"scores":	[-7.20506429818382]
								}, {
									"case":	292,
									"scores":	[-7.20506429818382]
								}, {
									"case":	293,
									"scores":	[-7.20506429818382]
								}, {
									"case":	294,
									"scores":	[-7.20506429818382]
								}, {
									"case":	295,
									"scores":	[-7.20506429818382]
								}, {
									"case":	296,
									"scores":	[-7.20506429818382]
								}, {
									"case":	297,
									"scores":	[-7.20506429818382]
								}, {
									"case":	298,
									"scores":	[-7.20506429818382]
								}, {
									"case":	299,
									"scores":	[-7.20506429818382]
								}, {
									"case":	300,
									"scores":	[-7.20506429818382]
								}, {
									"case":	301,
									"scores":	[-7.20506429818382]
								}, {
									"case":	302,
									"scores":	[-7.20506429818382]
								}, {
									"case":	303,
									"scores":	[-7.20506429818382]
								}, {
									"case":	304,
									"scores":	[-7.20506429818382]
								}, {
									"case":	305,
									"scores":	[-7.20506429818382]
								}, {
									"case":	306,
									"scores":	[-7.20506429818382]
								}, {
									"case":	307,
									"scores":	[-7.20506429818382]
								}, {
									"case":	308,
									"scores":	[-7.20506429818382]
								}, {
									"case":	309,
									"scores":	[-7.20506429818382]
								}, {
									"case":	310,
									"scores":	[-7.20506429818382]
								}, {
									"case":	311,
									"scores":	[-7.20506429818382]
								}, {
									"case":	312,
									"scores":	[-7.20506429818382]
								}, {
									"case":	313,
									"scores":	[-7.20506429818382]
								}, {
									"case":	314,
									"scores":	[-7.20506429818382]
								}, {
									"case":	315,
									"scores":	[-7.20506429818382]
								}, {
									"case":	316,
									"scores":	[-7.20506429818382]
								}, {
									"case":	317,
									"scores":	[-7.20506429818382]
								}, {
									"case":	318,
									"scores":	[-7.20506429818382]
								}, {
									"case":	319,
									"scores":	[-7.20506429818382]
								}, {
									"case":	320,
									"scores":	[-7.20506429818382]
								}, {
									"case":	321,
									"scores":	[-7.20506429818382]
								}, {
									"case":	322,
									"scores":	[-7.20506429818382]
								}, {
									"case":	323,
									"scores":	[-7.20506429818382]
								}, {
									"case":	324,
									"scores":	[-7.20506429818382]
								}, {
									"case":	325,
									"scores":	[-7.20506429818382]
								}, {
									"case":	326,
									"scores":	[-7.20506429818382]
								}, {
									"case":	327,
									"scores":	[-7.20506429818382]
								}, {
									"case":	328,
									"scores":	[-7.20506429818382]
								}, {
									"case":	329,
									"scores":	[-7.20506429818382]
								}, {
									"case":	330,
									"scores":	[-7.20506429818382]
								}, {
									"case":	331,
									"scores":	[-7.20506429818382]
								}, {
									"case":	332,
									"scores":	[-7.20506429818382]
								}, {
									"case":	333,
									"scores":	[-7.20506429818382]
								}, {
									"case":	334,
									"scores":	[-7.20506429818382]
								}, {
									"case":	335,
									"scores":	[-7.20506429818382]
								}, {
									"case":	336,
									"scores":	[-7.20506429818382]
								}, {
									"case":	337,
									"scores":	[-7.20506429818382]
								}, {
									"case":	338,
									"scores":	[-7.20506429818382]
								}, {
									"case":	339,
									"scores":	[-7.20506429818382]
								}, {
									"case":	340,
									"scores":	[-7.20506429818382]
								}, {
									"case":	341,
									"scores":	[-7.20506429818382]
								}, {
									"case":	342,
									"scores":	[-7.20506429818382]
								}, {
									"case":	343,
									"scores":	[-7.20506429818382]
								}, {
									"case":	344,
									"scores":	[-7.20506429818382]
								}, {
									"case":	345,
									"scores":	[-7.20506429818382]
								}, {
									"case":	346,
									"scores":	[-7.20506429818382]
								}, {
									"case":	347,
									"scores":	[-7.20506429818382]
								}, {
									"case":	348,
									"scores":	[-7.20506429818382]
								}, {
									"case":	349,
									"scores":	[-7.20506429818382]
								}, {
									"case":	350,
									"scores":	[-7.20506429818382]
								}, {
									"case":	351,
									"scores":	[-7.20506429818382]
								}, {
									"case":	352,
									"scores":	[-7.20506429818382]
								}, {
									"case":	353,
									"scores":	[-7.20506429818382]
								}, {
									"case":	354,
									"scores":	[-7.20506429818382]
								}, {
									"case":	355,
									"scores":	[-7.20506429818382]
								}, {
									"case":	356,
									"scores":	[-7.20506429818382]
								}, {
									"case":	357,
									"scores":	[-7.20506429818382]
								}, {
									"case":	358,
									"scores":	[-7.20506429818382]
								}, {
									"case":	359,
									"scores":	[-7.20506429818382]
								}, {
									"case":	360,
									"scores":	[-7.20506429818382]
								}, {
									"case":	361,
									"scores":	[-7.20506429818382]
								}, {
									"case":	362,
									"scores":	[-7.20506429818382]
								}, {
									"case":	363,
									"scores":	[-7.20506429818382]
								}, {
									"case":	364,
									"scores":	[-7.20506429818382]
								}, {
									"case":	365,
									"scores":	[-7.20506429818382]
								}, {
									"case":	366,
									"scores":	[-7.20506429818382]
								}, {
									"case":	367,
									"scores":	[-7.20506429818382]
								}, {
									"case":	368,
									"scores":	[-7.20506429818382]
								}, {
									"case":	369,
									"scores":	[-7.20506429818382]
								}, {
									"case":	370,
									"scores":	[-7.20506429818382]
								}, {
									"case":	371,
									"scores":	[-7.20506429818382]
								}, {
									"case":	372,
									"scores":	[-7.20506429818382]
								}, {
									"case":	373,
									"scores":	[-7.20506429818382]
								}, {
									"case":	374,
									"scores":	[-7.20506429818382]
								}, {
									"case":	375,
									"scores":	[-7.20506429818382]
								}, {
									"case":	376,
									"scores":	[-7.20506429818382]
								}, {
									"case":	377,
									"scores":	[-7.20506429818382]
								}, {
									"case":	378,
									"scores":	[-7.20506429818382]
								}, {
									"case":	379,
									"scores":	[-7.20506429818382]
								}, {
									"case":	380,
									"scores":	[-7.20506429818382]
								}, {
									"case":	381,
									"scores":	[-7.20506429818382]
								}, {
									"case":	382,
									"scores":	[-7.20506429818382]
								}, {
									"case":	383,
									"scores":	[-7.20506429818382]
								}, {
									"case":	384,
									"scores":	[-7.20506429818382]
								}, {
									"case":	385,
									"scores":	[-7.20506429818382]
								}, {
									"case":	386,
									"scores":	[-7.20506429818382]
								}, {
									"case":	387,
									"scores":	[-7.20506429818382]
								}, {
									"case":	388,
									"scores":	[-7.20506429818382]
								}, {
									"case":	389,
									"scores":	[-7.20506429818382]
								}, {
									"case":	390,
									"scores":	[-7.20506429818382]
								}, {
									"case":	391,
									"scores":	[-7.20506429818382]
								}, {
									"case":	392,
									"scores":	[-7.20506429818382]
								}, {
									"case":	393,
									"scores":	[-7.20506429818382]
								}, {
									"case":	394,
									"scores":	[-7.20506429818382]
								}, {
									"case":	395,
									"scores":	[-7.20506429818382]
								}, {
									"case":	396,
									"scores":	[-7.20506429818382]
								}, {
									"case":	397,
									"scores":	[-7.20506429818382]
								}, {
									"case":	398,
									"scores":	[-7.20506429818382]
								}, {
									"case":	399,
									"scores":	[-7.20506429818382]
								}, {
									"case":	400,
									"scores":	[-7.20506429818382]
								}, {
									"case":	401,
									"scores":	[-7.20506429818382]
								}, {
									"case":	402,
									"scores":	[-7.20506429818382]
								}, {
									"case":	403,
									"scores":	[-7.20506429818382]
								}, {
									"case":	404,
									"scores":	[-7.20506429818382]
								}, {
									"case":	405,
									"scores":	[-7.20506429818382]
								}, {
									"case":	406,
									"scores":	[-7.20506429818382]
								}, {
									"case":	407,
									"scores":	[-7.20506429818382]
								}, {
									"case":	408,
									"scores":	[-7.20506429818382]
								}, {
									"case":	409,
									"scores":	[-7.20506429818382]
								}, {
									"case":	410,
									"scores":	[-7.20506429818382]
								}, {
									"case":	411,
									"scores":	[-7.20506429818382]
								}, {
									"case":	412,
									"scores":	[-7.20506429818382]
								}, {
									"case":	413,
									"scores":	[-7.20506429818382]
								}, {
									"case":	414,
									"scores":	[-7.20506429818382]
								}, {
									"case":	415,
									"scores":	[-7.20506429818382]
								}, {
									"case":	416,
									"scores":	[-7.20506429818382]
								}, {
									"case":	417,
									"scores":	[-7.20506429818382]
								}, {
									"case":	418,
									"scores":	[-7.20506429818382]
								}, {
									"case":	419,
									"scores":	[-7.20506429818382]
								}, {
									"case":	420,
									"scores":	[-7.20506429818382]
								}, {
									"case":	421,
									"scores":	[-7.20506429818382]
								}, {
									"case":	422,
									"scores":	[-7.20506429818382]
								}, {
									"case":	423,
									"scores":	[-7.20506429818382]
								}, {
									"case":	424,
									"scores":	[-7.20506429818382]
								}, {
									"case":	425,
									"scores":	[-7.20506429818382]
								}, {
									"case":	426,
									"scores":	[-7.20506429818382]
								}, {
									"case":	427,
									"scores":	[-7.20506429818382]
								}, {
									"case":	428,
									"scores":	[-7.20506429818382]
								}, {
									"case":	429,
									"scores":	[-7.20506429818382]
								}, {
									"case":	430,
									"scores":	[-7.20506429818382]
								}, {
									"case":	431,
									"scores":	[-7.20506429818382]
								}, {
									"case":	432,
									"scores":	[-7.20506429818382]
								}, {
									"case":	433,
									"scores":	[-7.20506429818382]
								}, {
									"case":	434,
									"scores":	[-7.20506429818382]
								}, {
									"case":	435,
									"scores":	[-7.20506429818382]
								}, {
									"case":	436,
									"scores":	[-7.20506429818382]
								}, {
									"case":	437,
									"scores":	[-7.20506429818382]
								}, {
									"case":	438,
									"scores":	[-7.20506429818382]
								}, {
									"case":	439,
									"scores":	[-7.20506429818382]
								}, {
									"case":	440,
									"scores":	[-7.20506429818382]
								}, {
									"case":	441,
									"scores":	[-7.20506429818382]
								}, {
									"case":	442,
									"scores":	[-7.20506429818382]
								}, {
									"case":	443,
									"scores":	[-7.20506429818382]
								}, {
									"case":	444,
									"scores":	[-7.20506429818382]
								}, {
									"case":	445,
									"scores":	[-7.20506429818382]
								}, {
									"case":	446,
									"scores":	[-7.20506429818382]
								}, {
									"case":	447,
									"scores":	[-7.20506429818382]
								}, {
									"case":	448,
									"scores":	[-7.20506429818382]
								}, {
									"case":	449,
									"scores":	[-7.20506429818382]
								}, {
									"case":	450,
									"scores":	[-7.20506429818382]
								}, {
									"case":	451,
									"scores":	[-7.20506429818382]
								}, {
									"case":	452,
									"scores":	[-7.20506429818382]
								}, {
									"case":	453,
									"scores":	[-7.20506429818382]
								}, {
									"case":	454,
									"scores":	[-7.20506429818382]
								}, {
									"case":	455,
									"scores":	[-7.20506429818382]
								}, {
									"case":	456,
									"scores":	[-7.20506429818382]
								}, {
									"case":	457,
									"scores":	[-7.20506429818382]
								}, {
									"case":	458,
									"scores":	[-7.20506429818382]
								}, {
									"case":	459,
									"scores":	[-7.20506429818382]
								}, {
									"case":	460,
									"scores":	[-7.20506429818382]
								}, {
									"case":	461,
									"scores":	[-7.20506429818382]
								}, {
									"case":	462,
									"scores":	[-7.20506429818382]
								}, {
									"case":	463,
									"scores":	[-7.20506429818382]
								}, {
									"case":	464,
									"scores":	[-7.20506429818382]
								}, {
									"case":	465,
									"scores":	[-7.20506429818382]
								}, {
									"case":	466,
									"scores":	[-7.20506429818382]
								}, {
									"case":	467,
									"scores":	[-7.20506429818382]
								}, {
									"case":	468,
									"scores":	[-7.20506429818382]
								}, {
									"case":	469,
									"scores":	[-7.20506429818382]
								}, {
									"case":	470,
									"scores":	[-7.20506429818382]
								}, {
									"case":	471,
									"scores":	[-7.20506429818382]
								}, {
									"case":	472,
									"scores":	[-7.20506429818382]
								}, {
									"case":	473,
									"scores":	[-7.20506429818382]
								}, {
									"case":	474,
									"scores":	[-7.20506429818382]
								}, {
									"case":	475,
									"scores":	[-7.20506429818382]
								}, {
									"case":	476,
									"scores":	[-7.20506429818382]
								}, {
									"case":	477,
									"scores":	[-7.20506429818382]
								}, {
									"case":	478,
									"scores":	[-7.20506429818382]
								}, {
									"case":	479,
									"scores":	[-7.20506429818382]
								}, {
									"case":	480,
									"scores":	[-7.20506429818382]
								}, {
									"case":	481,
									"scores":	[-7.20506429818382]
								}, {
									"case":	482,
									"scores":	[-7.20506429818382]
								}, {
									"case":	483,
									"scores":	[-7.20506429818382]
								}, {
									"case":	484,
									"scores":	[-7.20506429818382]
								}, {
									"case":	485,
									"scores":	[-7.20506429818382]
								}, {
									"case":	486,
									"scores":	[-7.20506429818382]
								}, {
									"case":	487,
									"scores":	[-7.20506429818382]
								}, {
									"case":	488,
									"scores":	[-7.20506429818382]
								}, {
									"case":	489,
									"scores":	[-7.20506429818382]
								}, {
									"case":	490,
									"scores":	[-7.20506429818382]
								}, {
									"case":	491,
									"scores":	[-7.20506429818382]
								}, {
									"case":	492,
									"scores":	[-7.20506429818382]
								}, {
									"case":	493,
									"scores":	[-7.20506429818382]
								}, {
									"case":	494,
									"scores":	[-7.20506429818382]
								}, {
									"case":	495,
									"scores":	[-7.20506429818382]
								}, {
									"case":	496,
									"scores":	[-7.20506429818382]
								}, {
									"case":	497,
									"scores":	[-7.20506429818382]
								}, {
									"case":	498,
									"scores":	[-7.20506429818382]
								}, {
									"case":	499,
									"scores":	[-7.20506429818382]
								}, {
									"case":	500,
									"scores":	[-7.20506429818382]
								}, {
									"case":	501,
									"scores":	[-7.20506429818382]
								}, {
									"case":	502,
									"scores":	[-7.20506429818382]
								}, {
									"case":	503,
									"scores":	[-7.20506429818382]
								}, {
									"case":	504,
									"scores":	[-7.20506429818382]
								}, {
									"case":	505,
									"scores":	[-7.20506429818382]
								}, {
									"case":	506,
									"scores":	[-7.20506429818382]
								}, {
									"case":	507,
									"scores":	[-7.20506429818382]
								}, {
									"case":	508,
									"scores":	[-7.20506429818382]
								}, {
									"case":	509,
									"scores":	[-7.20506429818382]
								}, {
									"case":	510,
									"scores":	[-7.20506429818382]
								}, {
									"case":	511,
									"scores":	[-7.20506429818382]
								}, {
									"case":	512,
									"scores":	[-7.20506429818382]
								}, {
									"case":	513,
									"scores":	[-7.20506429818382]
								}, {
									"case":	514,
									"scores":	[-7.20506429818382]
								}, {
									"case":	515,
									"scores":	[-7.20506429818382]
								}, {
									"case":	516,
									"scores":	[-7.20506429818382]
								}, {
									"case":	517,
									"scores":	[-7.20506429818382]
								}, {
									"case":	518,
									"scores":	[-7.20506429818382]
								}, {
									"case":	519,
									"scores":	[-7.20506429818382]
								}, {
									"case":	520,
									"scores":	[-7.20506429818382]
								}, {
									"case":	521,
									"scores":	[-7.20506429818382]
								}, {
									"case":	522,
									"scores":	[-7.20506429818382]
								}, {
									"case":	523,
									"scores":	[-7.20506429818382]
								}, {
									"case":	524,
									"scores":	[-7.20506429818382]
								}, {
									"case":	525,
									"scores":	[-7.20506429818382]
								}, {
									"case":	526,
									"scores":	[-7.20506429818382]
								}, {
									"case":	527,
									"scores":	[-7.20506429818382]
								}, {
									"case":	528,
									"scores":	[-7.20506429818382]
								}, {
									"case":	529,
									"scores":	[-7.20506429818382]
								}, {
									"case":	530,
									"scores":	[-7.20506429818382]
								}, {
									"case":	531,
									"scores":	[-7.20506429818382]
								}, {
									"case":	532,
									"scores":	[-7.20506429818382]
								}, {
									"case":	533,
									"scores":	[-7.20506429818382]
								}, {
									"case":	534,
									"scores":	[-7.20506429818382]
								}, {
									"case":	535,
									"scores":	[-7.20506429818382]
								}, {
									"case":	536,
									"scores":	[-7.20506429818382]
								}, {
									"case":	537,
									"scores":	[-7.20506429818382]
								}, {
									"case":	538,
									"scores":	[-7.20506429818382]
								}, {
									"case":	539,
									"scores":	[-7.20506429818382]
								}, {
									"case":	540,
									"scores":	[-7.20506429818382]
								}, {
									"case":	541,
									"scores":	[-7.20506429818382]
								}, {
									"case":	542,
									"scores":	[-7.20506429818382]
								}, {
									"case":	543,
									"scores":	[-7.20506429818382]
								}, {
									"case":	544,
									"scores":	[-7.20506429818382]
								}, {
									"case":	545,
									"scores":	[-7.20506429818382]
								}, {
									"case":	546,
									"scores":	[-7.20506429818382]
								}, {
									"case":	547,
									"scores":	[-7.20506429818382]
								}, {
									"case":	548,
									"scores":	[-7.20506429818382]
								}, {
									"case":	549,
									"scores":	[-7.20506429818382]
								}, {
									"case":	550,
									"scores":	[-7.20506429818382]
								}, {
									"case":	551,
									"scores":	[-7.20506429818382]
								}, {
									"case":	552,
									"scores":	[-7.20506429818382]
								}, {
									"case":	553,
									"scores":	[-7.20506429818382]
								}, {
									"case":	554,
									"scores":	[-7.20506429818382]
								}, {
									"case":	555,
									"scores":	[-7.20506429818382]
								}, {
									"case":	556,
									"scores":	[-7.20506429818382]
								}, {
									"case":	557,
									"scores":	[-7.20506429818382]
								}, {
									"case":	558,
									"scores":	[-7.20506429818382]
								}, {
									"case":	559,
									"scores":	[-7.20506429818382]
								}, {
									"case":	560,
									"scores":	[-7.20506429818382]
								}, {
									"case":	561,
									"scores":	[-7.20506429818382]
								}, {
									"case":	562,
									"scores":	[-7.20506429818382]
								}, {
									"case":	563,
									"scores":	[-7.20506429818382]
								}, {
									"case":	564,
									"scores":	[-7.20506429818382]
								}, {
									"case":	565,
									"scores":	[-7.20506429818382]
								}, {
									"case":	566,
									"scores":	[-7.20506429818382]
								}, {
									"case":	567,
									"scores":	[-7.20506429818382]
								}, {
									"case":	568,
									"scores":	[-7.20506429818382]
								}, {
									"case":	569,
									"scores":	[-7.20506429818382]
								}, {
									"case":	570,
									"scores":	[-7.20506429818382]
								}, {
									"case":	571,
									"scores":	[-7.20506429818382]
								}, {
									"case":	572,
									"scores":	[-7.20506429818382]
								}, {
									"case":	573,
									"scores":	[-7.20506429818382]
								}, {
									"case":	574,
									"scores":	[-7.20506429818382]
								}, {
									"case":	575,
									"scores":	[-7.20506429818382]
								}, {
									"case":	576,
									"scores":	[-7.20506429818382]
								}, {
									"case":	577,
									"scores":	[-7.20506429818382]
								}, {
									"case":	578,
									"scores":	[-7.20506429818382]
								}, {
									"case":	579,
									"scores":	[-7.20506429818382]
								}, {
									"case":	580,
									"scores":	[-7.20506429818382]
								}, {
									"case":	581,
									"scores":	[-7.20506429818382]
								}, {
									"case":	582,
									"scores":	[-7.20506429818382]
								}, {
									"case":	583,
									"scores":	[-7.20506429818382]
								}, {
									"case":	584,
									"scores":	[-7.20506429818382]
								}, {
									"case":	585,
									"scores":	[-7.20506429818382]
								}, {
									"case":	586,
									"scores":	[-7.20506429818382]
								}, {
									"case":	587,
									"scores":	[-7.20506429818382]
								}, {
									"case":	588,
									"scores":	[-7.20506429818382]
								}, {
									"case":	589,
									"scores":	[-7.20506429818382]
								}, {
									"case":	590,
									"scores":	[-7.20506429818382]
								}, {
									"case":	591,
									"scores":	[-7.20506429818382]
								}, {
									"case":	592,
									"scores":	[-7.20506429818382]
								}, {
									"case":	593,
									"scores":	[-7.20506429818382]
								}, {
									"case":	594,
									"scores":	[-7.20506429818382]
								}, {
									"case":	595,
									"scores":	[-7.20506429818382]
								}, {
									"case":	596,
									"scores":	[-7.20506429818382]
								}, {
									"case":	597,
									"scores":	[-7.20506429818382]
								}, {
									"case":	598,
									"scores":	[-7.20506429818382]
								}, {
									"case":	599,
									"scores":	[-7.20506429818382]
								}, {
									"case":	600,
									"scores":	[-7.20506429818382]
								}, {
									"case":	601,
									"scores":	[-7.20506429818382]
								}, {
									"case":	602,
									"scores":	[-7.20506429818382]
								}, {
									"case":	603,
									"scores":	[-7.20506429818382]
								}, {
									"case":	604,
									"scores":	[-7.20506429818382]
								}, {
									"case":	605,
									"scores":	[-7.20506429818382]
								}, {
									"case":	606,
									"scores":	[-7.20506429818382]
								}, {
									"case":	607,
									"scores":	[-7.20506429818382]
								}, {
									"case":	608,
									"scores":	[-7.20506429818382]
								}, {
									"case":	609,
									"scores":	[-7.20506429818382]
								}, {
									"case":	610,
									"scores":	[-7.20506429818382]
								}, {
									"case":	611,
									"scores":	[-7.20506429818382]
								}, {
									"case":	612,
									"scores":	[-7.20506429818382]
								}, {
									"case":	613,
									"scores":	[-7.20506429818382]
								}, {
									"case":	614,
									"scores":	[-7.20506429818382]
								}, {
									"case":	615,
									"scores":	[-7.20506429818382]
								}, {
									"case":	616,
									"scores":	[-7.20506429818382]
								}, {
									"case":	617,
									"scores":	[-7.20506429818382]
								}, {
									"case":	618,
									"scores":	[-7.20506429818382]
								}, {
									"case":	619,
									"scores":	[-7.20506429818382]
								}, {
									"case":	620,
									"scores":	[-7.20506429818382]
								}, {
									"case":	621,
									"scores":	[-7.20506429818382]
								}, {
									"case":	622,
									"scores":	[-7.20506429818382]
								}, {
									"case":	623,
									"scores":	[-7.20506429818382]
								}, {
									"case":	624,
									"scores":	[-7.20506429818382]
								}, {
									"case":	625,
									"scores":	[-7.20506429818382]
								}, {
									"case":	626,
									"scores":	[-7.20506429818382]
								}, {
									"case":	627,
									"scores":	[-7.20506429818382]
								}, {
									"case":	628,
									"scores":	[-7.20506429818382]
								}, {
									"case":	629,
									"scores":	[-7.20506429818382]
								}, {
									"case":	630,
									"scores":	[-7.20506429818382]
								}, {
									"case":	631,
									"scores":	[-7.20506429818382]
								}, {
									"case":	632,
									"scores":	[-7.20506429818382]
								}, {
									"case":	633,
									"scores":	[-7.20506429818382]
								}, {
									"case":	634,
									"scores":	[-7.20506429818382]
								}, {
									"case":	635,
									"scores":	[-7.20506429818382]
								}, {
									"case":	636,
									"scores":	[-7.20506429818382]
								}, {
									"case":	637,
									"scores":	[-7.20506429818382]
								}, {
									"case":	638,
									"scores":	[-7.20506429818382]
								}, {
									"case":	639,
									"scores":	[-7.20506429818382]
								}, {
									"case":	640,
									"scores":	[-7.20506429818382]
								}, {
									"case":	641,
									"scores":	[-7.20506429818382]
								}, {
									"case":	642,
									"scores":	[-7.20506429818382]
								}, {
									"case":	643,
									"scores":	[-7.20506429818382]
								}, {
									"case":	644,
									"scores":	[-7.20506429818382]
								}, {
									"case":	645,
									"scores":	[-7.20506429818382]
								}, {
									"case":	646,
									"scores":	[-7.20506429818382]
								}, {
									"case":	647,
									"scores":	[-7.20506429818382]
								}, {
									"case":	648,
									"scores":	[-7.20506429818382]
								}, {
									"case":	649,
									"scores":	[-7.20506429818382]
								}, {
									"case":	650,
									"scores":	[-7.20506429818382]
								}, {
									"case":	651,
									"scores":	[-7.20506429818382]
								}, {
									"case":	652,
									"scores":	[-7.20506429818382]
								}, {
									"case":	653,
									"scores":	[-7.20506429818382]
								}, {
									"case":	654,
									"scores":	[-7.20506429818382]
								}, {
									"case":	655,
									"scores":	[-7.20506429818382]
								}, {
									"case":	656,
									"scores":	[-7.20506429818382]
								}, {
									"case":	657,
									"scores":	[-7.20506429818382]
								}, {
									"case":	658,
									"scores":	[-7.20506429818382]
								}, {
									"case":	659,
									"scores":	[-7.20506429818382]
								}, {
									"case":	660,
									"scores":	[-7.20506429818382]
								}, {
									"case":	661,
									"scores":	[-7.20506429818382]
								}, {
									"case":	662,
									"scores":	[-7.20506429818382]
								}, {
									"case":	663,
									"scores":	[-7.20506429818382]
								}, {
									"case":	664,
									"scores":	[-7.20506429818382]
								}, {
									"case":	665,
									"scores":	[-7.20506429818382]
								}, {
									"case":	666,
									"scores":	[-7.20506429818382]
								}, {
									"case":	667,
									"scores":	[-7.20506429818382]
								}, {
									"case":	668,
									"scores":	[-7.20506429818382]
								}, {
									"case":	669,
									"scores":	[-7.20506429818382]
								}, {
									"case":	670,
									"scores":	[-7.20506429818382]
								}, {
									"case":	671,
									"scores":	[-7.20506429818382]
								}, {
									"case":	672,
									"scores":	[-7.20506429818382]
								}, {
									"case":	673,
									"scores":	[-7.20506429818382]
								}, {
									"case":	674,
									"scores":	[-7.20506429818382]
								}, {
									"case":	675,
									"scores":	[-7.20506429818382]
								}, {
									"case":	676,
									"scores":	[-7.20506429818382]
								}, {
									"case":	677,
									"scores":	[-7.20506429818382]
								}, {
									"case":	678,
									"scores":	[-7.20506429818382]
								}, {
									"case":	679,
									"scores":	[-7.20506429818382]
								}, {
									"case":	680,
									"scores":	[-7.20506429818382]
								}, {
									"case":	681,
									"scores":	[-7.20506429818382]
								}, {
									"case":	682,
									"scores":	[-7.20506429818382]
								}, {
									"case":	683,
									"scores":	[-7.20506429818382]
								}, {
									"case":	684,
									"scores":	[-7.20506429818382]
								}, {
									"case":	685,
									"scores":	[-7.20506429818382]
								}, {
									"case":	686,
									"scores":	[-7.20506429818382]
								}, {
									"case":	687,
									"scores":	[-7.20506429818382]
								}, {
									"case":	688,
									"scores":	[-7.20506429818382]
								}, {
									"case":	689,
									"scores":	[-7.20506429818382]
								}, {
									"case":	690,
									"scores":	[-7.20506429818382]
								}, {
									"case":	691,
									"scores":	[-7.20506429818382]
								}, {
									"case":	692,
									"scores":	[-7.20506429818382]
								}, {
									"case":	693,
									"scores":	[-7.20506429818382]
								}, {
									"case":	694,
									"scores":	[-7.20506429818382]
								}, {
									"case":	695,
									"scores":	[-7.20506429818382]
								}, {
									"case":	696,
									"scores":	[-7.20506429818382]
								}, {
									"case":	697,
									"scores":	[-7.20506429818382]
								}, {
									"case":	698,
									"scores":	[-7.20506429818382]
								}, {
									"case":	699,
									"scores":	[-7.20506429818382]
								}, {
									"case":	700,
									"scores":	[-7.20506429818382]
								}, {
									"case":	701,
									"scores":	[-7.20506429818382]
								}, {
									"case":	702,
									"scores":	[-7.20506429818382]
								}, {
									"case":	703,
									"scores":	[-7.20506429818382]
								}, {
									"case":	704,
									"scores":	[-7.20506429818382]
								}, {
									"case":	705,
									"scores":	[-7.20506429818382]
								}, {
									"case":	706,
									"scores":	[-7.20506429818382]
								}, {
									"case":	707,
									"scores":	[-7.20506429818382]
								}, {
									"case":	708,
									"scores":	[-7.20506429818382]
								}, {
									"case":	709,
									"scores":	[-7.20506429818382]
								}, {
									"case":	710,
									"scores":	[-7.20506429818382]
								}, {
									"case":	711,
									"scores":	[-7.20506429818382]
								}, {
									"case":	712,
									"scores":	[-7.20506429818382]
								}, {
									"case":	713,
									"scores":	[-7.20506429818382]
								}, {
									"case":	714,
									"scores":	[-7.20506429818382]
								}, {
									"case":	715,
									"scores":	[-7.20506429818382]
								}, {
									"case":	716,
									"scores":	[-7.20506429818382]
								}, {
									"case":	717,
									"scores":	[-7.20506429818382]
								}, {
									"case":	718,
									"scores":	[-7.20506429818382]
								}, {
									"case":	719,
									"scores":	[-7.20506429818382]
								}, {
									"case":	720,
									"scores":	[-7.20506429818382]
								}, {
									"case":	721,
									"scores":	[-7.20506429818382]
								}, {
									"case":	722,
									"scores":	[-7.20506429818382]
								}, {
									"case":	723,
									"scores":	[-7.20506429818382]
								}, {
									"case":	724,
									"scores":	[-7.20506429818382]
								}, {
									"case":	725,
									"scores":	[-7.20506429818382]
								}, {
									"case":	726,
									"scores":	[-7.20506429818382]
								}, {
									"case":	727,
									"scores":	[-7.20506429818382]
								}, {
									"case":	728,
									"scores":	[-7.20506429818382]
								}, {
									"case":	729,
									"scores":	[-7.20506429818382]
								}, {
									"case":	730,
									"scores":	[-7.20506429818382]
								}, {
									"case":	731,
									"scores":	[-7.20506429818382]
								}, {
									"case":	732,
									"scores":	[-7.20506429818382]
								}, {
									"case":	733,
									"scores":	[-7.20506429818382]
								}, {
									"case":	734,
									"scores":	[-7.20506429818382]
								}, {
									"case":	735,
									"scores":	[-7.20506429818382]
								}, {
									"case":	736,
									"scores":	[-7.20506429818382]
								}, {
									"case":	737,
									"scores":	[-7.20506429818382]
								}, {
									"case":	738,
									"scores":	[-7.20506429818382]
								}, {
									"case":	739,
									"scores":	[-7.20506429818382]
								}, {
									"case":	740,
									"scores":	[-7.20506429818382]
								}, {
									"case":	741,
									"scores":	[-7.20506429818382]
								}, {
									"case":	742,
									"scores":	[-7.20506429818382]
								}, {
									"case":	743,
									"scores":	[-7.20506429818382]
								}, {
									"case":	744,
									"scores":	[-7.20506429818382]
								}, {
									"case":	745,
									"scores":	[-7.20506429818382]
								}, {
									"case":	746,
									"scores":	[-7.20506429818382]
								}, {
									"case":	747,
									"scores":	[-7.20506429818382]
								}, {
									"case":	748,
									"scores":	[-7.20506429818382]
								}, {
									"case":	749,
									"scores":	[-7.20506429818382]
								}, {
									"case":	750,
									"scores":	[-7.20506429818382]
								}, {
									"case":	751,
									"scores":	[-7.20506429818382]
								}, {
									"case":	752,
									"scores":	[-7.20506429818382]
								}, {
									"case":	753,
									"scores":	[-7.20506429818382]
								}, {
									"case":	754,
									"scores":	[-7.20506429818382]
								}, {
									"case":	755,
									"scores":	[-7.20506429818382]
								}, {
									"case":	756,
									"scores":	[-7.20506429818382]
								}, {
									"case":	757,
									"scores":	[-7.20506429818382]
								}, {
									"case":	758,
									"scores":	[-7.20506429818382]
								}, {
									"case":	759,
									"scores":	[-7.20506429818382]
								}, {
									"case":	760,
									"scores":	[-7.20506429818382]
								}, {
									"case":	761,
									"scores":	[-7.20506429818382]
								}, {
									"case":	762,
									"scores":	[-7.20506429818382]
								}, {
									"case":	763,
									"scores":	[-7.20506429818382]
								}, {
									"case":	764,
									"scores":	[-7.20506429818382]
								}, {
									"case":	765,
									"scores":	[-7.20506429818382]
								}, {
									"case":	766,
									"scores":	[-7.20506429818382]
								}, {
									"case":	767,
									"scores":	[-7.20506429818382]
								}, {
									"case":	768,
									"scores":	[-7.20506429818382]
								}, {
									"case":	769,
									"scores":	[-7.20506429818382]
								}, {
									"case":	770,
									"scores":	[-7.20506429818382]
								}, {
									"case":	771,
									"scores":	[-7.20506429818382]
								}, {
									"case":	772,
									"scores":	[-7.20506429818382]
								}, {
									"case":	773,
									"scores":	[-7.20506429818382]
								}, {
									"case":	774,
									"scores":	[-7.20506429818382]
								}, {
									"case":	775,
									"scores":	[-7.20506429818382]
								}, {
									"case":	776,
									"scores":	[-7.20506429818382]
								}, {
									"case":	777,
									"scores":	[-7.20506429818382]
								}, {
									"case":	778,
									"scores":	[-7.20506429818382]
								}, {
									"case":	779,
									"scores":	[-7.20506429818382]
								}, {
									"case":	780,
									"scores":	[-7.20506429818382]
								}, {
									"case":	781,
									"scores":	[-7.20506429818382]
								}, {
									"case":	782,
									"scores":	[-7.20506429818382]
								}, {
									"case":	783,
									"scores":	[-7.20506429818382]
								}, {
									"case":	784,
									"scores":	[-7.20506429818382]
								}, {
									"case":	785,
									"scores":	[-7.20506429818382]
								}, {
									"case":	786,
									"scores":	[-7.20506429818382]
								}, {
									"case":	787,
									"scores":	[-7.20506429818382]
								}, {
									"case":	788,
									"scores":	[-7.20506429818382]
								}, {
									"case":	789,
									"scores":	[-7.20506429818382]
								}, {
									"case":	790,
									"scores":	[-7.20506429818382]
								}, {
									"case":	791,
									"scores":	[-7.20506429818382]
								}, {
									"case":	792,
									"scores":	[-7.20506429818382]
								}, {
									"case":	793,
									"scores":	[-7.20506429818382]
								}, {
									"case":	794,
									"scores":	[-7.20506429818382]
								}, {
									"case":	795,
									"scores":	[-7.20506429818382]
								}, {
									"case":	796,
									"scores":	[-7.20506429818382]
								}, {
									"case":	797,
									"scores":	[-7.20506429818382]
								}, {
									"case":	798,
									"scores":	[-7.20506429818382]
								}, {
									"case":	799,
									"scores":	[-7.20506429818382]
								}, {
									"case":	800,
									"scores":	[-7.20506429818382]
								}, {
									"case":	801,
									"scores":	[-7.20506429818382]
								}, {
									"case":	802,
									"scores":	[-7.20506429818382]
								}, {
									"case":	803,
									"scores":	[-7.20506429818382]
								}, {
									"case":	804,
									"scores":	[-7.20506429818382]
								}, {
									"case":	805,
									"scores":	[-7.20506429818382]
								}, {
									"case":	806,
									"scores":	[-7.20506429818382]
								}, {
									"case":	807,
									"scores":	[-7.20506429818382]
								}, {
									"case":	808,
									"scores":	[-7.20506429818382]
								}, {
									"case":	809,
									"scores":	[-7.20506429818382]
								}, {
									"case":	810,
									"scores":	[-7.20506429818382]
								}, {
									"case":	811,
									"scores":	[-7.20506429818382]
								}, {
									"case":	812,
									"scores":	[-7.20506429818382]
								}, {
									"case":	813,
									"scores":	[-7.20506429818382]
								}, {
									"case":	814,
									"scores":	[-7.20506429818382]
								}, {
									"case":	815,
									"scores":	[-7.20506429818382]
								}, {
									"case":	816,
									"scores":	[-7.20506429818382]
								}, {
									"case":	817,
									"scores":	[-7.20506429818382]
								}, {
									"case":	818,
									"scores":	[-7.20506429818382]
								}, {
									"case":	819,
									"scores":	[-7.20506429818382]
								}, {
									"case":	820,
									"scores":	[-7.20506429818382]
								}, {
									"case":	821,
									"scores":	[-7.20506429818382]
								}, {
									"case":	822,
									"scores":	[-7.20506429818382]
								}, {
									"case":	823,
									"scores":	[-7.20506429818382]
								}, {
									"case":	824,
									"scores":	[-7.20506429818382]
								}, {
									"case":	825,
									"scores":	[-7.20506429818382]
								}, {
									"case":	826,
									"scores":	[-7.20506429818382]
								}, {
									"case":	827,
									"scores":	[-7.20506429818382]
								}, {
									"case":	828,
									"scores":	[-7.20506429818382]
								}, {
									"case":	829,
									"scores":	[-7.20506429818382]
								}, {
									"case":	830,
									"scores":	[-7.20506429818382]
								}, {
									"case":	831,
									"scores":	[-7.20506429818382]
								}, {
									"case":	832,
									"scores":	[-7.20506429818382]
								}, {
									"case":	833,
									"scores":	[-7.20506429818382]
								}, {
									"case":	834,
									"scores":	[-7.20506429818382]
								}, {
									"case":	835,
									"scores":	[-7.20506429818382]
								}, {
									"case":	836,
									"scores":	[-7.20506429818382]
								}, {
									"case":	837,
									"scores":	[-7.20506429818382]
								}, {
									"case":	838,
									"scores":	[-7.20506429818382]
								}, {
									"case":	839,
									"scores":	[-7.20506429818382]
								}, {
									"case":	840,
									"scores":	[-7.20506429818382]
								}, {
									"case":	841,
									"scores":	[-7.20506429818382]
								}, {
									"case":	842,
									"scores":	[-7.20506429818382]
								}, {
									"case":	843,
									"scores":	[-7.20506429818382]
								}, {
									"case":	844,
									"scores":	[-7.20506429818382]
								}, {
									"case":	845,
									"scores":	[-7.20506429818382]
								}, {
									"case":	846,
									"scores":	[-7.20506429818382]
								}]
						}]
				}, {
					"line":	1664,
					"switches":	[]
				}, {
					"line":	1663,
					"switches":	[{
							"switch":	80,
							"types":	[[], [], [], [], [], [], [], [], [], [1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093], [], [], [], [], [], []],
							"begin_line":	1664,
							"begin_column":	0,
							"end_line":	1664,
							"end_column":	0,
							"patch_codes":	["TIFFClose((in))", "TIFFClose((out))", "TIFFDefaultTileSize((in), &tilewidth, &tilelength)", "TIFFDefaultTileSize((out), &tilewidth, &tilelength)", "TIFFError(TIFFFileName((in)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((in)), \"Error, no space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, can't allocate space for image buffer\")", "TIFFError(TIFFFileName((out)), \"Error, no space for image buffer\")", "TIFFGetField((in), 256, &w)", "TIFFGetField((in), 257, &l)", "TIFFGetField((in), 322, &tilewidth)", "TIFFGetField((in), 322, &tw)", "TIFFGetField((in), 323, &tilelength)", "TIFFGetField((in), 323, &tl)", "TIFFGetField((out), 256, &w)", "TIFFGetField((out), 257, &l)", "TIFFGetField((out), 322, &tilewidth)", "TIFFGetField((out), 322, &tw)", "TIFFGetField((out), 323, &tilelength)", "TIFFGetField((out), 323, &tl)", "TIFFGetFieldDefaulted((in), 274, &orientation)", "TIFFGetFieldDefaulted((out), 274, &orientation)", "TIFFSetDirectory((in), TIFFCurrentDirectory(bias))", "TIFFSetDirectory((out), TIFFCurrentDirectory(bias))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((in)))", "TIFFSetDirectory(bias, TIFFCurrentDirectory((out)))", "TIFFSetField((in), 259, compression)", "TIFFSetField((in), 262, 2)", "TIFFSetField((in), 262, 6)", "TIFFSetField((in), 266, fillorder)", "TIFFSetField((in), 274, orientation)", "TIFFSetField((in), 278, rowsperstrip)", "TIFFSetField((in), 284, config)", "TIFFSetField((in), 292, g3opts)", "TIFFSetField((in), 297, pageNum++, 0)", "TIFFSetField((in), 317, predictor)", "TIFFSetField((in), 322, tilewidth)", "TIFFSetField((in), 323, tilelength)", "TIFFSetField((in), 65538, 1)", "TIFFSetField((in), 65538, jpegcolormode)", "TIFFSetField((out), 259, compression)", "TIFFSetField((out), 262, 2)", "TIFFSetField((out), 262, 6)", "TIFFSetField((out), 266, fillorder)", "TIFFSetField((out), 274, orientation)", "TIFFSetField((out), 278, rowsperstrip)", "TIFFSetField((out), 284, config)", "TIFFSetField((out), 292, g3opts)", "TIFFSetField((out), 297, pageNum++, 0)", "TIFFSetField((out), 317, predictor)", "TIFFSetField((out), 322, tilewidth)", "TIFFSetField((out), 323, tilelength)", "TIFFSetField((out), 65538, 1)", "TIFFSetField((out), 65538, jpegcolormode)", "bias = (in)", "bias = (out)", "bychunk = (-1)", "bychunk = (0)", "bychunk = (1)", "bychunk = (11)", "bychunk = (16)", "bychunk = (2)", "bychunk = (2048)", "bychunk = (2056)", "bychunk = (2057)", "bychunk = (2058)", "bychunk = (2059)", "bychunk = (2060)", "bychunk = (2061)", "bychunk = (2062)", "bychunk = (2063)", "bychunk = (2064)", "bychunk = (2065)", "bychunk = (2066)", "bychunk = (2067)", "bychunk = (2068)", "bychunk = (2069)", "bychunk = (2070)", "bychunk = (2071)", "bychunk = (256)", "bychunk = (257)", "bychunk = (278)", "bychunk = (284)", "bychunk = (3)", "bychunk = (322)", "bychunk = (323)", "bychunk = (4)", "bychunk = (4096)", "bychunk = (4104)", "bychunk = (4105)", "bychunk = (4106)", "bychunk = (4107)", "bychunk = (4108)", "bychunk = (4109)", "bychunk = (4110)", "bychunk = (4111)", "bychunk = (4112)", "bychunk = (4113)", "bychunk = (4114)", "bychunk = (4115)", "bychunk = (4116)", "bychunk = (4117)", "bychunk = (4118)", "bychunk = (4119)", "bychunk = (8)", "bychunk = (bychunk)", "comma = (-1)", "comma = (0)", "comma = (1)", "comma = (11)", "comma = (16)", "comma = (2)", "comma = (2048)", "comma = (2056)", "comma = (2057)", "comma = (2058)", "comma = (2059)", "comma = (2060)", "comma = (2061)", "comma = (2062)", "comma = (2063)", "comma = (2064)", "comma = (2065)", "comma = (2066)", "comma = (2067)", "comma = (2068)", "comma = (2069)", "comma = (2070)", "comma = (2071)", "comma = (256)", "comma = (257)", "comma = (278)", "comma = (284)", "comma = (3)", "comma = (322)", "comma = (323)", "comma = (4)", "comma = (4096)", "comma = (4104)", "comma = (4105)", "comma = (4106)", "comma = (4107)", "comma = (4108)", "comma = (4109)", "comma = (4110)", "comma = (4111)", "comma = (4112)", "comma = (4113)", "comma = (4114)", "comma = (4115)", "comma = (4116)", "comma = (4117)", "comma = (4118)", "comma = (4119)", "comma = (8)", "compression = (-1)", "compression = (0)", "compression = (1)", "compression = (11)", "compression = (16)", "compression = (2)", "compression = (2048)", "compression = (2056)", "compression = (2057)", "compression = (2058)", "compression = (2059)", "compression = (2060)", "compression = (2061)", "compression = (2062)", "compression = (2063)", "compression = (2064)", "compression = (2065)", "compression = (2066)", "compression = (2067)", "compression = (2068)", "compression = (2069)", "compression = (2070)", "compression = (2071)", "compression = (256)", "compression = (257)", "compression = (278)", "compression = (284)", "compression = (3)", "compression = (322)", "compression = (323)", "compression = (4)", "compression = (4096)", "compression = (4104)", "compression = (4105)", "compression = (4106)", "compression = (4107)", "compression = (4108)", "compression = (4109)", "compression = (4110)", "compression = (4111)", "compression = (4112)", "compression = (4113)", "compression = (4114)", "compression = (4115)", "compression = (4116)", "compression = (4117)", "compression = (4118)", "compression = (4119)", "compression = (8)", "compression = (bitspersample)", "compression = (samplesperpixel)", "compression = (shortv)", "config = (-1)", "config = (0)", "config = (1)", "config = (11)", "config = (16)", "config = (2)", "config = (2048)", "config = (2056)", "config = (2057)", "config = (2058)", "config = (2059)", "config = (2060)", "config = (2061)", "config = (2062)", "config = (2063)", "config = (2064)", "config = (2065)", "config = (2066)", "config = (2067)", "config = (2068)", "config = (2069)", "config = (2070)", "config = (2071)", "config = (256)", "config = (257)", "config = (278)", "config = (284)", "config = (3)", "config = (322)", "config = (323)", "config = (4)", "config = (4096)", "config = (4104)", "config = (4105)", "config = (4106)", "config = (4107)", "config = (4108)", "config = (4109)", "config = (4110)", "config = (4111)", "config = (4112)", "config = (4113)", "config = (4114)", "config = (4115)", "config = (4116)", "config = (4117)", "config = (4118)", "config = (4119)", "config = (8)", "config = (bitspersample)", "config = (samplesperpixel)", "config = (shortv)", "defcompression = (-1)", "defcompression = (0)", "defcompression = (1)", "defcompression = (11)", "defcompression = (16)", "defcompression = (2)", "defcompression = (2048)", "defcompression = (2056)", "defcompression = (2057)", "defcompression = (2058)", "defcompression = (2059)", "defcompression = (2060)", "defcompression = (2061)", "defcompression = (2062)", "defcompression = (2063)", "defcompression = (2064)", "defcompression = (2065)", "defcompression = (2066)", "defcompression = (2067)", "defcompression = (2068)", "defcompression = (2069)", "defcompression = (2070)", "defcompression = (2071)", "defcompression = (256)", "defcompression = (257)", "defcompression = (278)", "defcompression = (284)", "defcompression = (3)", "defcompression = (322)", "defcompression = (323)", "defcompression = (4)", "defcompression = (4096)", "defcompression = (4104)", "defcompression = (4105)", "defcompression = (4106)", "defcompression = (4107)", "defcompression = (4108)", "defcompression = (4109)", "defcompression = (4110)", "defcompression = (4111)", "defcompression = (4112)", "defcompression = (4113)", "defcompression = (4114)", "defcompression = (4115)", "defcompression = (4116)", "defcompression = (4117)", "defcompression = (4118)", "defcompression = (4119)", "defcompression = (8)", "defcompression = (bitspersample)", "defcompression = (samplesperpixel)", "defcompression = (shortv)", "defg3opts = (-1)", "defg3opts = (0)", "defg3opts = (1)", "defg3opts = (11)", "defg3opts = (16)", "defg3opts = (2)", "defg3opts = (2048)", "defg3opts = (2056)", "defg3opts = (2057)", "defg3opts = (2058)", "defg3opts = (2059)", "defg3opts = (2060)", "defg3opts = (2061)", "defg3opts = (2062)", "defg3opts = (2063)", "defg3opts = (2064)", "defg3opts = (2065)", "defg3opts = (2066)", "defg3opts = (2067)", "defg3opts = (2068)", "defg3opts = (2069)", "defg3opts = (2070)", "defg3opts = (2071)", "defg3opts = (256)", "defg3opts = (257)", "defg3opts = (278)", "defg3opts = (284)", "defg3opts = (3)", "defg3opts = (322)", "defg3opts = (323)", "defg3opts = (4)", "defg3opts = (4096)", "defg3opts = (4104)", "defg3opts = (4105)", "defg3opts = (4106)", "defg3opts = (4107)", "defg3opts = (4108)", "defg3opts = (4109)", "defg3opts = (4110)", "defg3opts = (4111)", "defg3opts = (4112)", "defg3opts = (4113)", "defg3opts = (4114)", "defg3opts = (4115)", "defg3opts = (4116)", "defg3opts = (4117)", "defg3opts = (4118)", "defg3opts = (4119)", "defg3opts = (8)", "defg3opts = (l)", "defg3opts = (tl)", "defg3opts = (tw)", "defg3opts = (w)", "defpredictor = (-1)", "defpredictor = (0)", "defpredictor = (1)", "defpredictor = (11)", "defpredictor = (16)", "defpredictor = (2)", "defpredictor = (2048)", "defpredictor = (2056)", "defpredictor = (2057)", "defpredictor = (2058)", "defpredictor = (2059)", "defpredictor = (2060)", "defpredictor = (2061)", "defpredictor = (2062)", "defpredictor = (2063)", "defpredictor = (2064)", "defpredictor = (2065)", "defpredictor = (2066)", "defpredictor = (2067)", "defpredictor = (2068)", "defpredictor = (2069)", "defpredictor = (2070)", "defpredictor = (2071)", "defpredictor = (256)", "defpredictor = (257)", "defpredictor = (278)", "defpredictor = (284)", "defpredictor = (3)", "defpredictor = (322)", "defpredictor = (323)", "defpredictor = (4)", "defpredictor = (4096)", "defpredictor = (4104)", "defpredictor = (4105)", "defpredictor = (4106)", "defpredictor = (4107)", "defpredictor = (4108)", "defpredictor = (4109)", "defpredictor = (4110)", "defpredictor = (4111)", "defpredictor = (4112)", "defpredictor = (4113)", "defpredictor = (4114)", "defpredictor = (4115)", "defpredictor = (4116)", "defpredictor = (4117)", "defpredictor = (4118)", "defpredictor = (4119)", "defpredictor = (8)", "defpredictor = (bitspersample)", "defpredictor = (samplesperpixel)", "defpredictor = (shortv)", "fillorder = (-1)", "fillorder = (0)", "fillorder = (1)", "fillorder = (11)", "fillorder = (16)", "fillorder = (2)", "fillorder = (2048)", "fillorder = (2056)", "fillorder = (2057)", "fillorder = (2058)", "fillorder = (2059)", "fillorder = (2060)", "fillorder = (2061)", "fillorder = (2062)", "fillorder = (2063)", "fillorder = (2064)", "fillorder = (2065)", "fillorder = (2066)", "fillorder = (2067)", "fillorder = (2068)", "fillorder = (2069)", "fillorder = (2070)", "fillorder = (2071)", "fillorder = (256)", "fillorder = (257)", "fillorder = (278)", "fillorder = (284)", "fillorder = (3)", "fillorder = (322)", "fillorder = (323)", "fillorder = (4)", "fillorder = (4096)", "fillorder = (4104)", "fillorder = (4105)", "fillorder = (4106)", "fillorder = (4107)", "fillorder = (4108)", "fillorder = (4109)", "fillorder = (4110)", "fillorder = (4111)", "fillorder = (4112)", "fillorder = (4113)", "fillorder = (4114)", "fillorder = (4115)", "fillorder = (4116)", "fillorder = (4117)", "fillorder = (4118)", "fillorder = (4119)", "fillorder = (8)", "fillorder = (bitspersample)", "fillorder = (samplesperpixel)", "fillorder = (shortv)", "g3opts = (-1)", "g3opts = (0)", "g3opts = (1)", "g3opts = (11)", "g3opts = (16)", "g3opts = (2)", "g3opts = (2048)", "g3opts = (2056)", "g3opts = (2057)", "g3opts = (2058)", "g3opts = (2059)", "g3opts = (2060)", "g3opts = (2061)", "g3opts = (2062)", "g3opts = (2063)", "g3opts = (2064)", "g3opts = (2065)", "g3opts = (2066)", "g3opts = (2067)", "g3opts = (2068)", "g3opts = (2069)", "g3opts = (2070)", "g3opts = (2071)", "g3opts = (256)", "g3opts = (257)", "g3opts = (278)", "g3opts = (284)", "g3opts = (3)", "g3opts = (322)", "g3opts = (323)", "g3opts = (4)", "g3opts = (4096)", "g3opts = (4104)", "g3opts = (4105)", "g3opts = (4106)", "g3opts = (4107)", "g3opts = (4108)", "g3opts = (4109)", "g3opts = (4110)", "g3opts = (4111)", "g3opts = (4112)", "g3opts = (4113)", "g3opts = (4114)", "g3opts = (4115)", "g3opts = (4116)", "g3opts = (4117)", "g3opts = (4118)", "g3opts = (4119)", "g3opts = (8)", "g3opts = (l)", "g3opts = (tl)", "g3opts = (tw)", "g3opts = (w)", "jpegcolormode = (-1)", "jpegcolormode = (0)", "jpegcolormode = (1)", "jpegcolormode = (11)", "jpegcolormode = (16)", "jpegcolormode = (2)", "jpegcolormode = (2048)", "jpegcolormode = (2056)", "jpegcolormode = (2057)", "jpegcolormode = (2058)", "jpegcolormode = (2059)", "jpegcolormode = (2060)", "jpegcolormode = (2061)", "jpegcolormode = (2062)", "jpegcolormode = (2063)", "jpegcolormode = (2064)", "jpegcolormode = (2065)", "jpegcolormode = (2066)", "jpegcolormode = (2067)", "jpegcolormode = (2068)", "jpegcolormode = (2069)", "jpegcolormode = (2070)", "jpegcolormode = (2071)", "jpegcolormode = (256)", "jpegcolormode = (257)", "jpegcolormode = (278)", "jpegcolormode = (284)", "jpegcolormode = (3)", "jpegcolormode = (322)", "jpegcolormode = (323)", "jpegcolormode = (4)", "jpegcolormode = (4096)", "jpegcolormode = (4104)", "jpegcolormode = (4105)", "jpegcolormode = (4106)", "jpegcolormode = (4108)", "jpegcolormode = (4109)", "jpegcolormode = (4110)", "jpegcolormode = (4111)", "jpegcolormode = (4112)", "jpegcolormode = (4113)", "jpegcolormode = (4114)", "jpegcolormode = (4115)", "jpegcolormode = (4116)", "jpegcolormode = (4117)", "jpegcolormode = (4118)", "jpegcolormode = (4119)", "jpegcolormode = (8)", "jpegcolormode = (bychunk)", "orientation = (-1)", "orientation = (0)", "orientation = (1)", "orientation = (11)", "orientation = (16)", "orientation = (2)", "orientation = (2048)", "orientation = (2056)", "orientation = (2057)", "orientation = (2058)", "orientation = (2059)", "orientation = (2060)", "orientation = (2061)", "orientation = (2062)", "orientation = (2063)", "orientation = (2064)", "orientation = (2065)", "orientation = (2066)", "orientation = (2067)", "orientation = (2068)", "orientation = (2069)", "orientation = (2070)", "orientation = (2071)", "orientation = (256)", "orientation = (257)", "orientation = (278)", "orientation = (284)", "orientation = (3)", "orientation = (322)", "orientation = (323)", "orientation = (4)", "orientation = (4096)", "orientation = (4104)", "orientation = (4105)", "orientation = (4106)", "orientation = (4107)", "orientation = (4108)", "orientation = (4109)", "orientation = (4110)", "orientation = (4111)", "orientation = (4112)", "orientation = (4113)", "orientation = (4114)", "orientation = (4115)", "orientation = (4116)", "orientation = (4117)", "orientation = (4118)", "orientation = (4119)", "orientation = (8)", "orientation = (bitspersample)", "orientation = (samplesperpixel)", "orientation = (shortv)", "outtiled = (-1)", "outtiled = (0)", "outtiled = (1)", "outtiled = (11)", "outtiled = (16)", "outtiled = (2)", "outtiled = (2048)", "outtiled = (2056)", "outtiled = (2057)", "outtiled = (2058)", "outtiled = (2059)", "outtiled = (2060)", "outtiled = (2061)", "outtiled = (2062)", "outtiled = (2063)", "outtiled = (2064)", "outtiled = (2065)", "outtiled = (2066)", "outtiled = (2067)", "outtiled = (2068)", "outtiled = (2069)", "outtiled = (2070)", "outtiled = (2071)", "outtiled = (256)", "outtiled = (257)", "outtiled = (278)", "outtiled = (284)", "outtiled = (3)", "outtiled = (322)", "outtiled = (323)", "outtiled = (4)", "outtiled = (4096)", "outtiled = (4104)", "outtiled = (4105)", "outtiled = (4106)", "outtiled = (4107)", "outtiled = (4108)", "outtiled = (4109)", "outtiled = (4110)", "outtiled = (4111)", "outtiled = (4112)", "outtiled = (4113)", "outtiled = (4114)", "outtiled = (4115)", "outtiled = (4116)", "outtiled = (4117)", "outtiled = (4118)", "outtiled = (4119)", "outtiled = (8)", "outtiled = (bychunk)", "outtiled = TIFFIsTiled((in))", "outtiled = TIFFIsTiled((out))", "pageNum = (-1)", "pageNum = (0)", "pageNum = (1)", "pageNum = (11)", "pageNum = (16)", "pageNum = (2)", "pageNum = (2048)", "pageNum = (2056)", "pageNum = (2057)", "pageNum = (2058)", "pageNum = (2059)", "pageNum = (2060)", "pageNum = (2061)", "pageNum = (2062)", "pageNum = (2063)", "pageNum = (2064)", "pageNum = (2065)", "pageNum = (2066)", "pageNum = (2067)", "pageNum = (2068)", "pageNum = (2069)", "pageNum = (2070)", "pageNum = (2071)", "pageNum = (256)", "pageNum = (257)", "pageNum = (278)", "pageNum = (284)", "pageNum = (3)", "pageNum = (322)", "pageNum = (323)", "pageNum = (4)", "pageNum = (4096)", "pageNum = (4104)", "pageNum = (4105)", "pageNum = (4106)", "pageNum = (4107)", "pageNum = (4108)", "pageNum = (4109)", "pageNum = (4110)", "pageNum = (4111)", "pageNum = (4112)", "pageNum = (4113)", "pageNum = (4114)", "pageNum = (4115)", "pageNum = (4116)", "pageNum = (4117)", "pageNum = (4118)", "pageNum = (4119)", "pageNum = (8)", "pageNum = (bychunk)", "predictor = (-1)", "predictor = (0)", "predictor = (1)", "predictor = (11)", "predictor = (16)", "predictor = (2)", "predictor = (2048)", "predictor = (2056)", "predictor = (2057)", "predictor = (2058)", "predictor = (2059)", "predictor = (2060)", "predictor = (2061)", "predictor = (2062)", "predictor = (2063)", "predictor = (2064)", "predictor = (2065)", "predictor = (2066)", "predictor = (2067)", "predictor = (2068)", "predictor = (2069)", "predictor = (2070)", "predictor = (2071)", "predictor = (256)", "predictor = (257)", "predictor = (278)", "predictor = (284)", "predictor = (3)", "predictor = (322)", "predictor = (323)", "predictor = (4)", "predictor = (4096)", "predictor = (4104)", "predictor = (4105)", "predictor = (4106)", "predictor = (4107)", "predictor = (4108)", "predictor = (4109)", "predictor = (4110)", "predictor = (4111)", "predictor = (4112)", "predictor = (4113)", "predictor = (4114)", "predictor = (4115)", "predictor = (4116)", "predictor = (4117)", "predictor = (4118)", "predictor = (4119)", "predictor = (8)", "predictor = (bitspersample)", "predictor = (samplesperpixel)", "predictor = (shortv)", "quality = (-1)", "quality = (0)", "quality = (1)", "quality = (11)", "quality = (16)", "quality = (2)", "quality = (2048)", "quality = (2056)", "quality = (2057)", "quality = (2058)", "quality = (2059)", "quality = (2060)", "quality = (2061)", "quality = (2062)", "quality = (2063)", "quality = (2064)", "quality = (2065)", "quality = (2066)", "quality = (2067)", "quality = (2068)", "quality = (2069)", "quality = (2070)", "quality = (2071)", "quality = (256)", "quality = (257)", "quality = (278)", "quality = (284)", "quality = (3)", "quality = (322)", "quality = (323)", "quality = (4)", "quality = (4096)", "quality = (4104)", "quality = (4105)", "quality = (4106)", "quality = (4107)", "quality = (4108)", "quality = (4109)", "quality = (4110)", "quality = (4111)", "quality = (4112)", "quality = (4113)", "quality = (4114)", "quality = (4115)", "quality = (4116)", "quality = (4117)", "quality = (4118)", "quality = (4119)", "quality = (8)", "quality = (bychunk)", "rowsperstrip = (-1)", "rowsperstrip = (0)", "rowsperstrip = (1)", "rowsperstrip = (11)", "rowsperstrip = (16)", "rowsperstrip = (2)", "rowsperstrip = (2048)", "rowsperstrip = (2056)", "rowsperstrip = (2057)", "rowsperstrip = (2058)", "rowsperstrip = (2059)", "rowsperstrip = (2060)", "rowsperstrip = (2061)", "rowsperstrip = (2062)", "rowsperstrip = (2063)", "rowsperstrip = (2064)", "rowsperstrip = (2065)", "rowsperstrip = (2066)", "rowsperstrip = (2067)", "rowsperstrip = (2068)", "rowsperstrip = (2069)", "rowsperstrip = (2070)", "rowsperstrip = (2071)", "rowsperstrip = (256)", "rowsperstrip = (257)", "rowsperstrip = (278)", "rowsperstrip = (284)", "rowsperstrip = (3)", "rowsperstrip = (322)", "rowsperstrip = (323)", "rowsperstrip = (4)", "rowsperstrip = (4096)", "rowsperstrip = (4104)", "rowsperstrip = (4105)", "rowsperstrip = (4106)", "rowsperstrip = (4107)", "rowsperstrip = (4108)", "rowsperstrip = (4109)", "rowsperstrip = (4110)", "rowsperstrip = (4111)", "rowsperstrip = (4112)", "rowsperstrip = (4113)", "rowsperstrip = (4114)", "rowsperstrip = (4115)", "rowsperstrip = (4116)", "rowsperstrip = (4117)", "rowsperstrip = (4118)", "rowsperstrip = (4119)", "rowsperstrip = (8)", "rowsperstrip = (l)", "rowsperstrip = (tl)", "rowsperstrip = (tw)", "rowsperstrip = (w)", "rowsperstrip = TIFFDefaultStripSize((in), rowsperstrip)", "rowsperstrip = TIFFDefaultStripSize((out), rowsperstrip)", "tilelength = (-1)", "tilelength = (0)", "tilelength = (1)", "tilelength = (11)", "tilelength = (16)", "tilelength = (2)", "tilelength = (2048)", "tilelength = (2056)", "tilelength = (2057)", "tilelength = (2058)", "tilelength = (2059)", "tilelength = (2060)", "tilelength = (2061)", "tilelength = (2062)", "tilelength = (2063)", "tilelength = (2064)", "tilelength = (2065)", "tilelength = (2066)", "tilelength = (2067)", "tilelength = (2068)", "tilelength = (2069)", "tilelength = (2070)", "tilelength = (2071)", "tilelength = (256)", "tilelength = (257)", "tilelength = (278)", "tilelength = (284)", "tilelength = (3)", "tilelength = (322)", "tilelength = (323)", "tilelength = (4)", "tilelength = (4096)", "tilelength = (4104)", "tilelength = (4105)", "tilelength = (4106)", "tilelength = (4107)", "tilelength = (4108)", "tilelength = (4109)", "tilelength = (4110)", "tilelength = (4111)", "tilelength = (4112)", "tilelength = (4113)", "tilelength = (4114)", "tilelength = (4115)", "tilelength = (4116)", "tilelength = (4117)", "tilelength = (4118)", "tilelength = (4119)", "tilelength = (8)", "tilelength = (l)", "tilelength = (tl)", "tilelength = (tw)", "tilelength = (w)", "tilewidth = (-1)", "tilewidth = (0)", "tilewidth = (1)", "tilewidth = (11)", "tilewidth = (16)", "tilewidth = (2)", "tilewidth = (2048)", "tilewidth = (2056)", "tilewidth = (2057)", "tilewidth = (2058)", "tilewidth = (2059)", "tilewidth = (2060)", "tilewidth = (2061)", "tilewidth = (2062)", "tilewidth = (2063)", "tilewidth = (2064)", "tilewidth = (2065)", "tilewidth = (2066)", "tilewidth = (2067)", "tilewidth = (2068)", "tilewidth = (2069)", "tilewidth = (2070)", "tilewidth = (2071)", "tilewidth = (256)", "tilewidth = (257)", "tilewidth = (278)", "tilewidth = (284)", "tilewidth = (3)", "tilewidth = (322)", "tilewidth = (323)", "tilewidth = (4)", "tilewidth = (4096)", "tilewidth = (4104)", "tilewidth = (4105)", "tilewidth = (4106)", "tilewidth = (4107)", "tilewidth = (4108)", "tilewidth = (4109)", "tilewidth = (4110)", "tilewidth = (4111)", "tilewidth = (4112)", "tilewidth = (4113)", "tilewidth = (4114)", "tilewidth = (4115)", "tilewidth = (4116)", "tilewidth = (4117)", "tilewidth = (4118)", "tilewidth = (4119)", "tilewidth = (8)", "tilewidth = (l)", "tilewidth = (tl)", "tilewidth = (tw)", "tilewidth = (w)", "tl = (-1)", "tl = (0)", "tl = (1)", "tl = (11)", "tl = (16)", "tl = (2)", "tl = (2048)", "tl = (2056)", "tl = (2057)", "tl = (2058)", "tl = (2059)", "tl = (2060)", "tl = (2061)", "tl = (2062)", "tl = (2063)", "tl = (2064)", "tl = (2065)", "tl = (2066)", "tl = (2067)", "tl = (2068)", "tl = (2069)", "tl = (2070)", "tl = (2071)", "tl = (256)", "tl = (257)", "tl = (278)", "tl = (284)", "tl = (3)", "tl = (322)", "tl = (323)", "tl = (4)", "tl = (4096)", "tl = (4104)", "tl = (4105)", "tl = (4106)", "tl = (4107)", "tl = (4108)", "tl = (4109)", "tl = (4110)", "tl = (4111)", "tl = (4112)", "tl = (4113)", "tl = (4114)", "tl = (4115)", "tl = (4116)", "tl = (4117)", "tl = (4118)", "tl = (4119)", "tl = (8)", "tl = (l)", "tl = (tl)", "tl = (tw)", "tl = (w)", "tw = (-1)", "tw = (0)", "tw = (1)", "tw = (11)", "tw = (16)", "tw = (2)", "tw = (2048)", "tw = (2056)", "tw = (2057)", "tw = (2058)", "tw = (2059)", "tw = (2060)", "tw = (2061)", "tw = (2062)", "tw = (2063)", "tw = (2064)", "tw = (2065)", "tw = (2066)", "tw = (2067)", "tw = (2068)", "tw = (2069)", "tw = (2070)", "tw = (2071)", "tw = (256)", "tw = (257)", "tw = (278)", "tw = (284)", "tw = (3)", "tw = (322)", "tw = (323)", "tw = (4)", "tw = (4096)", "tw = (4104)", "tw = (4105)", "tw = (4106)", "tw = (4107)", "tw = (4108)", "tw = (4109)", "tw = (4110)", "tw = (4111)", "tw = (4112)", "tw = (4113)", "tw = (4114)", "tw = (4115)", "tw = (4116)", "tw = (4117)", "tw = (4118)", "tw = (4119)", "tw = (8)", "tw = (l)", "tw = (tl)", "tw = (tw)", "tw = (w)", "(void)TIFFGetField(in, 284, &shortv)", "TIFFGetField(in, 256, &w)", "TIFFGetField(in, 257, &l)", "TIFFGetField(in, 322, &tw)", "TIFFGetField(in, 323, &tl)", "TIFFSetDirectory(bias, TIFFCurrentDirectory(bias))", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1287, __extension__ __PRETTY_FUNCTION__)", "__assert_fail(\"bps % 8 == 0\", \"tools/tiffcp.c\", 1462, __extension__ __PRETTY_FUNCTION__)", "bychunk = (tw == tilewidth && tl == tilelength)", "bychunk = (tw == w && tl == rowsperstrip)", "compression = defcompression", "defcompression = 1", "defcompression = 32773", "defcompression = 34661", "defcompression = 3", "defcompression = 4", "defcompression = 5", "defcompression = 7", "defcompression = 8", "defg3opts = 0", "exit(-1)", "exit(-2)", "exit(-4)", "exit(-5)", "exit(-7)", "g3opts = defg3opts", "jpegcolormode = (4107)", "jpegcolormode = 0", "orientation = 1", "orientation = 4", "pageNum = -1", "predictor = defpredictor", "tl = l", "tw = w", "usage()"],
							"prophet_scores":	[{
									"case":	1,
									"scores":	[-7.1848615908663]
								}, {
									"case":	2,
									"scores":	[-7.1848615908663]
								}, {
									"case":	3,
									"scores":	[-7.1848615908663]
								}, {
									"case":	4,
									"scores":	[-7.1848615908663]
								}, {
									"case":	5,
									"scores":	[-7.1848615908663]
								}, {
									"case":	6,
									"scores":	[-7.1848615908663]
								}, {
									"case":	7,
									"scores":	[-7.1848615908663]
								}, {
									"case":	8,
									"scores":	[-7.1848615908663]
								}, {
									"case":	9,
									"scores":	[-7.1848615908663]
								}, {
									"case":	10,
									"scores":	[-7.1848615908663]
								}, {
									"case":	11,
									"scores":	[-7.1848615908663]
								}, {
									"case":	12,
									"scores":	[-7.1848615908663]
								}, {
									"case":	13,
									"scores":	[-7.1848615908663]
								}, {
									"case":	14,
									"scores":	[-7.1848615908663]
								}, {
									"case":	15,
									"scores":	[-7.1848615908663]
								}, {
									"case":	16,
									"scores":	[-7.1848615908663]
								}, {
									"case":	17,
									"scores":	[-7.1848615908663]
								}, {
									"case":	18,
									"scores":	[-7.1848615908663]
								}, {
									"case":	19,
									"scores":	[-7.1848615908663]
								}, {
									"case":	20,
									"scores":	[-7.1848615908663]
								}, {
									"case":	21,
									"scores":	[-7.1848615908663]
								}, {
									"case":	22,
									"scores":	[-7.1848615908663]
								}, {
									"case":	23,
									"scores":	[-7.1848615908663]
								}, {
									"case":	24,
									"scores":	[-7.1848615908663]
								}, {
									"case":	25,
									"scores":	[-7.1848615908663]
								}, {
									"case":	26,
									"scores":	[-7.1848615908663]
								}, {
									"case":	27,
									"scores":	[-7.1848615908663]
								}, {
									"case":	28,
									"scores":	[-7.1848615908663]
								}, {
									"case":	29,
									"scores":	[-7.1848615908663]
								}, {
									"case":	30,
									"scores":	[-7.1848615908663]
								}, {
									"case":	31,
									"scores":	[-7.1848615908663]
								}, {
									"case":	32,
									"scores":	[-7.1848615908663]
								}, {
									"case":	33,
									"scores":	[-7.1848615908663]
								}, {
									"case":	34,
									"scores":	[-7.1848615908663]
								}, {
									"case":	35,
									"scores":	[-7.1848615908663]
								}, {
									"case":	36,
									"scores":	[-7.1848615908663]
								}, {
									"case":	37,
									"scores":	[-7.1848615908663]
								}, {
									"case":	38,
									"scores":	[-7.1848615908663]
								}, {
									"case":	39,
									"scores":	[-7.1848615908663]
								}, {
									"case":	40,
									"scores":	[-7.1848615908663]
								}, {
									"case":	41,
									"scores":	[-7.1848615908663]
								}, {
									"case":	42,
									"scores":	[-7.1848615908663]
								}, {
									"case":	43,
									"scores":	[-7.1848615908663]
								}, {
									"case":	44,
									"scores":	[-7.1848615908663]
								}, {
									"case":	45,
									"scores":	[-7.1848615908663]
								}, {
									"case":	46,
									"scores":	[-7.1848615908663]
								}, {
									"case":	47,
									"scores":	[-7.1848615908663]
								}, {
									"case":	48,
									"scores":	[-7.1848615908663]
								}, {
									"case":	49,
									"scores":	[-7.1848615908663]
								}, {
									"case":	50,
									"scores":	[-7.1848615908663]
								}, {
									"case":	51,
									"scores":	[-7.1848615908663]
								}, {
									"case":	52,
									"scores":	[-7.1848615908663]
								}, {
									"case":	53,
									"scores":	[-7.1848615908663]
								}, {
									"case":	54,
									"scores":	[-7.1848615908663]
								}, {
									"case":	55,
									"scores":	[-7.1848615908663]
								}, {
									"case":	56,
									"scores":	[-7.1848615908663]
								}, {
									"case":	57,
									"scores":	[-7.1848615908663]
								}, {
									"case":	58,
									"scores":	[-7.1848615908663]
								}, {
									"case":	59,
									"scores":	[-7.1848615908663]
								}, {
									"case":	60,
									"scores":	[-7.1848615908663]
								}, {
									"case":	61,
									"scores":	[-7.1848615908663]
								}, {
									"case":	62,
									"scores":	[-7.1848615908663]
								}, {
									"case":	63,
									"scores":	[-7.1848615908663]
								}, {
									"case":	64,
									"scores":	[-7.1848615908663]
								}, {
									"case":	65,
									"scores":	[-7.1848615908663]
								}, {
									"case":	66,
									"scores":	[-7.1848615908663]
								}, {
									"case":	67,
									"scores":	[-7.1848615908663]
								}, {
									"case":	68,
									"scores":	[-7.1848615908663]
								}, {
									"case":	69,
									"scores":	[-7.1848615908663]
								}, {
									"case":	70,
									"scores":	[-7.1848615908663]
								}, {
									"case":	71,
									"scores":	[-7.1848615908663]
								}, {
									"case":	72,
									"scores":	[-7.1848615908663]
								}, {
									"case":	73,
									"scores":	[-7.1848615908663]
								}, {
									"case":	74,
									"scores":	[-7.1848615908663]
								}, {
									"case":	75,
									"scores":	[-7.1848615908663]
								}, {
									"case":	76,
									"scores":	[-7.1848615908663]
								}, {
									"case":	77,
									"scores":	[-7.1848615908663]
								}, {
									"case":	78,
									"scores":	[-7.1848615908663]
								}, {
									"case":	79,
									"scores":	[-7.1848615908663]
								}, {
									"case":	80,
									"scores":	[-7.1848615908663]
								}, {
									"case":	81,
									"scores":	[-7.1848615908663]
								}, {
									"case":	82,
									"scores":	[-7.1848615908663]
								}, {
									"case":	83,
									"scores":	[-7.1848615908663]
								}, {
									"case":	84,
									"scores":	[-7.1848615908663]
								}, {
									"case":	85,
									"scores":	[-7.1848615908663]
								}, {
									"case":	86,
									"scores":	[-7.1848615908663]
								}, {
									"case":	87,
									"scores":	[-7.1848615908663]
								}, {
									"case":	88,
									"scores":	[-7.1848615908663]
								}, {
									"case":	89,
									"scores":	[-7.1848615908663]
								}, {
									"case":	90,
									"scores":	[-7.1848615908663]
								}, {
									"case":	91,
									"scores":	[-7.1848615908663]
								}, {
									"case":	92,
									"scores":	[-7.1848615908663]
								}, {
									"case":	93,
									"scores":	[-7.1848615908663]
								}, {
									"case":	94,
									"scores":	[-7.1848615908663]
								}, {
									"case":	95,
									"scores":	[-7.1848615908663]
								}, {
									"case":	96,
									"scores":	[-7.1848615908663]
								}, {
									"case":	97,
									"scores":	[-7.1848615908663]
								}, {
									"case":	98,
									"scores":	[-7.1848615908663]
								}, {
									"case":	99,
									"scores":	[-7.1848615908663]
								}, {
									"case":	100,
									"scores":	[-7.1848615908663]
								}, {
									"case":	101,
									"scores":	[-7.1848615908663]
								}, {
									"case":	102,
									"scores":	[-7.1848615908663]
								}, {
									"case":	103,
									"scores":	[-7.1848615908663]
								}, {
									"case":	104,
									"scores":	[-7.1848615908663]
								}, {
									"case":	105,
									"scores":	[-7.1848615908663]
								}, {
									"case":	106,
									"scores":	[-7.1848615908663]
								}, {
									"case":	107,
									"scores":	[-7.1848615908663]
								}, {
									"case":	108,
									"scores":	[-7.1848615908663]
								}, {
									"case":	109,
									"scores":	[-7.1848615908663]
								}, {
									"case":	110,
									"scores":	[-7.1848615908663]
								}, {
									"case":	111,
									"scores":	[-7.1848615908663]
								}, {
									"case":	112,
									"scores":	[-7.1848615908663]
								}, {
									"case":	113,
									"scores":	[-7.1848615908663]
								}, {
									"case":	114,
									"scores":	[-7.1848615908663]
								}, {
									"case":	115,
									"scores":	[-7.1848615908663]
								}, {
									"case":	116,
									"scores":	[-7.1848615908663]
								}, {
									"case":	117,
									"scores":	[-7.1848615908663]
								}, {
									"case":	118,
									"scores":	[-7.1848615908663]
								}, {
									"case":	119,
									"scores":	[-7.1848615908663]
								}, {
									"case":	120,
									"scores":	[-7.1848615908663]
								}, {
									"case":	121,
									"scores":	[-7.1848615908663]
								}, {
									"case":	122,
									"scores":	[-7.1848615908663]
								}, {
									"case":	123,
									"scores":	[-7.1848615908663]
								}, {
									"case":	124,
									"scores":	[-7.1848615908663]
								}, {
									"case":	125,
									"scores":	[-7.1848615908663]
								}, {
									"case":	126,
									"scores":	[-7.1848615908663]
								}, {
									"case":	127,
									"scores":	[-7.1848615908663]
								}, {
									"case":	128,
									"scores":	[-7.1848615908663]
								}, {
									"case":	129,
									"scores":	[-7.1848615908663]
								}, {
									"case":	130,
									"scores":	[-7.1848615908663]
								}, {
									"case":	131,
									"scores":	[-7.1848615908663]
								}, {
									"case":	132,
									"scores":	[-7.1848615908663]
								}, {
									"case":	133,
									"scores":	[-7.1848615908663]
								}, {
									"case":	134,
									"scores":	[-7.1848615908663]
								}, {
									"case":	135,
									"scores":	[-7.1848615908663]
								}, {
									"case":	136,
									"scores":	[-7.1848615908663]
								}, {
									"case":	137,
									"scores":	[-7.1848615908663]
								}, {
									"case":	138,
									"scores":	[-7.1848615908663]
								}, {
									"case":	139,
									"scores":	[-7.1848615908663]
								}, {
									"case":	140,
									"scores":	[-7.1848615908663]
								}, {
									"case":	141,
									"scores":	[-7.1848615908663]
								}, {
									"case":	142,
									"scores":	[-7.1848615908663]
								}, {
									"case":	143,
									"scores":	[-7.1848615908663]
								}, {
									"case":	144,
									"scores":	[-7.1848615908663]
								}, {
									"case":	145,
									"scores":	[-7.1848615908663]
								}, {
									"case":	146,
									"scores":	[-7.1848615908663]
								}, {
									"case":	147,
									"scores":	[-7.1848615908663]
								}, {
									"case":	148,
									"scores":	[-7.1848615908663]
								}, {
									"case":	149,
									"scores":	[-7.1848615908663]
								}, {
									"case":	150,
									"scores":	[-7.1848615908663]
								}, {
									"case":	151,
									"scores":	[-7.1848615908663]
								}, {
									"case":	152,
									"scores":	[-7.1848615908663]
								}, {
									"case":	153,
									"scores":	[-7.1848615908663]
								}, {
									"case":	154,
									"scores":	[-7.1848615908663]
								}, {
									"case":	155,
									"scores":	[-7.1848615908663]
								}, {
									"case":	156,
									"scores":	[-7.1848615908663]
								}, {
									"case":	157,
									"scores":	[-7.1848615908663]
								}, {
									"case":	158,
									"scores":	[-7.1848615908663]
								}, {
									"case":	159,
									"scores":	[-7.1848615908663]
								}, {
									"case":	160,
									"scores":	[-7.1848615908663]
								}, {
									"case":	161,
									"scores":	[-7.1848615908663]
								}, {
									"case":	162,
									"scores":	[-7.1848615908663]
								}, {
									"case":	163,
									"scores":	[-7.1848615908663]
								}, {
									"case":	164,
									"scores":	[-7.1848615908663]
								}, {
									"case":	165,
									"scores":	[-7.1848615908663]
								}, {
									"case":	166,
									"scores":	[-7.1848615908663]
								}, {
									"case":	167,
									"scores":	[-7.1848615908663]
								}, {
									"case":	168,
									"scores":	[-7.1848615908663]
								}, {
									"case":	169,
									"scores":	[-7.1848615908663]
								}, {
									"case":	170,
									"scores":	[-7.1848615908663]
								}, {
									"case":	171,
									"scores":	[-7.1848615908663]
								}, {
									"case":	172,
									"scores":	[-7.1848615908663]
								}, {
									"case":	173,
									"scores":	[-7.1848615908663]
								}, {
									"case":	174,
									"scores":	[-7.1848615908663]
								}, {
									"case":	175,
									"scores":	[-7.1848615908663]
								}, {
									"case":	176,
									"scores":	[-7.1848615908663]
								}, {
									"case":	177,
									"scores":	[-7.1848615908663]
								}, {
									"case":	178,
									"scores":	[-7.1848615908663]
								}, {
									"case":	179,
									"scores":	[-7.1848615908663]
								}, {
									"case":	180,
									"scores":	[-7.1848615908663]
								}, {
									"case":	181,
									"scores":	[-7.1848615908663]
								}, {
									"case":	182,
									"scores":	[-7.1848615908663]
								}, {
									"case":	183,
									"scores":	[-7.1848615908663]
								}, {
									"case":	184,
									"scores":	[-7.1848615908663]
								}, {
									"case":	185,
									"scores":	[-7.1848615908663]
								}, {
									"case":	186,
									"scores":	[-7.1848615908663]
								}, {
									"case":	187,
									"scores":	[-7.1848615908663]
								}, {
									"case":	188,
									"scores":	[-7.1848615908663]
								}, {
									"case":	189,
									"scores":	[-7.1848615908663]
								}, {
									"case":	190,
									"scores":	[-7.1848615908663]
								}, {
									"case":	191,
									"scores":	[-7.1848615908663]
								}, {
									"case":	192,
									"scores":	[-7.1848615908663]
								}, {
									"case":	193,
									"scores":	[-7.1848615908663]
								}, {
									"case":	194,
									"scores":	[-7.1848615908663]
								}, {
									"case":	195,
									"scores":	[-7.1848615908663]
								}, {
									"case":	196,
									"scores":	[-7.1848615908663]
								}, {
									"case":	197,
									"scores":	[-7.1848615908663]
								}, {
									"case":	198,
									"scores":	[-7.1848615908663]
								}, {
									"case":	199,
									"scores":	[-7.1848615908663]
								}, {
									"case":	200,
									"scores":	[-7.1848615908663]
								}, {
									"case":	201,
									"scores":	[-7.1848615908663]
								}, {
									"case":	202,
									"scores":	[-7.1848615908663]
								}, {
									"case":	203,
									"scores":	[-7.1848615908663]
								}, {
									"case":	204,
									"scores":	[-7.1848615908663]
								}, {
									"case":	205,
									"scores":	[-7.1848615908663]
								}, {
									"case":	206,
									"scores":	[-7.1848615908663]
								}, {
									"case":	207,
									"scores":	[-7.1848615908663]
								}, {
									"case":	208,
									"scores":	[-7.1848615908663]
								}, {
									"case":	209,
									"scores":	[-7.1848615908663]
								}, {
									"case":	210,
									"scores":	[-7.1848615908663]
								}, {
									"case":	211,
									"scores":	[-7.1848615908663]
								}, {
									"case":	212,
									"scores":	[-7.1848615908663]
								}, {
									"case":	213,
									"scores":	[-7.1848615908663]
								}, {
									"case":	214,
									"scores":	[-7.1848615908663]
								}, {
									"case":	215,
									"scores":	[-7.1848615908663]
								}, {
									"case":	216,
									"scores":	[-7.1848615908663]
								}, {
									"case":	217,
									"scores":	[-7.1848615908663]
								}, {
									"case":	218,
									"scores":	[-7.1848615908663]
								}, {
									"case":	219,
									"scores":	[-7.1848615908663]
								}, {
									"case":	220,
									"scores":	[-7.1848615908663]
								}, {
									"case":	221,
									"scores":	[-7.1848615908663]
								}, {
									"case":	222,
									"scores":	[-7.1848615908663]
								}, {
									"case":	223,
									"scores":	[-7.1848615908663]
								}, {
									"case":	224,
									"scores":	[-7.1848615908663]
								}, {
									"case":	225,
									"scores":	[-7.1848615908663]
								}, {
									"case":	226,
									"scores":	[-7.1848615908663]
								}, {
									"case":	227,
									"scores":	[-7.1848615908663]
								}, {
									"case":	228,
									"scores":	[-7.1848615908663]
								}, {
									"case":	229,
									"scores":	[-7.1848615908663]
								}, {
									"case":	230,
									"scores":	[-7.1848615908663]
								}, {
									"case":	231,
									"scores":	[-7.1848615908663]
								}, {
									"case":	232,
									"scores":	[-7.1848615908663]
								}, {
									"case":	233,
									"scores":	[-7.1848615908663]
								}, {
									"case":	234,
									"scores":	[-7.1848615908663]
								}, {
									"case":	235,
									"scores":	[-7.1848615908663]
								}, {
									"case":	236,
									"scores":	[-7.1848615908663]
								}, {
									"case":	237,
									"scores":	[-7.1848615908663]
								}, {
									"case":	238,
									"scores":	[-7.1848615908663]
								}, {
									"case":	239,
									"scores":	[-7.1848615908663]
								}, {
									"case":	240,
									"scores":	[-7.1848615908663]
								}, {
									"case":	241,
									"scores":	[-7.1848615908663]
								}, {
									"case":	242,
									"scores":	[-7.1848615908663]
								}, {
									"case":	243,
									"scores":	[-7.1848615908663]
								}, {
									"case":	244,
									"scores":	[-7.1848615908663]
								}, {
									"case":	245,
									"scores":	[-7.1848615908663]
								}, {
									"case":	246,
									"scores":	[-7.1848615908663]
								}, {
									"case":	247,
									"scores":	[-7.1848615908663]
								}, {
									"case":	248,
									"scores":	[-7.1848615908663]
								}, {
									"case":	249,
									"scores":	[-7.1848615908663]
								}, {
									"case":	250,
									"scores":	[-7.1848615908663]
								}, {
									"case":	251,
									"scores":	[-7.1848615908663]
								}, {
									"case":	252,
									"scores":	[-7.1848615908663]
								}, {
									"case":	253,
									"scores":	[-7.1848615908663]
								}, {
									"case":	254,
									"scores":	[-7.1848615908663]
								}, {
									"case":	255,
									"scores":	[-7.1848615908663]
								}, {
									"case":	256,
									"scores":	[-7.1848615908663]
								}, {
									"case":	257,
									"scores":	[-7.1848615908663]
								}, {
									"case":	258,
									"scores":	[-7.1848615908663]
								}, {
									"case":	259,
									"scores":	[-7.1848615908663]
								}, {
									"case":	260,
									"scores":	[-7.1848615908663]
								}, {
									"case":	261,
									"scores":	[-7.1848615908663]
								}, {
									"case":	262,
									"scores":	[-7.1848615908663]
								}, {
									"case":	263,
									"scores":	[-7.1848615908663]
								}, {
									"case":	264,
									"scores":	[-7.1848615908663]
								}, {
									"case":	265,
									"scores":	[-7.1848615908663]
								}, {
									"case":	266,
									"scores":	[-7.1848615908663]
								}, {
									"case":	267,
									"scores":	[-7.1848615908663]
								}, {
									"case":	268,
									"scores":	[-7.1848615908663]
								}, {
									"case":	269,
									"scores":	[-7.1848615908663]
								}, {
									"case":	270,
									"scores":	[-7.1848615908663]
								}, {
									"case":	271,
									"scores":	[-7.1848615908663]
								}, {
									"case":	272,
									"scores":	[-7.1848615908663]
								}, {
									"case":	273,
									"scores":	[-7.1848615908663]
								}, {
									"case":	274,
									"scores":	[-7.1848615908663]
								}, {
									"case":	275,
									"scores":	[-7.1848615908663]
								}, {
									"case":	276,
									"scores":	[-7.1848615908663]
								}, {
									"case":	277,
									"scores":	[-7.1848615908663]
								}, {
									"case":	278,
									"scores":	[-7.1848615908663]
								}, {
									"case":	279,
									"scores":	[-7.1848615908663]
								}, {
									"case":	280,
									"scores":	[-7.1848615908663]
								}, {
									"case":	281,
									"scores":	[-7.1848615908663]
								}, {
									"case":	282,
									"scores":	[-7.1848615908663]
								}, {
									"case":	283,
									"scores":	[-7.1848615908663]
								}, {
									"case":	284,
									"scores":	[-7.1848615908663]
								}, {
									"case":	285,
									"scores":	[-7.1848615908663]
								}, {
									"case":	286,
									"scores":	[-7.1848615908663]
								}, {
									"case":	287,
									"scores":	[-7.1848615908663]
								}, {
									"case":	288,
									"scores":	[-7.1848615908663]
								}, {
									"case":	289,
									"scores":	[-7.1848615908663]
								}, {
									"case":	290,
									"scores":	[-7.1848615908663]
								}, {
									"case":	291,
									"scores":	[-7.1848615908663]
								}, {
									"case":	292,
									"scores":	[-7.1848615908663]
								}, {
									"case":	293,
									"scores":	[-7.1848615908663]
								}, {
									"case":	294,
									"scores":	[-7.1848615908663]
								}, {
									"case":	295,
									"scores":	[-7.1848615908663]
								}, {
									"case":	296,
									"scores":	[-7.1848615908663]
								}, {
									"case":	297,
									"scores":	[-7.1848615908663]
								}, {
									"case":	298,
									"scores":	[-7.1848615908663]
								}, {
									"case":	299,
									"scores":	[-7.1848615908663]
								}, {
									"case":	300,
									"scores":	[-7.1848615908663]
								}, {
									"case":	301,
									"scores":	[-7.1848615908663]
								}, {
									"case":	302,
									"scores":	[-7.1848615908663]
								}, {
									"case":	303,
									"scores":	[-7.1848615908663]
								}, {
									"case":	304,
									"scores":	[-7.1848615908663]
								}, {
									"case":	305,
									"scores":	[-7.1848615908663]
								}, {
									"case":	306,
									"scores":	[-7.1848615908663]
								}, {
									"case":	307,
									"scores":	[-7.1848615908663]
								}, {
									"case":	308,
									"scores":	[-7.1848615908663]
								}, {
									"case":	309,
									"scores":	[-7.1848615908663]
								}, {
									"case":	310,
									"scores":	[-7.1848615908663]
								}, {
									"case":	311,
									"scores":	[-7.1848615908663]
								}, {
									"case":	312,
									"scores":	[-7.1848615908663]
								}, {
									"case":	313,
									"scores":	[-7.1848615908663]
								}, {
									"case":	314,
									"scores":	[-7.1848615908663]
								}, {
									"case":	315,
									"scores":	[-7.1848615908663]
								}, {
									"case":	316,
									"scores":	[-7.1848615908663]
								}, {
									"case":	317,
									"scores":	[-7.1848615908663]
								}, {
									"case":	318,
									"scores":	[-7.1848615908663]
								}, {
									"case":	319,
									"scores":	[-7.1848615908663]
								}, {
									"case":	320,
									"scores":	[-7.1848615908663]
								}, {
									"case":	321,
									"scores":	[-7.1848615908663]
								}, {
									"case":	322,
									"scores":	[-7.1848615908663]
								}, {
									"case":	323,
									"scores":	[-7.1848615908663]
								}, {
									"case":	324,
									"scores":	[-7.1848615908663]
								}, {
									"case":	325,
									"scores":	[-7.1848615908663]
								}, {
									"case":	326,
									"scores":	[-7.1848615908663]
								}, {
									"case":	327,
									"scores":	[-7.1848615908663]
								}, {
									"case":	328,
									"scores":	[-7.1848615908663]
								}, {
									"case":	329,
									"scores":	[-7.1848615908663]
								}, {
									"case":	330,
									"scores":	[-7.1848615908663]
								}, {
									"case":	331,
									"scores":	[-7.1848615908663]
								}, {
									"case":	332,
									"scores":	[-7.1848615908663]
								}, {
									"case":	333,
									"scores":	[-7.1848615908663]
								}, {
									"case":	334,
									"scores":	[-7.1848615908663]
								}, {
									"case":	335,
									"scores":	[-7.1848615908663]
								}, {
									"case":	336,
									"scores":	[-7.1848615908663]
								}, {
									"case":	337,
									"scores":	[-7.1848615908663]
								}, {
									"case":	338,
									"scores":	[-7.1848615908663]
								}, {
									"case":	339,
									"scores":	[-7.1848615908663]
								}, {
									"case":	340,
									"scores":	[-7.1848615908663]
								}, {
									"case":	341,
									"scores":	[-7.1848615908663]
								}, {
									"case":	342,
									"scores":	[-7.1848615908663]
								}, {
									"case":	343,
									"scores":	[-7.1848615908663]
								}, {
									"case":	344,
									"scores":	[-7.1848615908663]
								}, {
									"case":	345,
									"scores":	[-7.1848615908663]
								}, {
									"case":	346,
									"scores":	[-7.1848615908663]
								}, {
									"case":	347,
									"scores":	[-7.1848615908663]
								}, {
									"case":	348,
									"scores":	[-7.1848615908663]
								}, {
									"case":	349,
									"scores":	[-7.1848615908663]
								}, {
									"case":	350,
									"scores":	[-7.1848615908663]
								}, {
									"case":	351,
									"scores":	[-7.1848615908663]
								}, {
									"case":	352,
									"scores":	[-7.1848615908663]
								}, {
									"case":	353,
									"scores":	[-7.1848615908663]
								}, {
									"case":	354,
									"scores":	[-7.1848615908663]
								}, {
									"case":	355,
									"scores":	[-7.1848615908663]
								}, {
									"case":	356,
									"scores":	[-7.1848615908663]
								}, {
									"case":	357,
									"scores":	[-7.1848615908663]
								}, {
									"case":	358,
									"scores":	[-7.1848615908663]
								}, {
									"case":	359,
									"scores":	[-7.1848615908663]
								}, {
									"case":	360,
									"scores":	[-7.1848615908663]
								}, {
									"case":	361,
									"scores":	[-7.1848615908663]
								}, {
									"case":	362,
									"scores":	[-7.1848615908663]
								}, {
									"case":	363,
									"scores":	[-7.1848615908663]
								}, {
									"case":	364,
									"scores":	[-7.1848615908663]
								}, {
									"case":	365,
									"scores":	[-7.1848615908663]
								}, {
									"case":	366,
									"scores":	[-7.1848615908663]
								}, {
									"case":	367,
									"scores":	[-7.1848615908663]
								}, {
									"case":	368,
									"scores":	[-7.1848615908663]
								}, {
									"case":	369,
									"scores":	[-7.1848615908663]
								}, {
									"case":	370,
									"scores":	[-7.1848615908663]
								}, {
									"case":	371,
									"scores":	[-7.1848615908663]
								}, {
									"case":	372,
									"scores":	[-7.1848615908663]
								}, {
									"case":	373,
									"scores":	[-7.1848615908663]
								}, {
									"case":	374,
									"scores":	[-7.1848615908663]
								}, {
									"case":	375,
									"scores":	[-7.1848615908663]
								}, {
									"case":	376,
									"scores":	[-7.1848615908663]
								}, {
									"case":	377,
									"scores":	[-7.1848615908663]
								}, {
									"case":	378,
									"scores":	[-7.1848615908663]
								}, {
									"case":	379,
									"scores":	[-7.1848615908663]
								}, {
									"case":	380,
									"scores":	[-7.1848615908663]
								}, {
									"case":	381,
									"scores":	[-7.1848615908663]
								}, {
									"case":	382,
									"scores":	[-7.1848615908663]
								}, {
									"case":	383,
									"scores":	[-7.1848615908663]
								}, {
									"case":	384,
									"scores":	[-7.1848615908663]
								}, {
									"case":	385,
									"scores":	[-7.1848615908663]
								}, {
									"case":	386,
									"scores":	[-7.1848615908663]
								}, {
									"case":	387,
									"scores":	[-7.1848615908663]
								}, {
									"case":	388,
									"scores":	[-7.1848615908663]
								}, {
									"case":	389,
									"scores":	[-7.1848615908663]
								}, {
									"case":	390,
									"scores":	[-7.1848615908663]
								}, {
									"case":	391,
									"scores":	[-7.1848615908663]
								}, {
									"case":	392,
									"scores":	[-7.1848615908663]
								}, {
									"case":	393,
									"scores":	[-7.1848615908663]
								}, {
									"case":	394,
									"scores":	[-7.1848615908663]
								}, {
									"case":	395,
									"scores":	[-7.1848615908663]
								}, {
									"case":	396,
									"scores":	[-7.1848615908663]
								}, {
									"case":	397,
									"scores":	[-7.1848615908663]
								}, {
									"case":	398,
									"scores":	[-7.1848615908663]
								}, {
									"case":	399,
									"scores":	[-7.1848615908663]
								}, {
									"case":	400,
									"scores":	[-7.1848615908663]
								}, {
									"case":	401,
									"scores":	[-7.1848615908663]
								}, {
									"case":	402,
									"scores":	[-7.1848615908663]
								}, {
									"case":	403,
									"scores":	[-7.1848615908663]
								}, {
									"case":	404,
									"scores":	[-7.1848615908663]
								}, {
									"case":	405,
									"scores":	[-7.1848615908663]
								}, {
									"case":	406,
									"scores":	[-7.1848615908663]
								}, {
									"case":	407,
									"scores":	[-7.1848615908663]
								}, {
									"case":	408,
									"scores":	[-7.1848615908663]
								}, {
									"case":	409,
									"scores":	[-7.1848615908663]
								}, {
									"case":	410,
									"scores":	[-7.1848615908663]
								}, {
									"case":	411,
									"scores":	[-7.1848615908663]
								}, {
									"case":	412,
									"scores":	[-7.1848615908663]
								}, {
									"case":	413,
									"scores":	[-7.1848615908663]
								}, {
									"case":	414,
									"scores":	[-7.1848615908663]
								}, {
									"case":	415,
									"scores":	[-7.1848615908663]
								}, {
									"case":	416,
									"scores":	[-7.1848615908663]
								}, {
									"case":	417,
									"scores":	[-7.1848615908663]
								}, {
									"case":	418,
									"scores":	[-7.1848615908663]
								}, {
									"case":	419,
									"scores":	[-7.1848615908663]
								}, {
									"case":	420,
									"scores":	[-7.1848615908663]
								}, {
									"case":	421,
									"scores":	[-7.1848615908663]
								}, {
									"case":	422,
									"scores":	[-7.1848615908663]
								}, {
									"case":	423,
									"scores":	[-7.1848615908663]
								}, {
									"case":	424,
									"scores":	[-7.1848615908663]
								}, {
									"case":	425,
									"scores":	[-7.1848615908663]
								}, {
									"case":	426,
									"scores":	[-7.1848615908663]
								}, {
									"case":	427,
									"scores":	[-7.1848615908663]
								}, {
									"case":	428,
									"scores":	[-7.1848615908663]
								}, {
									"case":	429,
									"scores":	[-7.1848615908663]
								}, {
									"case":	430,
									"scores":	[-7.1848615908663]
								}, {
									"case":	431,
									"scores":	[-7.1848615908663]
								}, {
									"case":	432,
									"scores":	[-7.1848615908663]
								}, {
									"case":	433,
									"scores":	[-7.1848615908663]
								}, {
									"case":	434,
									"scores":	[-7.1848615908663]
								}, {
									"case":	435,
									"scores":	[-7.1848615908663]
								}, {
									"case":	436,
									"scores":	[-7.1848615908663]
								}, {
									"case":	437,
									"scores":	[-7.1848615908663]
								}, {
									"case":	438,
									"scores":	[-7.1848615908663]
								}, {
									"case":	439,
									"scores":	[-7.1848615908663]
								}, {
									"case":	440,
									"scores":	[-7.1848615908663]
								}, {
									"case":	441,
									"scores":	[-7.1848615908663]
								}, {
									"case":	442,
									"scores":	[-7.1848615908663]
								}, {
									"case":	443,
									"scores":	[-7.1848615908663]
								}, {
									"case":	444,
									"scores":	[-7.1848615908663]
								}, {
									"case":	445,
									"scores":	[-7.1848615908663]
								}, {
									"case":	446,
									"scores":	[-7.1848615908663]
								}, {
									"case":	447,
									"scores":	[-7.1848615908663]
								}, {
									"case":	448,
									"scores":	[-7.1848615908663]
								}, {
									"case":	449,
									"scores":	[-7.1848615908663]
								}, {
									"case":	450,
									"scores":	[-7.1848615908663]
								}, {
									"case":	451,
									"scores":	[-7.1848615908663]
								}, {
									"case":	452,
									"scores":	[-7.1848615908663]
								}, {
									"case":	453,
									"scores":	[-7.1848615908663]
								}, {
									"case":	454,
									"scores":	[-7.1848615908663]
								}, {
									"case":	455,
									"scores":	[-7.1848615908663]
								}, {
									"case":	456,
									"scores":	[-7.1848615908663]
								}, {
									"case":	457,
									"scores":	[-7.1848615908663]
								}, {
									"case":	458,
									"scores":	[-7.1848615908663]
								}, {
									"case":	459,
									"scores":	[-7.1848615908663]
								}, {
									"case":	460,
									"scores":	[-7.1848615908663]
								}, {
									"case":	461,
									"scores":	[-7.1848615908663]
								}, {
									"case":	462,
									"scores":	[-7.1848615908663]
								}, {
									"case":	463,
									"scores":	[-7.1848615908663]
								}, {
									"case":	464,
									"scores":	[-7.1848615908663]
								}, {
									"case":	465,
									"scores":	[-7.1848615908663]
								}, {
									"case":	466,
									"scores":	[-7.1848615908663]
								}, {
									"case":	467,
									"scores":	[-7.1848615908663]
								}, {
									"case":	468,
									"scores":	[-7.1848615908663]
								}, {
									"case":	469,
									"scores":	[-7.1848615908663]
								}, {
									"case":	470,
									"scores":	[-7.1848615908663]
								}, {
									"case":	471,
									"scores":	[-7.1848615908663]
								}, {
									"case":	472,
									"scores":	[-7.1848615908663]
								}, {
									"case":	473,
									"scores":	[-7.1848615908663]
								}, {
									"case":	474,
									"scores":	[-7.1848615908663]
								}, {
									"case":	475,
									"scores":	[-7.1848615908663]
								}, {
									"case":	476,
									"scores":	[-7.1848615908663]
								}, {
									"case":	477,
									"scores":	[-7.1848615908663]
								}, {
									"case":	478,
									"scores":	[-7.1848615908663]
								}, {
									"case":	479,
									"scores":	[-7.1848615908663]
								}, {
									"case":	480,
									"scores":	[-7.1848615908663]
								}, {
									"case":	481,
									"scores":	[-7.1848615908663]
								}, {
									"case":	482,
									"scores":	[-7.1848615908663]
								}, {
									"case":	483,
									"scores":	[-7.1848615908663]
								}, {
									"case":	484,
									"scores":	[-7.1848615908663]
								}, {
									"case":	485,
									"scores":	[-7.1848615908663]
								}, {
									"case":	486,
									"scores":	[-7.1848615908663]
								}, {
									"case":	487,
									"scores":	[-7.1848615908663]
								}, {
									"case":	488,
									"scores":	[-7.1848615908663]
								}, {
									"case":	489,
									"scores":	[-7.1848615908663]
								}, {
									"case":	490,
									"scores":	[-7.1848615908663]
								}, {
									"case":	491,
									"scores":	[-7.1848615908663]
								}, {
									"case":	492,
									"scores":	[-7.1848615908663]
								}, {
									"case":	493,
									"scores":	[-7.1848615908663]
								}, {
									"case":	494,
									"scores":	[-7.1848615908663]
								}, {
									"case":	495,
									"scores":	[-7.1848615908663]
								}, {
									"case":	496,
									"scores":	[-7.1848615908663]
								}, {
									"case":	497,
									"scores":	[-7.1848615908663]
								}, {
									"case":	498,
									"scores":	[-7.1848615908663]
								}, {
									"case":	499,
									"scores":	[-7.1848615908663]
								}, {
									"case":	500,
									"scores":	[-7.1848615908663]
								}, {
									"case":	501,
									"scores":	[-7.1848615908663]
								}, {
									"case":	502,
									"scores":	[-7.1848615908663]
								}, {
									"case":	503,
									"scores":	[-7.1848615908663]
								}, {
									"case":	504,
									"scores":	[-7.1848615908663]
								}, {
									"case":	505,
									"scores":	[-7.1848615908663]
								}, {
									"case":	506,
									"scores":	[-7.1848615908663]
								}, {
									"case":	507,
									"scores":	[-7.1848615908663]
								}, {
									"case":	508,
									"scores":	[-7.1848615908663]
								}, {
									"case":	509,
									"scores":	[-7.1848615908663]
								}, {
									"case":	510,
									"scores":	[-7.1848615908663]
								}, {
									"case":	511,
									"scores":	[-7.1848615908663]
								}, {
									"case":	512,
									"scores":	[-7.1848615908663]
								}, {
									"case":	513,
									"scores":	[-7.1848615908663]
								}, {
									"case":	514,
									"scores":	[-7.1848615908663]
								}, {
									"case":	515,
									"scores":	[-7.1848615908663]
								}, {
									"case":	516,
									"scores":	[-7.1848615908663]
								}, {
									"case":	517,
									"scores":	[-7.1848615908663]
								}, {
									"case":	518,
									"scores":	[-7.1848615908663]
								}, {
									"case":	519,
									"scores":	[-7.1848615908663]
								}, {
									"case":	520,
									"scores":	[-7.1848615908663]
								}, {
									"case":	521,
									"scores":	[-7.1848615908663]
								}, {
									"case":	522,
									"scores":	[-7.1848615908663]
								}, {
									"case":	523,
									"scores":	[-7.1848615908663]
								}, {
									"case":	524,
									"scores":	[-7.1848615908663]
								}, {
									"case":	525,
									"scores":	[-7.1848615908663]
								}, {
									"case":	526,
									"scores":	[-7.1848615908663]
								}, {
									"case":	527,
									"scores":	[-7.1848615908663]
								}, {
									"case":	528,
									"scores":	[-7.1848615908663]
								}, {
									"case":	529,
									"scores":	[-7.1848615908663]
								}, {
									"case":	530,
									"scores":	[-7.1848615908663]
								}, {
									"case":	531,
									"scores":	[-7.1848615908663]
								}, {
									"case":	532,
									"scores":	[-7.1848615908663]
								}, {
									"case":	533,
									"scores":	[-7.1848615908663]
								}, {
									"case":	534,
									"scores":	[-7.1848615908663]
								}, {
									"case":	535,
									"scores":	[-7.1848615908663]
								}, {
									"case":	536,
									"scores":	[-7.1848615908663]
								}, {
									"case":	537,
									"scores":	[-7.1848615908663]
								}, {
									"case":	538,
									"scores":	[-7.1848615908663]
								}, {
									"case":	539,
									"scores":	[-7.1848615908663]
								}, {
									"case":	540,
									"scores":	[-7.1848615908663]
								}, {
									"case":	541,
									"scores":	[-7.1848615908663]
								}, {
									"case":	542,
									"scores":	[-7.1848615908663]
								}, {
									"case":	543,
									"scores":	[-7.1848615908663]
								}, {
									"case":	544,
									"scores":	[-7.1848615908663]
								}, {
									"case":	545,
									"scores":	[-7.1848615908663]
								}, {
									"case":	546,
									"scores":	[-7.1848615908663]
								}, {
									"case":	547,
									"scores":	[-7.1848615908663]
								}, {
									"case":	548,
									"scores":	[-7.1848615908663]
								}, {
									"case":	549,
									"scores":	[-7.1848615908663]
								}, {
									"case":	550,
									"scores":	[-7.1848615908663]
								}, {
									"case":	551,
									"scores":	[-7.1848615908663]
								}, {
									"case":	552,
									"scores":	[-7.1848615908663]
								}, {
									"case":	553,
									"scores":	[-7.1848615908663]
								}, {
									"case":	554,
									"scores":	[-7.1848615908663]
								}, {
									"case":	555,
									"scores":	[-7.1848615908663]
								}, {
									"case":	556,
									"scores":	[-7.1848615908663]
								}, {
									"case":	557,
									"scores":	[-7.1848615908663]
								}, {
									"case":	558,
									"scores":	[-7.1848615908663]
								}, {
									"case":	559,
									"scores":	[-7.1848615908663]
								}, {
									"case":	560,
									"scores":	[-7.1848615908663]
								}, {
									"case":	561,
									"scores":	[-7.1848615908663]
								}, {
									"case":	562,
									"scores":	[-7.1848615908663]
								}, {
									"case":	563,
									"scores":	[-7.1848615908663]
								}, {
									"case":	564,
									"scores":	[-7.1848615908663]
								}, {
									"case":	565,
									"scores":	[-7.1848615908663]
								}, {
									"case":	566,
									"scores":	[-7.1848615908663]
								}, {
									"case":	567,
									"scores":	[-7.1848615908663]
								}, {
									"case":	568,
									"scores":	[-7.1848615908663]
								}, {
									"case":	569,
									"scores":	[-7.1848615908663]
								}, {
									"case":	570,
									"scores":	[-7.1848615908663]
								}, {
									"case":	571,
									"scores":	[-7.1848615908663]
								}, {
									"case":	572,
									"scores":	[-7.1848615908663]
								}, {
									"case":	573,
									"scores":	[-7.1848615908663]
								}, {
									"case":	574,
									"scores":	[-7.1848615908663]
								}, {
									"case":	575,
									"scores":	[-7.1848615908663]
								}, {
									"case":	576,
									"scores":	[-7.1848615908663]
								}, {
									"case":	577,
									"scores":	[-7.1848615908663]
								}, {
									"case":	578,
									"scores":	[-7.1848615908663]
								}, {
									"case":	579,
									"scores":	[-7.1848615908663]
								}, {
									"case":	580,
									"scores":	[-7.1848615908663]
								}, {
									"case":	581,
									"scores":	[-7.1848615908663]
								}, {
									"case":	582,
									"scores":	[-7.1848615908663]
								}, {
									"case":	583,
									"scores":	[-7.1848615908663]
								}, {
									"case":	584,
									"scores":	[-7.1848615908663]
								}, {
									"case":	585,
									"scores":	[-7.1848615908663]
								}, {
									"case":	586,
									"scores":	[-7.1848615908663]
								}, {
									"case":	587,
									"scores":	[-7.1848615908663]
								}, {
									"case":	588,
									"scores":	[-7.1848615908663]
								}, {
									"case":	589,
									"scores":	[-7.1848615908663]
								}, {
									"case":	590,
									"scores":	[-7.1848615908663]
								}, {
									"case":	591,
									"scores":	[-7.1848615908663]
								}, {
									"case":	592,
									"scores":	[-7.1848615908663]
								}, {
									"case":	593,
									"scores":	[-7.1848615908663]
								}, {
									"case":	594,
									"scores":	[-7.1848615908663]
								}, {
									"case":	595,
									"scores":	[-7.1848615908663]
								}, {
									"case":	596,
									"scores":	[-7.1848615908663]
								}, {
									"case":	597,
									"scores":	[-7.1848615908663]
								}, {
									"case":	598,
									"scores":	[-7.1848615908663]
								}, {
									"case":	599,
									"scores":	[-7.1848615908663]
								}, {
									"case":	600,
									"scores":	[-7.1848615908663]
								}, {
									"case":	601,
									"scores":	[-7.1848615908663]
								}, {
									"case":	602,
									"scores":	[-7.1848615908663]
								}, {
									"case":	603,
									"scores":	[-7.1848615908663]
								}, {
									"case":	604,
									"scores":	[-7.1848615908663]
								}, {
									"case":	605,
									"scores":	[-7.1848615908663]
								}, {
									"case":	606,
									"scores":	[-7.1848615908663]
								}, {
									"case":	607,
									"scores":	[-7.1848615908663]
								}, {
									"case":	608,
									"scores":	[-7.1848615908663]
								}, {
									"case":	609,
									"scores":	[-7.1848615908663]
								}, {
									"case":	610,
									"scores":	[-7.1848615908663]
								}, {
									"case":	611,
									"scores":	[-7.1848615908663]
								}, {
									"case":	612,
									"scores":	[-7.1848615908663]
								}, {
									"case":	613,
									"scores":	[-7.1848615908663]
								}, {
									"case":	614,
									"scores":	[-7.1848615908663]
								}, {
									"case":	615,
									"scores":	[-7.1848615908663]
								}, {
									"case":	616,
									"scores":	[-7.1848615908663]
								}, {
									"case":	617,
									"scores":	[-7.1848615908663]
								}, {
									"case":	618,
									"scores":	[-7.1848615908663]
								}, {
									"case":	619,
									"scores":	[-7.1848615908663]
								}, {
									"case":	620,
									"scores":	[-7.1848615908663]
								}, {
									"case":	621,
									"scores":	[-7.1848615908663]
								}, {
									"case":	622,
									"scores":	[-7.1848615908663]
								}, {
									"case":	623,
									"scores":	[-7.1848615908663]
								}, {
									"case":	624,
									"scores":	[-7.1848615908663]
								}, {
									"case":	625,
									"scores":	[-7.1848615908663]
								}, {
									"case":	626,
									"scores":	[-7.1848615908663]
								}, {
									"case":	627,
									"scores":	[-7.1848615908663]
								}, {
									"case":	628,
									"scores":	[-7.1848615908663]
								}, {
									"case":	629,
									"scores":	[-7.1848615908663]
								}, {
									"case":	630,
									"scores":	[-7.1848615908663]
								}, {
									"case":	631,
									"scores":	[-7.1848615908663]
								}, {
									"case":	632,
									"scores":	[-7.1848615908663]
								}, {
									"case":	633,
									"scores":	[-7.1848615908663]
								}, {
									"case":	634,
									"scores":	[-7.1848615908663]
								}, {
									"case":	635,
									"scores":	[-7.1848615908663]
								}, {
									"case":	636,
									"scores":	[-7.1848615908663]
								}, {
									"case":	637,
									"scores":	[-7.1848615908663]
								}, {
									"case":	638,
									"scores":	[-7.1848615908663]
								}, {
									"case":	639,
									"scores":	[-7.1848615908663]
								}, {
									"case":	640,
									"scores":	[-7.1848615908663]
								}, {
									"case":	641,
									"scores":	[-7.1848615908663]
								}, {
									"case":	642,
									"scores":	[-7.1848615908663]
								}, {
									"case":	643,
									"scores":	[-7.1848615908663]
								}, {
									"case":	644,
									"scores":	[-7.1848615908663]
								}, {
									"case":	645,
									"scores":	[-7.1848615908663]
								}, {
									"case":	646,
									"scores":	[-7.1848615908663]
								}, {
									"case":	647,
									"scores":	[-7.1848615908663]
								}, {
									"case":	648,
									"scores":	[-7.1848615908663]
								}, {
									"case":	649,
									"scores":	[-7.1848615908663]
								}, {
									"case":	650,
									"scores":	[-7.1848615908663]
								}, {
									"case":	651,
									"scores":	[-7.1848615908663]
								}, {
									"case":	652,
									"scores":	[-7.1848615908663]
								}, {
									"case":	653,
									"scores":	[-7.1848615908663]
								}, {
									"case":	654,
									"scores":	[-7.1848615908663]
								}, {
									"case":	655,
									"scores":	[-7.1848615908663]
								}, {
									"case":	656,
									"scores":	[-7.1848615908663]
								}, {
									"case":	657,
									"scores":	[-7.1848615908663]
								}, {
									"case":	658,
									"scores":	[-7.1848615908663]
								}, {
									"case":	659,
									"scores":	[-7.1848615908663]
								}, {
									"case":	660,
									"scores":	[-7.1848615908663]
								}, {
									"case":	661,
									"scores":	[-7.1848615908663]
								}, {
									"case":	662,
									"scores":	[-7.1848615908663]
								}, {
									"case":	663,
									"scores":	[-7.1848615908663]
								}, {
									"case":	664,
									"scores":	[-7.1848615908663]
								}, {
									"case":	665,
									"scores":	[-7.1848615908663]
								}, {
									"case":	666,
									"scores":	[-7.1848615908663]
								}, {
									"case":	667,
									"scores":	[-7.1848615908663]
								}, {
									"case":	668,
									"scores":	[-7.1848615908663]
								}, {
									"case":	669,
									"scores":	[-7.1848615908663]
								}, {
									"case":	670,
									"scores":	[-7.1848615908663]
								}, {
									"case":	671,
									"scores":	[-7.1848615908663]
								}, {
									"case":	672,
									"scores":	[-7.1848615908663]
								}, {
									"case":	673,
									"scores":	[-7.1848615908663]
								}, {
									"case":	674,
									"scores":	[-7.1848615908663]
								}, {
									"case":	675,
									"scores":	[-7.1848615908663]
								}, {
									"case":	676,
									"scores":	[-7.1848615908663]
								}, {
									"case":	677,
									"scores":	[-7.1848615908663]
								}, {
									"case":	678,
									"scores":	[-7.1848615908663]
								}, {
									"case":	679,
									"scores":	[-7.1848615908663]
								}, {
									"case":	680,
									"scores":	[-7.1848615908663]
								}, {
									"case":	681,
									"scores":	[-7.1848615908663]
								}, {
									"case":	682,
									"scores":	[-7.1848615908663]
								}, {
									"case":	683,
									"scores":	[-7.1848615908663]
								}, {
									"case":	684,
									"scores":	[-7.1848615908663]
								}, {
									"case":	685,
									"scores":	[-7.1848615908663]
								}, {
									"case":	686,
									"scores":	[-7.1848615908663]
								}, {
									"case":	687,
									"scores":	[-7.1848615908663]
								}, {
									"case":	688,
									"scores":	[-7.1848615908663]
								}, {
									"case":	689,
									"scores":	[-7.1848615908663]
								}, {
									"case":	690,
									"scores":	[-7.1848615908663]
								}, {
									"case":	691,
									"scores":	[-7.1848615908663]
								}, {
									"case":	692,
									"scores":	[-7.1848615908663]
								}, {
									"case":	693,
									"scores":	[-7.1848615908663]
								}, {
									"case":	694,
									"scores":	[-7.1848615908663]
								}, {
									"case":	695,
									"scores":	[-7.1848615908663]
								}, {
									"case":	696,
									"scores":	[-7.1848615908663]
								}, {
									"case":	697,
									"scores":	[-7.1848615908663]
								}, {
									"case":	698,
									"scores":	[-7.1848615908663]
								}, {
									"case":	699,
									"scores":	[-7.1848615908663]
								}, {
									"case":	700,
									"scores":	[-7.1848615908663]
								}, {
									"case":	701,
									"scores":	[-7.1848615908663]
								}, {
									"case":	702,
									"scores":	[-7.1848615908663]
								}, {
									"case":	703,
									"scores":	[-7.1848615908663]
								}, {
									"case":	704,
									"scores":	[-7.1848615908663]
								}, {
									"case":	705,
									"scores":	[-7.1848615908663]
								}, {
									"case":	706,
									"scores":	[-7.1848615908663]
								}, {
									"case":	707,
									"scores":	[-7.1848615908663]
								}, {
									"case":	708,
									"scores":	[-7.1848615908663]
								}, {
									"case":	709,
									"scores":	[-7.1848615908663]
								}, {
									"case":	710,
									"scores":	[-7.1848615908663]
								}, {
									"case":	711,
									"scores":	[-7.1848615908663]
								}, {
									"case":	712,
									"scores":	[-7.1848615908663]
								}, {
									"case":	713,
									"scores":	[-7.1848615908663]
								}, {
									"case":	714,
									"scores":	[-7.1848615908663]
								}, {
									"case":	715,
									"scores":	[-7.1848615908663]
								}, {
									"case":	716,
									"scores":	[-7.1848615908663]
								}, {
									"case":	717,
									"scores":	[-7.1848615908663]
								}, {
									"case":	718,
									"scores":	[-7.1848615908663]
								}, {
									"case":	719,
									"scores":	[-7.1848615908663]
								}, {
									"case":	720,
									"scores":	[-7.1848615908663]
								}, {
									"case":	721,
									"scores":	[-7.1848615908663]
								}, {
									"case":	722,
									"scores":	[-7.1848615908663]
								}, {
									"case":	723,
									"scores":	[-7.1848615908663]
								}, {
									"case":	724,
									"scores":	[-7.1848615908663]
								}, {
									"case":	725,
									"scores":	[-7.1848615908663]
								}, {
									"case":	726,
									"scores":	[-7.1848615908663]
								}, {
									"case":	727,
									"scores":	[-7.1848615908663]
								}, {
									"case":	728,
									"scores":	[-7.1848615908663]
								}, {
									"case":	729,
									"scores":	[-7.1848615908663]
								}, {
									"case":	730,
									"scores":	[-7.1848615908663]
								}, {
									"case":	731,
									"scores":	[-7.1848615908663]
								}, {
									"case":	732,
									"scores":	[-7.1848615908663]
								}, {
									"case":	733,
									"scores":	[-7.1848615908663]
								}, {
									"case":	734,
									"scores":	[-7.1848615908663]
								}, {
									"case":	735,
									"scores":	[-7.1848615908663]
								}, {
									"case":	736,
									"scores":	[-7.1848615908663]
								}, {
									"case":	737,
									"scores":	[-7.1848615908663]
								}, {
									"case":	738,
									"scores":	[-7.1848615908663]
								}, {
									"case":	739,
									"scores":	[-7.1848615908663]
								}, {
									"case":	740,
									"scores":	[-7.1848615908663]
								}, {
									"case":	741,
									"scores":	[-7.1848615908663]
								}, {
									"case":	742,
									"scores":	[-7.1848615908663]
								}, {
									"case":	743,
									"scores":	[-7.1848615908663]
								}, {
									"case":	744,
									"scores":	[-7.1848615908663]
								}, {
									"case":	745,
									"scores":	[-7.1848615908663]
								}, {
									"case":	746,
									"scores":	[-7.1848615908663]
								}, {
									"case":	747,
									"scores":	[-7.1848615908663]
								}, {
									"case":	748,
									"scores":	[-7.1848615908663]
								}, {
									"case":	749,
									"scores":	[-7.1848615908663]
								}, {
									"case":	750,
									"scores":	[-7.1848615908663]
								}, {
									"case":	751,
									"scores":	[-7.1848615908663]
								}, {
									"case":	752,
									"scores":	[-7.1848615908663]
								}, {
									"case":	753,
									"scores":	[-7.1848615908663]
								}, {
									"case":	754,
									"scores":	[-7.1848615908663]
								}, {
									"case":	755,
									"scores":	[-7.1848615908663]
								}, {
									"case":	756,
									"scores":	[-7.1848615908663]
								}, {
									"case":	757,
									"scores":	[-7.1848615908663]
								}, {
									"case":	758,
									"scores":	[-7.1848615908663]
								}, {
									"case":	759,
									"scores":	[-7.1848615908663]
								}, {
									"case":	760,
									"scores":	[-7.1848615908663]
								}, {
									"case":	761,
									"scores":	[-7.1848615908663]
								}, {
									"case":	762,
									"scores":	[-7.1848615908663]
								}, {
									"case":	763,
									"scores":	[-7.1848615908663]
								}, {
									"case":	764,
									"scores":	[-7.1848615908663]
								}, {
									"case":	765,
									"scores":	[-7.1848615908663]
								}, {
									"case":	766,
									"scores":	[-7.1848615908663]
								}, {
									"case":	767,
									"scores":	[-7.1848615908663]
								}, {
									"case":	768,
									"scores":	[-7.1848615908663]
								}, {
									"case":	769,
									"scores":	[-7.1848615908663]
								}, {
									"case":	770,
									"scores":	[-7.1848615908663]
								}, {
									"case":	771,
									"scores":	[-7.1848615908663]
								}, {
									"case":	772,
									"scores":	[-7.1848615908663]
								}, {
									"case":	773,
									"scores":	[-7.1848615908663]
								}, {
									"case":	774,
									"scores":	[-7.1848615908663]
								}, {
									"case":	775,
									"scores":	[-7.1848615908663]
								}, {
									"case":	776,
									"scores":	[-7.1848615908663]
								}, {
									"case":	777,
									"scores":	[-7.1848615908663]
								}, {
									"case":	778,
									"scores":	[-7.1848615908663]
								}, {
									"case":	779,
									"scores":	[-7.1848615908663]
								}, {
									"case":	780,
									"scores":	[-7.1848615908663]
								}, {
									"case":	781,
									"scores":	[-7.1848615908663]
								}, {
									"case":	782,
									"scores":	[-7.1848615908663]
								}, {
									"case":	783,
									"scores":	[-7.1848615908663]
								}, {
									"case":	784,
									"scores":	[-7.1848615908663]
								}, {
									"case":	785,
									"scores":	[-7.1848615908663]
								}, {
									"case":	786,
									"scores":	[-7.1848615908663]
								}, {
									"case":	787,
									"scores":	[-7.1848615908663]
								}, {
									"case":	788,
									"scores":	[-7.1848615908663]
								}, {
									"case":	789,
									"scores":	[-7.1848615908663]
								}, {
									"case":	790,
									"scores":	[-7.1848615908663]
								}, {
									"case":	791,
									"scores":	[-7.1848615908663]
								}, {
									"case":	792,
									"scores":	[-7.1848615908663]
								}, {
									"case":	793,
									"scores":	[-7.1848615908663]
								}, {
									"case":	794,
									"scores":	[-7.1848615908663]
								}, {
									"case":	795,
									"scores":	[-7.1848615908663]
								}, {
									"case":	796,
									"scores":	[-7.1848615908663]
								}, {
									"case":	797,
									"scores":	[-7.1848615908663]
								}, {
									"case":	798,
									"scores":	[-7.1848615908663]
								}, {
									"case":	799,
									"scores":	[-7.1848615908663]
								}, {
									"case":	800,
									"scores":	[-7.1848615908663]
								}, {
									"case":	801,
									"scores":	[-7.1848615908663]
								}, {
									"case":	802,
									"scores":	[-7.1848615908663]
								}, {
									"case":	803,
									"scores":	[-7.1848615908663]
								}, {
									"case":	804,
									"scores":	[-7.1848615908663]
								}, {
									"case":	805,
									"scores":	[-7.1848615908663]
								}, {
									"case":	806,
									"scores":	[-7.1848615908663]
								}, {
									"case":	807,
									"scores":	[-7.1848615908663]
								}, {
									"case":	808,
									"scores":	[-7.1848615908663]
								}, {
									"case":	809,
									"scores":	[-7.1848615908663]
								}, {
									"case":	810,
									"scores":	[-7.1848615908663]
								}, {
									"case":	811,
									"scores":	[-7.1848615908663]
								}, {
									"case":	812,
									"scores":	[-7.1848615908663]
								}, {
									"case":	813,
									"scores":	[-7.1848615908663]
								}, {
									"case":	814,
									"scores":	[-7.1848615908663]
								}, {
									"case":	815,
									"scores":	[-7.1848615908663]
								}, {
									"case":	816,
									"scores":	[-7.1848615908663]
								}, {
									"case":	817,
									"scores":	[-7.1848615908663]
								}, {
									"case":	818,
									"scores":	[-7.1848615908663]
								}, {
									"case":	819,
									"scores":	[-7.1848615908663]
								}, {
									"case":	820,
									"scores":	[-7.1848615908663]
								}, {
									"case":	821,
									"scores":	[-7.1848615908663]
								}, {
									"case":	822,
									"scores":	[-7.1848615908663]
								}, {
									"case":	823,
									"scores":	[-7.1848615908663]
								}, {
									"case":	824,
									"scores":	[-7.1848615908663]
								}, {
									"case":	825,
									"scores":	[-7.1848615908663]
								}, {
									"case":	826,
									"scores":	[-7.1848615908663]
								}, {
									"case":	827,
									"scores":	[-7.1848615908663]
								}, {
									"case":	828,
									"scores":	[-7.1848615908663]
								}, {
									"case":	829,
									"scores":	[-7.1848615908663]
								}, {
									"case":	830,
									"scores":	[-7.1848615908663]
								}, {
									"case":	831,
									"scores":	[-7.1848615908663]
								}, {
									"case":	832,
									"scores":	[-7.1848615908663]
								}, {
									"case":	833,
									"scores":	[-7.1848615908663]
								}, {
									"case":	834,
									"scores":	[-7.1848615908663]
								}, {
									"case":	835,
									"scores":	[-7.1848615908663]
								}, {
									"case":	836,
									"scores":	[-7.1848615908663]
								}, {
									"case":	837,
									"scores":	[-7.1848615908663]
								}, {
									"case":	838,
									"scores":	[-7.1848615908663]
								}, {
									"case":	839,
									"scores":	[-7.1848615908663]
								}, {
									"case":	840,
									"scores":	[-7.1848615908663]
								}, {
									"case":	841,
									"scores":	[-7.1848615908663]
								}, {
									"case":	842,
									"scores":	[-7.1848615908663]
								}, {
									"case":	843,
									"scores":	[-7.1848615908663]
								}, {
									"case":	844,
									"scores":	[-7.1848615908663]
								}, {
									"case":	845,
									"scores":	[-7.1848615908663]
								}, {
									"case":	846,
									"scores":	[-7.1848615908663]
								}, {
									"case":	847,
									"scores":	[-7.1848615908663]
								}, {
									"case":	848,
									"scores":	[-7.1848615908663]
								}, {
									"case":	849,
									"scores":	[-7.1848615908663]
								}, {
									"case":	850,
									"scores":	[-7.1848615908663]
								}, {
									"case":	851,
									"scores":	[-7.1848615908663]
								}, {
									"case":	852,
									"scores":	[-7.1848615908663]
								}, {
									"case":	853,
									"scores":	[-7.1848615908663]
								}, {
									"case":	854,
									"scores":	[-7.1848615908663]
								}, {
									"case":	855,
									"scores":	[-7.1848615908663]
								}, {
									"case":	856,
									"scores":	[-7.1848615908663]
								}, {
									"case":	857,
									"scores":	[-7.1848615908663]
								}, {
									"case":	858,
									"scores":	[-7.1848615908663]
								}, {
									"case":	859,
									"scores":	[-7.1848615908663]
								}, {
									"case":	860,
									"scores":	[-7.1848615908663]
								}, {
									"case":	861,
									"scores":	[-7.1848615908663]
								}, {
									"case":	862,
									"scores":	[-7.1848615908663]
								}, {
									"case":	863,
									"scores":	[-7.1848615908663]
								}, {
									"case":	864,
									"scores":	[-7.1848615908663]
								}, {
									"case":	865,
									"scores":	[-7.1848615908663]
								}, {
									"case":	866,
									"scores":	[-7.1848615908663]
								}, {
									"case":	867,
									"scores":	[-7.1848615908663]
								}, {
									"case":	868,
									"scores":	[-7.1848615908663]
								}, {
									"case":	869,
									"scores":	[-7.1848615908663]
								}, {
									"case":	870,
									"scores":	[-7.1848615908663]
								}, {
									"case":	871,
									"scores":	[-7.1848615908663]
								}, {
									"case":	872,
									"scores":	[-7.1848615908663]
								}, {
									"case":	873,
									"scores":	[-7.1848615908663]
								}, {
									"case":	874,
									"scores":	[-7.1848615908663]
								}, {
									"case":	875,
									"scores":	[-7.1848615908663]
								}, {
									"case":	876,
									"scores":	[-7.1848615908663]
								}, {
									"case":	877,
									"scores":	[-7.1848615908663]
								}, {
									"case":	878,
									"scores":	[-7.1848615908663]
								}, {
									"case":	879,
									"scores":	[-7.1848615908663]
								}, {
									"case":	880,
									"scores":	[-7.1848615908663]
								}, {
									"case":	881,
									"scores":	[-7.1848615908663]
								}, {
									"case":	882,
									"scores":	[-7.1848615908663]
								}, {
									"case":	883,
									"scores":	[-7.1848615908663]
								}, {
									"case":	884,
									"scores":	[-7.1848615908663]
								}, {
									"case":	885,
									"scores":	[-7.1848615908663]
								}, {
									"case":	886,
									"scores":	[-7.1848615908663]
								}, {
									"case":	887,
									"scores":	[-7.1848615908663]
								}, {
									"case":	888,
									"scores":	[-7.1848615908663]
								}, {
									"case":	889,
									"scores":	[-7.1848615908663]
								}, {
									"case":	890,
									"scores":	[-7.1848615908663]
								}, {
									"case":	891,
									"scores":	[-7.1848615908663]
								}, {
									"case":	892,
									"scores":	[-7.1848615908663]
								}, {
									"case":	893,
									"scores":	[-7.1848615908663]
								}, {
									"case":	894,
									"scores":	[-7.1848615908663]
								}, {
									"case":	895,
									"scores":	[-7.1848615908663]
								}, {
									"case":	896,
									"scores":	[-7.1848615908663]
								}, {
									"case":	897,
									"scores":	[-7.1848615908663]
								}, {
									"case":	898,
									"scores":	[-7.1848615908663]
								}, {
									"case":	899,
									"scores":	[-7.1848615908663]
								}, {
									"case":	900,
									"scores":	[-7.1848615908663]
								}, {
									"case":	901,
									"scores":	[-7.1848615908663]
								}, {
									"case":	902,
									"scores":	[-7.1848615908663]
								}, {
									"case":	903,
									"scores":	[-7.1848615908663]
								}, {
									"case":	904,
									"scores":	[-7.1848615908663]
								}, {
									"case":	905,
									"scores":	[-7.1848615908663]
								}, {
									"case":	906,
									"scores":	[-7.1848615908663]
								}, {
									"case":	907,
									"scores":	[-7.1848615908663]
								}, {
									"case":	908,
									"scores":	[-7.1848615908663]
								}, {
									"case":	909,
									"scores":	[-7.1848615908663]
								}, {
									"case":	910,
									"scores":	[-7.1848615908663]
								}, {
									"case":	911,
									"scores":	[-7.1848615908663]
								}, {
									"case":	912,
									"scores":	[-7.1848615908663]
								}, {
									"case":	913,
									"scores":	[-7.1848615908663]
								}, {
									"case":	914,
									"scores":	[-7.1848615908663]
								}, {
									"case":	915,
									"scores":	[-7.1848615908663]
								}, {
									"case":	916,
									"scores":	[-7.1848615908663]
								}, {
									"case":	917,
									"scores":	[-7.1848615908663]
								}, {
									"case":	918,
									"scores":	[-7.1848615908663]
								}, {
									"case":	919,
									"scores":	[-7.1848615908663]
								}, {
									"case":	920,
									"scores":	[-7.1848615908663]
								}, {
									"case":	921,
									"scores":	[-7.1848615908663]
								}, {
									"case":	922,
									"scores":	[-7.1848615908663]
								}, {
									"case":	923,
									"scores":	[-7.1848615908663]
								}, {
									"case":	924,
									"scores":	[-7.1848615908663]
								}, {
									"case":	925,
									"scores":	[-7.1848615908663]
								}, {
									"case":	926,
									"scores":	[-7.1848615908663]
								}, {
									"case":	927,
									"scores":	[-7.1848615908663]
								}, {
									"case":	928,
									"scores":	[-7.1848615908663]
								}, {
									"case":	929,
									"scores":	[-7.1848615908663]
								}, {
									"case":	930,
									"scores":	[-7.1848615908663]
								}, {
									"case":	931,
									"scores":	[-7.1848615908663]
								}, {
									"case":	932,
									"scores":	[-7.1848615908663]
								}, {
									"case":	933,
									"scores":	[-7.1848615908663]
								}, {
									"case":	934,
									"scores":	[-7.1848615908663]
								}, {
									"case":	935,
									"scores":	[-7.1848615908663]
								}, {
									"case":	936,
									"scores":	[-7.1848615908663]
								}, {
									"case":	937,
									"scores":	[-7.1848615908663]
								}, {
									"case":	938,
									"scores":	[-7.1848615908663]
								}, {
									"case":	939,
									"scores":	[-7.1848615908663]
								}, {
									"case":	940,
									"scores":	[-7.1848615908663]
								}, {
									"case":	941,
									"scores":	[-7.1848615908663]
								}, {
									"case":	942,
									"scores":	[-7.1848615908663]
								}, {
									"case":	943,
									"scores":	[-7.1848615908663]
								}, {
									"case":	944,
									"scores":	[-7.1848615908663]
								}, {
									"case":	945,
									"scores":	[-7.1848615908663]
								}, {
									"case":	946,
									"scores":	[-7.1848615908663]
								}, {
									"case":	947,
									"scores":	[-7.1848615908663]
								}, {
									"case":	948,
									"scores":	[-7.1848615908663]
								}, {
									"case":	949,
									"scores":	[-7.1848615908663]
								}, {
									"case":	950,
									"scores":	[-7.1848615908663]
								}, {
									"case":	951,
									"scores":	[-7.1848615908663]
								}, {
									"case":	952,
									"scores":	[-7.1848615908663]
								}, {
									"case":	953,
									"scores":	[-7.1848615908663]
								}, {
									"case":	954,
									"scores":	[-7.1848615908663]
								}, {
									"case":	955,
									"scores":	[-7.1848615908663]
								}, {
									"case":	956,
									"scores":	[-7.1848615908663]
								}, {
									"case":	957,
									"scores":	[-7.1848615908663]
								}, {
									"case":	958,
									"scores":	[-7.1848615908663]
								}, {
									"case":	959,
									"scores":	[-7.1848615908663]
								}, {
									"case":	960,
									"scores":	[-7.1848615908663]
								}, {
									"case":	961,
									"scores":	[-7.1848615908663]
								}, {
									"case":	962,
									"scores":	[-7.1848615908663]
								}, {
									"case":	963,
									"scores":	[-7.1848615908663]
								}, {
									"case":	964,
									"scores":	[-7.1848615908663]
								}, {
									"case":	965,
									"scores":	[-7.1848615908663]
								}, {
									"case":	966,
									"scores":	[-7.1848615908663]
								}, {
									"case":	967,
									"scores":	[-7.1848615908663]
								}, {
									"case":	968,
									"scores":	[-7.1848615908663]
								}, {
									"case":	969,
									"scores":	[-7.1848615908663]
								}, {
									"case":	970,
									"scores":	[-7.1848615908663]
								}, {
									"case":	971,
									"scores":	[-7.1848615908663]
								}, {
									"case":	972,
									"scores":	[-7.1848615908663]
								}, {
									"case":	973,
									"scores":	[-7.1848615908663]
								}, {
									"case":	974,
									"scores":	[-7.1848615908663]
								}, {
									"case":	975,
									"scores":	[-7.1848615908663]
								}, {
									"case":	976,
									"scores":	[-7.1848615908663]
								}, {
									"case":	977,
									"scores":	[-7.1848615908663]
								}, {
									"case":	978,
									"scores":	[-7.1848615908663]
								}, {
									"case":	979,
									"scores":	[-7.1848615908663]
								}, {
									"case":	980,
									"scores":	[-7.1848615908663]
								}, {
									"case":	981,
									"scores":	[-7.1848615908663]
								}, {
									"case":	982,
									"scores":	[-7.1848615908663]
								}, {
									"case":	983,
									"scores":	[-7.1848615908663]
								}, {
									"case":	984,
									"scores":	[-7.1848615908663]
								}, {
									"case":	985,
									"scores":	[-7.1848615908663]
								}, {
									"case":	986,
									"scores":	[-7.1848615908663]
								}, {
									"case":	987,
									"scores":	[-7.1848615908663]
								}, {
									"case":	988,
									"scores":	[-7.1848615908663]
								}, {
									"case":	989,
									"scores":	[-7.1848615908663]
								}, {
									"case":	990,
									"scores":	[-7.1848615908663]
								}, {
									"case":	991,
									"scores":	[-7.1848615908663]
								}, {
									"case":	992,
									"scores":	[-7.1848615908663]
								}, {
									"case":	993,
									"scores":	[-7.1848615908663]
								}, {
									"case":	994,
									"scores":	[-7.1848615908663]
								}, {
									"case":	995,
									"scores":	[-7.1848615908663]
								}, {
									"case":	996,
									"scores":	[-7.1848615908663]
								}, {
									"case":	997,
									"scores":	[-7.1848615908663]
								}, {
									"case":	998,
									"scores":	[-7.1848615908663]
								}, {
									"case":	999,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1000,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1001,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1002,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1003,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1004,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1005,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1006,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1007,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1008,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1009,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1010,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1011,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1012,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1013,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1014,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1015,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1016,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1017,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1018,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1019,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1020,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1021,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1022,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1023,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1024,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1025,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1026,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1027,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1028,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1029,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1030,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1031,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1032,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1033,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1034,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1035,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1036,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1037,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1038,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1039,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1040,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1041,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1042,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1043,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1044,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1045,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1046,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1047,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1048,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1049,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1050,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1051,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1052,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1053,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1054,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1055,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1056,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1057,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1058,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1059,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1060,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1061,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1062,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1063,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1064,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1065,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1066,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1067,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1068,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1069,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1070,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1071,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1072,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1073,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1074,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1075,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1076,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1077,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1078,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1079,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1080,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1081,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1082,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1083,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1084,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1085,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1086,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1087,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1088,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1089,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1090,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1091,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1092,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1093,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1094,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1095,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1096,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1097,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1098,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1099,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1100,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1101,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1102,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1103,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1104,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1105,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1106,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1107,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1108,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1109,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1110,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1111,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1112,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1113,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1114,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1115,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1116,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1117,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1118,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1119,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1120,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1121,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1122,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1123,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1124,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1125,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1126,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1127,
									"scores":	[-7.1848615908663]
								}, {
									"case":	1128,
									"scores":	[-7.1848615908663]
								}]
						}]
				}]
		}],
	"sizes":	[{
			"switch":	1,
			"case":	1,
			"size":	30
		}, {
			"switch":	1,
			"case":	5,
			"size":	30
		}, {
			"switch":	2,
			"case":	444,
			"size":	30
		}, {
			"switch":	2,
			"case":	445,
			"size":	30
		}, {
			"switch":	2,
			"case":	446,
			"size":	30
		}, {
			"switch":	2,
			"case":	447,
			"size":	30
		}, {
			"switch":	2,
			"case":	448,
			"size":	30
		}, {
			"switch":	2,
			"case":	449,
			"size":	30
		}, {
			"switch":	2,
			"case":	450,
			"size":	30
		}, {
			"switch":	2,
			"case":	451,
			"size":	30
		}, {
			"switch":	2,
			"case":	452,
			"size":	30
		}, {
			"switch":	2,
			"case":	453,
			"size":	30
		}, {
			"switch":	2,
			"case":	454,
			"size":	30
		}, {
			"switch":	2,
			"case":	455,
			"size":	30
		}, {
			"switch":	2,
			"case":	456,
			"size":	30
		}, {
			"switch":	2,
			"case":	457,
			"size":	30
		}, {
			"switch":	3,
			"case":	1,
			"size":	30
		}, {
			"switch":	4,
			"case":	444,
			"size":	30
		}, {
			"switch":	4,
			"case":	445,
			"size":	30
		}, {
			"switch":	4,
			"case":	446,
			"size":	30
		}, {
			"switch":	4,
			"case":	447,
			"size":	30
		}, {
			"switch":	4,
			"case":	448,
			"size":	30
		}, {
			"switch":	4,
			"case":	449,
			"size":	30
		}, {
			"switch":	4,
			"case":	450,
			"size":	30
		}, {
			"switch":	4,
			"case":	451,
			"size":	30
		}, {
			"switch":	4,
			"case":	452,
			"size":	30
		}, {
			"switch":	4,
			"case":	453,
			"size":	30
		}, {
			"switch":	4,
			"case":	454,
			"size":	30
		}, {
			"switch":	4,
			"case":	455,
			"size":	30
		}, {
			"switch":	4,
			"case":	456,
			"size":	30
		}, {
			"switch":	5,
			"case":	1,
			"size":	30
		}, {
			"switch":	5,
			"case":	2,
			"size":	30
		}, {
			"switch":	5,
			"case":	3,
			"size":	30
		}, {
			"switch":	6,
			"case":	1,
			"size":	30
		}, {
			"switch":	7,
			"case":	444,
			"size":	30
		}, {
			"switch":	7,
			"case":	445,
			"size":	30
		}, {
			"switch":	7,
			"case":	446,
			"size":	30
		}, {
			"switch":	7,
			"case":	447,
			"size":	30
		}, {
			"switch":	7,
			"case":	448,
			"size":	30
		}, {
			"switch":	7,
			"case":	449,
			"size":	30
		}, {
			"switch":	7,
			"case":	450,
			"size":	30
		}, {
			"switch":	7,
			"case":	451,
			"size":	30
		}, {
			"switch":	7,
			"case":	452,
			"size":	30
		}, {
			"switch":	7,
			"case":	453,
			"size":	30
		}, {
			"switch":	7,
			"case":	454,
			"size":	30
		}, {
			"switch":	7,
			"case":	455,
			"size":	30
		}, {
			"switch":	7,
			"case":	456,
			"size":	30
		}, {
			"switch":	8,
			"case":	1,
			"size":	30
		}, {
			"switch":	9,
			"case":	203,
			"size":	5
		}, {
			"switch":	9,
			"case":	204,
			"size":	5
		}, {
			"switch":	9,
			"case":	205,
			"size":	5
		}, {
			"switch":	9,
			"case":	206,
			"size":	5
		}, {
			"switch":	9,
			"case":	207,
			"size":	5
		}, {
			"switch":	9,
			"case":	208,
			"size":	5
		}, {
			"switch":	9,
			"case":	209,
			"size":	5
		}, {
			"switch":	9,
			"case":	210,
			"size":	5
		}, {
			"switch":	9,
			"case":	211,
			"size":	5
		}, {
			"switch":	9,
			"case":	212,
			"size":	5
		}, {
			"switch":	10,
			"case":	1,
			"size":	5
		}, {
			"switch":	10,
			"case":	2,
			"size":	5
		}, {
			"switch":	10,
			"case":	19,
			"size":	5
		}, {
			"switch":	11,
			"case":	203,
			"size":	5
		}, {
			"switch":	11,
			"case":	204,
			"size":	5
		}, {
			"switch":	11,
			"case":	205,
			"size":	5
		}, {
			"switch":	11,
			"case":	206,
			"size":	5
		}, {
			"switch":	11,
			"case":	207,
			"size":	5
		}, {
			"switch":	11,
			"case":	208,
			"size":	5
		}, {
			"switch":	11,
			"case":	209,
			"size":	5
		}, {
			"switch":	11,
			"case":	210,
			"size":	5
		}, {
			"switch":	11,
			"case":	211,
			"size":	5
		}, {
			"switch":	11,
			"case":	212,
			"size":	5
		}, {
			"switch":	12,
			"case":	1,
			"size":	5
		}, {
			"switch":	14,
			"case":	1,
			"size":	5
		}, {
			"switch":	14,
			"case":	18,
			"size":	5
		}, {
			"switch":	15,
			"case":	203,
			"size":	5
		}, {
			"switch":	15,
			"case":	204,
			"size":	5
		}, {
			"switch":	15,
			"case":	205,
			"size":	5
		}, {
			"switch":	15,
			"case":	206,
			"size":	5
		}, {
			"switch":	15,
			"case":	207,
			"size":	5
		}, {
			"switch":	15,
			"case":	208,
			"size":	5
		}, {
			"switch":	15,
			"case":	209,
			"size":	5
		}, {
			"switch":	15,
			"case":	210,
			"size":	5
		}, {
			"switch":	15,
			"case":	211,
			"size":	5
		}, {
			"switch":	15,
			"case":	212,
			"size":	5
		}, {
			"switch":	16,
			"case":	1,
			"size":	5
		}, {
			"switch":	17,
			"case":	203,
			"size":	5
		}, {
			"switch":	17,
			"case":	204,
			"size":	5
		}, {
			"switch":	17,
			"case":	205,
			"size":	5
		}, {
			"switch":	17,
			"case":	206,
			"size":	5
		}, {
			"switch":	17,
			"case":	207,
			"size":	5
		}, {
			"switch":	17,
			"case":	208,
			"size":	5
		}, {
			"switch":	17,
			"case":	209,
			"size":	5
		}, {
			"switch":	17,
			"case":	210,
			"size":	5
		}, {
			"switch":	17,
			"case":	211,
			"size":	5
		}, {
			"switch":	17,
			"case":	212,
			"size":	5
		}, {
			"switch":	18,
			"case":	1,
			"size":	5
		}, {
			"switch":	20,
			"case":	1,
			"size":	5
		}, {
			"switch":	20,
			"case":	18,
			"size":	5
		}, {
			"switch":	21,
			"case":	203,
			"size":	5
		}, {
			"switch":	21,
			"case":	204,
			"size":	5
		}, {
			"switch":	21,
			"case":	205,
			"size":	5
		}, {
			"switch":	21,
			"case":	206,
			"size":	5
		}, {
			"switch":	21,
			"case":	207,
			"size":	5
		}, {
			"switch":	21,
			"case":	208,
			"size":	5
		}, {
			"switch":	21,
			"case":	209,
			"size":	5
		}, {
			"switch":	21,
			"case":	210,
			"size":	5
		}, {
			"switch":	21,
			"case":	211,
			"size":	5
		}, {
			"switch":	21,
			"case":	212,
			"size":	5
		}, {
			"switch":	22,
			"case":	1,
			"size":	5
		}, {
			"switch":	23,
			"case":	209,
			"size":	6
		}, {
			"switch":	23,
			"case":	210,
			"size":	6
		}, {
			"switch":	23,
			"case":	211,
			"size":	6
		}, {
			"switch":	23,
			"case":	212,
			"size":	6
		}, {
			"switch":	23,
			"case":	213,
			"size":	6
		}, {
			"switch":	23,
			"case":	214,
			"size":	6
		}, {
			"switch":	23,
			"case":	215,
			"size":	6
		}, {
			"switch":	23,
			"case":	216,
			"size":	6
		}, {
			"switch":	23,
			"case":	217,
			"size":	6
		}, {
			"switch":	23,
			"case":	218,
			"size":	6
		}, {
			"switch":	24,
			"case":	1,
			"size":	6
		}, {
			"switch":	25,
			"case":	209,
			"size":	6
		}, {
			"switch":	25,
			"case":	210,
			"size":	6
		}, {
			"switch":	25,
			"case":	211,
			"size":	6
		}, {
			"switch":	25,
			"case":	212,
			"size":	6
		}, {
			"switch":	25,
			"case":	213,
			"size":	6
		}, {
			"switch":	25,
			"case":	214,
			"size":	6
		}, {
			"switch":	25,
			"case":	215,
			"size":	6
		}, {
			"switch":	25,
			"case":	216,
			"size":	6
		}, {
			"switch":	25,
			"case":	217,
			"size":	6
		}, {
			"switch":	25,
			"case":	218,
			"size":	6
		}, {
			"switch":	26,
			"case":	1,
			"size":	6
		}, {
			"switch":	27,
			"case":	1,
			"size":	5
		}, {
			"switch":	27,
			"case":	2,
			"size":	5
		}, {
			"switch":	28,
			"case":	203,
			"size":	5
		}, {
			"switch":	28,
			"case":	204,
			"size":	5
		}, {
			"switch":	28,
			"case":	205,
			"size":	5
		}, {
			"switch":	28,
			"case":	206,
			"size":	5
		}, {
			"switch":	28,
			"case":	207,
			"size":	5
		}, {
			"switch":	28,
			"case":	208,
			"size":	5
		}, {
			"switch":	28,
			"case":	209,
			"size":	5
		}, {
			"switch":	28,
			"case":	210,
			"size":	5
		}, {
			"switch":	28,
			"case":	211,
			"size":	5
		}, {
			"switch":	28,
			"case":	212,
			"size":	5
		}, {
			"switch":	29,
			"case":	1,
			"size":	5
		}, {
			"switch":	30,
			"case":	1,
			"size":	5
		}, {
			"switch":	30,
			"case":	2,
			"size":	5
		}, {
			"switch":	31,
			"case":	99,
			"size":	1
		}, {
			"switch":	32,
			"case":	1,
			"size":	1
		}, {
			"switch":	33,
			"case":	99,
			"size":	1
		}, {
			"switch":	34,
			"case":	1,
			"size":	1
		}, {
			"switch":	36,
			"case":	1,
			"size":	5
		}, {
			"switch":	36,
			"case":	2,
			"size":	5
		}, {
			"switch":	36,
			"case":	3,
			"size":	5
		}, {
			"switch":	37,
			"case":	188,
			"size":	6
		}, {
			"switch":	38,
			"case":	1,
			"size":	6
		}, {
			"switch":	38,
			"case":	2,
			"size":	6
		}, {
			"switch":	38,
			"case":	10,
			"size":	6
		}, {
			"switch":	39,
			"case":	1,
			"size":	6
		}, {
			"switch":	39,
			"case":	2,
			"size":	6
		}, {
			"switch":	40,
			"case":	178,
			"size":	5
		}, {
			"switch":	41,
			"case":	1,
			"size":	5
		}, {
			"switch":	41,
			"case":	2,
			"size":	5
		}, {
			"switch":	41,
			"case":	3,
			"size":	5
		}, {
			"switch":	42,
			"case":	195,
			"size":	7
		}, {
			"switch":	43,
			"case":	1,
			"size":	7
		}, {
			"switch":	43,
			"case":	2,
			"size":	7
		}, {
			"switch":	43,
			"case":	6,
			"size":	7
		}, {
			"switch":	44,
			"case":	1,
			"size":	7
		}, {
			"switch":	44,
			"case":	2,
			"size":	7
		}, {
			"switch":	45,
			"case":	1,
			"size":	5
		}, {
			"switch":	45,
			"case":	2,
			"size":	5
		}, {
			"switch":	46,
			"case":	197,
			"size":	9
		}, {
			"switch":	47,
			"case":	1,
			"size":	9
		}, {
			"switch":	47,
			"case":	2,
			"size":	9
		}, {
			"switch":	47,
			"case":	6,
			"size":	9
		}, {
			"switch":	48,
			"case":	1,
			"size":	9
		}, {
			"switch":	48,
			"case":	2,
			"size":	9
		}, {
			"switch":	49,
			"case":	178,
			"size":	5
		}, {
			"switch":	50,
			"case":	1,
			"size":	5
		}, {
			"switch":	50,
			"case":	2,
			"size":	5
		}, {
			"switch":	50,
			"case":	3,
			"size":	5
		}, {
			"switch":	51,
			"case":	1,
			"size":	5
		}, {
			"switch":	51,
			"case":	2,
			"size":	5
		}, {
			"switch":	52,
			"case":	1,
			"size":	5
		}, {
			"switch":	52,
			"case":	2,
			"size":	5
		}, {
			"switch":	54,
			"case":	1,
			"size":	5
		}, {
			"switch":	54,
			"case":	2,
			"size":	5
		}, {
			"switch":	54,
			"case":	3,
			"size":	5
		}, {
			"switch":	55,
			"case":	181,
			"size":	5
		}, {
			"switch":	56,
			"case":	1,
			"size":	5
		}, {
			"switch":	56,
			"case":	2,
			"size":	5
		}, {
			"switch":	56,
			"case":	10,
			"size":	5
		}, {
			"switch":	57,
			"case":	1,
			"size":	5
		}, {
			"switch":	57,
			"case":	2,
			"size":	5
		}, {
			"switch":	58,
			"case":	178,
			"size":	5
		}, {
			"switch":	59,
			"case":	1,
			"size":	5
		}, {
			"switch":	59,
			"case":	2,
			"size":	5
		}, {
			"switch":	59,
			"case":	3,
			"size":	5
		}, {
			"switch":	60,
			"case":	1,
			"size":	5
		}, {
			"switch":	60,
			"case":	2,
			"size":	5
		}, {
			"switch":	61,
			"case":	178,
			"size":	5
		}, {
			"switch":	63,
			"case":	1202,
			"size":	21
		}, {
			"switch":	63,
			"case":	1203,
			"size":	21
		}, {
			"switch":	63,
			"case":	1204,
			"size":	21
		}, {
			"switch":	63,
			"case":	1205,
			"size":	21
		}, {
			"switch":	63,
			"case":	1206,
			"size":	21
		}, {
			"switch":	63,
			"case":	1207,
			"size":	21
		}, {
			"switch":	63,
			"case":	1208,
			"size":	21
		}, {
			"switch":	63,
			"case":	1209,
			"size":	21
		}, {
			"switch":	63,
			"case":	1210,
			"size":	21
		}, {
			"switch":	63,
			"case":	1211,
			"size":	21
		}, {
			"switch":	63,
			"case":	1212,
			"size":	21
		}, {
			"switch":	63,
			"case":	1213,
			"size":	21
		}, {
			"switch":	63,
			"case":	1214,
			"size":	21
		}, {
			"switch":	63,
			"case":	1215,
			"size":	21
		}, {
			"switch":	63,
			"case":	1216,
			"size":	21
		}, {
			"switch":	63,
			"case":	1217,
			"size":	21
		}, {
			"switch":	63,
			"case":	1218,
			"size":	21
		}, {
			"switch":	63,
			"case":	1219,
			"size":	21
		}, {
			"switch":	63,
			"case":	1220,
			"size":	21
		}, {
			"switch":	63,
			"case":	1221,
			"size":	21
		}, {
			"switch":	63,
			"case":	1222,
			"size":	21
		}, {
			"switch":	63,
			"case":	1223,
			"size":	21
		}, {
			"switch":	63,
			"case":	1224,
			"size":	21
		}, {
			"switch":	63,
			"case":	1225,
			"size":	21
		}, {
			"switch":	63,
			"case":	1226,
			"size":	21
		}, {
			"switch":	63,
			"case":	1227,
			"size":	21
		}, {
			"switch":	63,
			"case":	1228,
			"size":	21
		}, {
			"switch":	63,
			"case":	1229,
			"size":	21
		}, {
			"switch":	63,
			"case":	1230,
			"size":	21
		}, {
			"switch":	63,
			"case":	1231,
			"size":	21
		}, {
			"switch":	63,
			"case":	1232,
			"size":	21
		}, {
			"switch":	63,
			"case":	1233,
			"size":	21
		}, {
			"switch":	63,
			"case":	1234,
			"size":	21
		}, {
			"switch":	63,
			"case":	1235,
			"size":	21
		}, {
			"switch":	63,
			"case":	1236,
			"size":	21
		}, {
			"switch":	63,
			"case":	1237,
			"size":	21
		}, {
			"switch":	63,
			"case":	1238,
			"size":	21
		}, {
			"switch":	63,
			"case":	1239,
			"size":	21
		}, {
			"switch":	63,
			"case":	1240,
			"size":	21
		}, {
			"switch":	63,
			"case":	1241,
			"size":	21
		}, {
			"switch":	63,
			"case":	1242,
			"size":	21
		}, {
			"switch":	63,
			"case":	1243,
			"size":	21
		}, {
			"switch":	63,
			"case":	1244,
			"size":	21
		}, {
			"switch":	63,
			"case":	1245,
			"size":	21
		}, {
			"switch":	63,
			"case":	1246,
			"size":	21
		}, {
			"switch":	63,
			"case":	1247,
			"size":	21
		}, {
			"switch":	64,
			"case":	1,
			"size":	21
		}, {
			"switch":	64,
			"case":	2,
			"size":	21
		}, {
			"switch":	64,
			"case":	3,
			"size":	21
		}, {
			"switch":	65,
			"case":	1,
			"size":	21
		}, {
			"switch":	65,
			"case":	2,
			"size":	21
		}, {
			"switch":	66,
			"case":	1202,
			"size":	21
		}, {
			"switch":	66,
			"case":	1203,
			"size":	21
		}, {
			"switch":	66,
			"case":	1204,
			"size":	21
		}, {
			"switch":	66,
			"case":	1205,
			"size":	21
		}, {
			"switch":	66,
			"case":	1206,
			"size":	21
		}, {
			"switch":	66,
			"case":	1207,
			"size":	21
		}, {
			"switch":	66,
			"case":	1208,
			"size":	21
		}, {
			"switch":	66,
			"case":	1209,
			"size":	21
		}, {
			"switch":	66,
			"case":	1210,
			"size":	21
		}, {
			"switch":	66,
			"case":	1211,
			"size":	21
		}, {
			"switch":	66,
			"case":	1212,
			"size":	21
		}, {
			"switch":	66,
			"case":	1213,
			"size":	21
		}, {
			"switch":	66,
			"case":	1214,
			"size":	21
		}, {
			"switch":	66,
			"case":	1215,
			"size":	21
		}, {
			"switch":	66,
			"case":	1216,
			"size":	21
		}, {
			"switch":	66,
			"case":	1217,
			"size":	21
		}, {
			"switch":	66,
			"case":	1218,
			"size":	21
		}, {
			"switch":	66,
			"case":	1219,
			"size":	21
		}, {
			"switch":	66,
			"case":	1220,
			"size":	21
		}, {
			"switch":	66,
			"case":	1221,
			"size":	21
		}, {
			"switch":	66,
			"case":	1222,
			"size":	21
		}, {
			"switch":	66,
			"case":	1223,
			"size":	21
		}, {
			"switch":	66,
			"case":	1224,
			"size":	21
		}, {
			"switch":	66,
			"case":	1225,
			"size":	21
		}, {
			"switch":	66,
			"case":	1226,
			"size":	21
		}, {
			"switch":	66,
			"case":	1227,
			"size":	21
		}, {
			"switch":	66,
			"case":	1228,
			"size":	21
		}, {
			"switch":	66,
			"case":	1229,
			"size":	21
		}, {
			"switch":	66,
			"case":	1230,
			"size":	21
		}, {
			"switch":	66,
			"case":	1231,
			"size":	21
		}, {
			"switch":	66,
			"case":	1232,
			"size":	21
		}, {
			"switch":	66,
			"case":	1233,
			"size":	21
		}, {
			"switch":	66,
			"case":	1234,
			"size":	21
		}, {
			"switch":	66,
			"case":	1235,
			"size":	21
		}, {
			"switch":	66,
			"case":	1236,
			"size":	21
		}, {
			"switch":	66,
			"case":	1237,
			"size":	21
		}, {
			"switch":	66,
			"case":	1238,
			"size":	21
		}, {
			"switch":	66,
			"case":	1239,
			"size":	21
		}, {
			"switch":	66,
			"case":	1240,
			"size":	21
		}, {
			"switch":	66,
			"case":	1241,
			"size":	21
		}, {
			"switch":	66,
			"case":	1242,
			"size":	21
		}, {
			"switch":	66,
			"case":	1243,
			"size":	21
		}, {
			"switch":	66,
			"case":	1244,
			"size":	21
		}, {
			"switch":	66,
			"case":	1245,
			"size":	21
		}, {
			"switch":	66,
			"case":	1246,
			"size":	21
		}, {
			"switch":	66,
			"case":	1247,
			"size":	21
		}, {
			"switch":	67,
			"case":	1,
			"size":	21
		}, {
			"switch":	68,
			"case":	145,
			"size":	8
		}, {
			"switch":	68,
			"case":	146,
			"size":	8
		}, {
			"switch":	68,
			"case":	147,
			"size":	8
		}, {
			"switch":	69,
			"case":	1,
			"size":	8
		}, {
			"switch":	70,
			"case":	145,
			"size":	8
		}, {
			"switch":	70,
			"case":	146,
			"size":	8
		}, {
			"switch":	70,
			"case":	147,
			"size":	8
		}, {
			"switch":	71,
			"case":	1,
			"size":	8
		}, {
			"switch":	72,
			"case":	145,
			"size":	8
		}, {
			"switch":	72,
			"case":	146,
			"size":	8
		}, {
			"switch":	72,
			"case":	147,
			"size":	8
		}, {
			"switch":	73,
			"case":	1,
			"size":	8
		}, {
			"switch":	74,
			"case":	1129,
			"size":	16
		}, {
			"switch":	74,
			"case":	1130,
			"size":	16
		}, {
			"switch":	74,
			"case":	1131,
			"size":	16
		}, {
			"switch":	74,
			"case":	1132,
			"size":	16
		}, {
			"switch":	74,
			"case":	1133,
			"size":	16
		}, {
			"switch":	74,
			"case":	1134,
			"size":	16
		}, {
			"switch":	74,
			"case":	1135,
			"size":	16
		}, {
			"switch":	74,
			"case":	1136,
			"size":	16
		}, {
			"switch":	74,
			"case":	1137,
			"size":	16
		}, {
			"switch":	74,
			"case":	1138,
			"size":	16
		}, {
			"switch":	74,
			"case":	1139,
			"size":	16
		}, {
			"switch":	74,
			"case":	1140,
			"size":	16
		}, {
			"switch":	74,
			"case":	1141,
			"size":	16
		}, {
			"switch":	74,
			"case":	1142,
			"size":	16
		}, {
			"switch":	74,
			"case":	1143,
			"size":	16
		}, {
			"switch":	74,
			"case":	1144,
			"size":	16
		}, {
			"switch":	74,
			"case":	1145,
			"size":	16
		}, {
			"switch":	74,
			"case":	1146,
			"size":	16
		}, {
			"switch":	74,
			"case":	1147,
			"size":	16
		}, {
			"switch":	75,
			"case":	1,
			"size":	16
		}, {
			"switch":	76,
			"case":	1129,
			"size":	16
		}, {
			"switch":	76,
			"case":	1130,
			"size":	16
		}, {
			"switch":	76,
			"case":	1131,
			"size":	16
		}, {
			"switch":	76,
			"case":	1132,
			"size":	16
		}, {
			"switch":	76,
			"case":	1133,
			"size":	16
		}, {
			"switch":	76,
			"case":	1134,
			"size":	16
		}, {
			"switch":	76,
			"case":	1135,
			"size":	16
		}, {
			"switch":	76,
			"case":	1136,
			"size":	16
		}, {
			"switch":	76,
			"case":	1137,
			"size":	16
		}, {
			"switch":	76,
			"case":	1138,
			"size":	16
		}, {
			"switch":	76,
			"case":	1139,
			"size":	16
		}, {
			"switch":	76,
			"case":	1140,
			"size":	16
		}, {
			"switch":	76,
			"case":	1141,
			"size":	16
		}, {
			"switch":	76,
			"case":	1142,
			"size":	16
		}, {
			"switch":	76,
			"case":	1143,
			"size":	16
		}, {
			"switch":	76,
			"case":	1144,
			"size":	16
		}, {
			"switch":	76,
			"case":	1145,
			"size":	16
		}, {
			"switch":	76,
			"case":	1146,
			"size":	16
		}, {
			"switch":	76,
			"case":	1147,
			"size":	16
		}, {
			"switch":	77,
			"case":	1,
			"size":	16
		}, {
			"switch":	78,
			"case":	1129,
			"size":	16
		}, {
			"switch":	78,
			"case":	1130,
			"size":	16
		}, {
			"switch":	78,
			"case":	1131,
			"size":	16
		}, {
			"switch":	78,
			"case":	1132,
			"size":	16
		}, {
			"switch":	78,
			"case":	1133,
			"size":	16
		}, {
			"switch":	78,
			"case":	1134,
			"size":	16
		}, {
			"switch":	78,
			"case":	1135,
			"size":	16
		}, {
			"switch":	78,
			"case":	1136,
			"size":	16
		}, {
			"switch":	78,
			"case":	1137,
			"size":	16
		}, {
			"switch":	78,
			"case":	1138,
			"size":	16
		}, {
			"switch":	78,
			"case":	1139,
			"size":	16
		}, {
			"switch":	78,
			"case":	1140,
			"size":	16
		}, {
			"switch":	78,
			"case":	1141,
			"size":	16
		}, {
			"switch":	78,
			"case":	1142,
			"size":	16
		}, {
			"switch":	78,
			"case":	1143,
			"size":	16
		}, {
			"switch":	78,
			"case":	1144,
			"size":	16
		}, {
			"switch":	78,
			"case":	1145,
			"size":	16
		}, {
			"switch":	78,
			"case":	1146,
			"size":	16
		}, {
			"switch":	78,
			"case":	1147,
			"size":	16
		}, {
			"switch":	79,
			"case":	1,
			"size":	16
		}],
	"func_locations":	[{
			"file":	"tools/tiffcp.c",
			"functions":	[{
					"function":	"__uint16_identity",
					"begin":	32,
					"end":	36
				}, {
					"function":	"__uint32_identity",
					"begin":	38,
					"end":	42
				}, {
					"function":	"__uint64_identity",
					"begin":	44,
					"end":	48
				}, {
					"function":	"atof",
					"begin":	24,
					"end":	28
				}, {
					"function":	"atoi",
					"begin":	360,
					"end":	364
				}, {
					"function":	"atol",
					"begin":	365,
					"end":	369
				}, {
					"function":	"atoll",
					"begin":	372,
					"end":	376
				}, {
					"function":	"bsearch",
					"begin":	19,
					"end":	43
				}, {
					"function":	"cpBiasedContig2Contig",
					"begin":	828,
					"end":	899
				}, {
					"function":	"cpContig2ContigByRow",
					"begin":	770,
					"end":	795
				}, {
					"function":	"cpContig2SeparateByRow",
					"begin":	982,
					"end":	1022
				}, {
					"function":	"cpContigBufToSeparateBuf",
					"begin":	1082,
					"end":	1101
				}, {
					"function":	"cpContigStrips2ContigTiles",
					"begin":	1514,
					"end":	1520
				}, {
					"function":	"cpContigStrips2SeparateTiles",
					"begin":	1525,
					"end":	1531
				}, {
					"function":	"cpContigTiles2ContigStrips",
					"begin":	1602,
					"end":	1608
				}, {
					"function":	"cpContigTiles2ContigTiles",
					"begin":	1558,
					"end":	1564
				}, {
					"function":	"cpContigTiles2SeparateStrips",
					"begin":	1613,
					"end":	1619
				}, {
					"function":	"cpContigTiles2SeparateTiles",
					"begin":	1569,
					"end":	1575
				}, {
					"function":	"cpDecodedStrips",
					"begin":	905,
					"end":	944
				}, {
					"function":	"cpImage",
					"begin":	1123,
					"end":	1154
				}, {
					"function":	"cpSeparate2ContigByRow",
					"begin":	1027,
					"end":	1067
				}, {
					"function":	"cpSeparate2SeparateByRow",
					"begin":	949,
					"end":	977
				}, {
					"function":	"cpSeparateBufToContigBuf",
					"begin":	1103,
					"end":	1121
				}, {
					"function":	"cpSeparateStrips2ContigTiles",
					"begin":	1536,
					"end":	1542
				}, {
					"function":	"cpSeparateStrips2SeparateTiles",
					"begin":	1547,
					"end":	1553
				}, {
					"function":	"cpSeparateTiles2ContigStrips",
					"begin":	1624,
					"end":	1630
				}, {
					"function":	"cpSeparateTiles2ContigTiles",
					"begin":	1580,
					"end":	1586
				}, {
					"function":	"cpSeparateTiles2SeparateStrips",
					"begin":	1635,
					"end":	1641
				}, {
					"function":	"cpSeparateTiles2SeparateTiles",
					"begin":	1591,
					"end":	1597
				}, {
					"function":	"cpStripToTile",
					"begin":	1069,
					"end":	1080
				}, {
					"function":	"cpTag",
					"begin":	449,
					"end":	502
				}, {
					"function":	"feof_unlocked",
					"begin":	124,
					"end":	128
				}, {
					"function":	"ferror_unlocked",
					"begin":	131,
					"end":	135
				}, {
					"function":	"fgetc_unlocked",
					"begin":	52,
					"end":	56
				}, {
					"function":	"fputc_unlocked",
					"begin":	87,
					"end":	91
				}, {
					"function":	"getc_unlocked",
					"begin":	62,
					"end":	66
				}, {
					"function":	"getchar",
					"begin":	43,
					"end":	47
				}, {
					"function":	"getchar_unlocked",
					"begin":	69,
					"end":	73
				}, {
					"function":	"gnu_dev_major",
					"begin":	79,
					"end":	79
				}, {
					"function":	"gnu_dev_makedev",
					"begin":	81,
					"end":	81
				}, {
					"function":	"gnu_dev_minor",
					"begin":	80,
					"end":	80
				}, {
					"function":	"lineSubtractFn",
					"begin":	815,
					"end":	823
				}, {
					"function":	"main",
					"begin":	156,
					"end":	308
				}, {
					"function":	"nextSrcImage",
					"begin":	98,
					"end":	126
				}, {
					"function":	"openSrcImage",
					"begin":	129,
					"end":	154
				}, {
					"function":	"pickCopyFunc",
					"begin":	1646,
					"end":	1752
				}, {
					"function":	"processCompressOptions",
					"begin":	331,
					"end":	373
				}, {
					"function":	"processG3Options",
					"begin":	311,
					"end":	329
				}, {
					"function":	"putc_unlocked",
					"begin":	97,
					"end":	101
				}, {
					"function":	"putchar",
					"begin":	78,
					"end":	82
				}, {
					"function":	"putchar_unlocked",
					"begin":	104,
					"end":	108
				}, {
					"function":	"readContigStripsIntoBuffer",
					"begin":	1156,
					"end":	1175
				}, {
					"function":	"readContigTilesIntoBuffer",
					"begin":	1219,
					"end":	1268
				}, {
					"function":	"readSeparateStripsIntoBuffer",
					"begin":	1177,
					"end":	1217
				}, {
					"function":	"readSeparateTilesIntoBuffer",
					"begin":	1270,
					"end":	1338
				}, {
					"function":	"subtract16",
					"begin":	812,
					"end":	812
				}, {
					"function":	"subtract32",
					"begin":	813,
					"end":	813
				}, {
					"function":	"subtract8",
					"begin":	811,
					"end":	811
				}, {
					"function":	"tiffcp",
					"begin":	553,
					"end":	748
				}, {
					"function":	"tolower",
					"begin":	206,
					"end":	210
				}, {
					"function":	"toupper",
					"begin":	212,
					"end":	216
				}, {
					"function":	"usage",
					"begin":	427,
					"end":	438
				}, {
					"function":	"vprintf",
					"begin":	35,
					"end":	39
				}, {
					"function":	"writeBufferToContigStrips",
					"begin":	1340,
					"end":	1359
				}, {
					"function":	"writeBufferToContigTiles",
					"begin":	1396,
					"end":	1443
				}, {
					"function":	"writeBufferToSeparateStrips",
					"begin":	1361,
					"end":	1394
				}, {
					"function":	"writeBufferToSeparateTiles",
					"begin":	1445,
					"end":	1509
				}]
		}]
}
