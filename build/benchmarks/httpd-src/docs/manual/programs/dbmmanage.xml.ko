<?xml version='1.0' encoding='EUC-KR' ?>
<!DOCTYPE manualpage SYSTEM "../style/manualpage.dtd">
<?xml-stylesheet type="text/xsl" href="../style/manual.ko.xsl"?>
<!-- English Revision: 105989:1420686 (outdated) -->

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<manualpage metafile="dbmmanage.xml.meta">
<parentdocument href="./">Programs</parentdocument>

<title>dbmmanage - DBM 형식의 사용자인증 파일을 관리한다</title>

<summary>
    <p><code>dbmmanage</code>는 HTTP basic authentication에
    사용할 사용자명과 암호를 저장하는 DBM형식의 파일을 만들고
    수정한다. 아파치 웹서버는 자원을 <code>dbmmanage</code>로
    만든 파일에 기록한 사용자에게만 보여줄 수 있다. 사용자명이
    DBM 파일에 기록되있을때만 이 프로그램을 사용할 수 있다.
    일반파일을 데이터베이스로 사용하려면 <a
    href="htpasswd.html">htpasswd</a>를 참고하라.</p>

    <p>이 manpage는 명령행 옵션만을 설명한다. <a
    href="httpd.html">httpd</a>에서 사용자인증을 설정하는 지시어에
    대한 설명은 아파치 배포본에 포함되있고 <a
    href="http://httpd.apache.org">http://httpd.apache.org/</a>에서도
    볼 수 있는 아파치 설명서를 참고하라.</p>
</summary>
<seealso><a href="httpd.html">httpd</a></seealso>
<seealso><module>mod_authn_dbm</module></seealso>
<seealso><module>mod_authz_dbm</module></seealso>

<section id="synopsis"><title>개요</title>
    <p><code><strong>dbmmanage</strong> [ <var>encoding</var> ]
    <var>filename</var> add|adduser|check|delete|update
    <var>username</var>
    [ <var>encpasswd</var>
      [ <var>group</var>[,<var>group</var>...]
        [ <var>comment</var> ] ] ]</code></p>

    <p><code><strong>dbmmanage</strong> <var>filename</var>
    view [ <var>username</var> ]</code></p>

    <p><code><strong>dbmmanage</strong> <var>filename</var> import</code></p>
</section>

<section id="options"><title>옵션</title>
    <dl>
    <dt><code><var>filename</var></code></dt>
    <dd>DBM형식 파일의 파일명. 보통 <code>.db</code>,
    <code>.pag</code>, <code>.dir</code> 확장자를 뺀다.</dd>

    <dt><code><var>username</var></code></dt>
    <dd>작업할 사용자명. <var>username</var>에 콜론(<code>:</code>)을
    사용할 수 없다.</dd>

    <dt><code><var>encpasswd</var></code></dt>
    <dd><code>update</code>나 <code>add</code> 명령에 사용할
    이미 암호화된 암호이다. 암호를 나중에 지정하고 싶은 경우
    빼기기호(<code>-</code>)를 사용한다. 또, <code>update</code>
    명령을 사용할때 마침표(<code>.</code>)를 사용하면 원래
    암호를 그대로 둔다.</dd>

    <dt><code><var>group</var></code></dt>
    <dd>사용자가 속한 그룹. 그룹명에 콜론(<code>:</code>)을
    사용할 수 없다. 사용자를 그룹에 추가하지는 않지만 설명란을
    채우고 싶다면 빼기기호(<code>-</code>)를 사용한다. 또,
    <code>update</code> 명령을 사용할때 마침표(<code>.</code>)를
    사용한다면 원래 그룹을 그대로 둔다.</dd>

    <dt><code><var>comment</var></code></dt>
    <dd>실제 이름, 메일 주소 등 사용자에 대한 설명을 적는 란이다.
    서버는 이 항목을 무시한다.</dd>
    </dl>

    <section id="options.encodings"><title>인코딩</title>
      <dl>
      <dt><code>-d</code></dt>
      <dd>crypt 암호화 (Win32나 Netware가 아니라면 기본값)</dd>

      <dt><code>-m</code></dt>
      <dd>MD5 암호화 (Win32과 Netware에서 기본값)</dd>

      <dt><code>-s</code></dt>
      <dd>SHA1 암호화</dd>

      <dt><code>-p</code></dt>
      <dd>암호를 그대로 기록 (<em>추천하지 않음</em>)</dd>
      </dl>
    </section>

    <section id="options.commands"><title>명령</title>
      <dl>
      <dt><code>add</code></dt>
      <dd>암호화된 암호 <var>encpasswd</var>를 사용하여
      <var>filename</var>에 <var>username</var> 항목을 추가한다.</dd>

      <dt><code>adduser</code></dt>
      <dd>암호를 물어보고 <var>filename</var>에
      <var>username</var> 항목을 추가한다.</dd>

      <dt><code>check</code></dt>
      <dd>암호를 물어본후 <var>filename</var>에
      <var>username</var>이 있고 암호가 일치하는지 검사한다.</dd>

      <dt><code>delete</code></dt>
      <dd><var>filename</var>에서 <var>username</var> 항목을
      삭제한다.</dd>

      <dt><code>import</code></dt>
      <dd><code>STDIN</code>에서
      <code><var>username</var>:<var>password</var></code> 항목을
      (한줄에 하나씩) 읽어서 <var>filename</var>에 추가한다.
      암호는 이미 암호화되있어야 한다.</dd>

      <dt><code>update</code></dt>
      <dd><code>adduser</code> 명령과 비슷하지만,
      <var>filename</var>에 이미 <var>username</var>이 있는지
      확인한다.</dd>

      <dt><code>view</code></dt>
      <dd>DBM 파일 내용을 출력한다. <var>username</var>을
      지정하면 특정 항목만을 출력한다.</dd>
      </dl>
    </section>
</section>

<section id="bugs"><title>버그</title>
    <p>여러 다른 DBM 파일형식들이 있고 당신의 시스템에 여러
    형식에 대한 비슷한 라이브러리들이 있음을 주의해야 한다.
    가장 대표적인 네가지가 SDBM, NDBM, GNU 프로젝트의 GDBM,
    Berkeley DB 2이다. 불행히도 이 라이브러리들은 모두 다른
    파일형식을 사용한다. 그래서 <var>filename</var>이 사용하는
    파일형식이 <code>dbmmanage</code>가 원하는 형식과 같은지
    확인해야 한다. <code>dbmmanage</code>는 DBM 파일의 형식을
    알아내지 못한다. 다른 형식을 사용하면 아무일도 하지 않거나,
    다름 이름의 DBM 파일을 만들거나, 최악의 경우 파일을 기록하여
    DBM 파일을 망칠 수 있다.</p>

    <p><code>dbmmanage</code> 프로그램 앞부분에 있는
    <code>@AnyDBM::ISA</code> 배열이 DBM형식 선호순서이다.
    우리는 Berkeley DB 2 파일형식을 선호하므로
    <code>dbmmanage</code>가 시스템 라이브러리를 찾는 순서는
    Berkeley DB 2, NDBM, GDBM, SDBM 순이다. <code>dbmmanage</code>는
    제일 먼저 찾은 라이브러리를 사용하여 모든 DBM 파일 작업을
    한다. 이 순서는 Perl의 간단한 <code>dbmopen()</code> 호출이
    사용하는 순서나 Perl의 표준 <code>@AnyDBM::ISA</code> 순서와
    조금 다르다. 그래서 다른 도구를 사용하여 DBM 파일을 관리한다면
    이 순서를 따라야 한다. C와 같이 다른 언어로 작성한 프로그램을
    사용하여 파일을 다루는 경우에도 마찬가지다.</p>

    <p>대부분의 유닉스 시스템에서 <code>file</code> 프로그램으로
    DBM 파일형식을 확인할 수 있다.</p>
</section>

</manualpage>
