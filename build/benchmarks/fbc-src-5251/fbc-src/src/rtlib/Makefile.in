# @configure_input@
# Makefile for the FB Run-Time Library. 
# Run 'configure' to generate Makefile from Makefile.in

##################################################################

@SET_MAKE@

AR = ar
ARFLAGS = cru
ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
CC = @CC@
CFLAGS = @CFLAGS@
DEFS = @DEFS@
WARN_CFLAGS = @WARN_CFLAGS@ @WARN_PEDANTIC@ @WERROR@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
EXEEXT = @EXEEXT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
SHELL = @SHELL@

ifneq (,@FBRT_TARGET_BASE@)
    VPATH = @srcdir@ @srcdir@/@FBRT_TARGET@ @srcdir@/@FBRT_TARGET_BASE@ @srcdir@/@FBRT_CPU@ @srcdir@/static
else
    VPATH = @srcdir@ @srcdir@/@FBRT_TARGET@ @srcdir@/@FBRT_CPU@ @srcdir@/static
endif

datadir = @datadir@
exec_prefix = @prefix@
libdir = @libdir@
localedir = $(datadir)/locale
prefix = @prefix@
srcdir = @srcdir@
top_builddir = .

##################################################################

ifdef DEBUG
    DEFS += -DDEBUG
endif

ifneq (,@FBRT_TARGET_BASE@)
    INCLUDES = -I$(srcdir) -I$(srcdir)/@FBRT_TARGET@ -I$(srcdir)/@FBRT_TARGET_BASE@ -I$(srcdir)/@FBRT_CPU@ -I.
else
    INCLUDES = -I$(srcdir) -I$(srcdir)/@FBRT_TARGET@ -I$(srcdir)/@FBRT_CPU@ -I.
endif

INCLUDES += @X_INCLUDES@

# config.h must be always included before any system header in *nix
INCLUDES += -include config.h

ifdef MULTITHREADED
	FBRT_LIB = libfbmt.a
	DEFS += -DMULTITHREADED
	FBRT_OBJDEST = mt
else
	FBRT_LIB = libfb.a
	FBRT_OBJDEST = .
endif

ifeq (@FBRT_TARGET@,xbox)
    DEFS += -DENABLE_XBOX -DDISABLE_CDROM
    CFLAGS += -std=gnu99 -ffreestanding -nostdlib -nostdinc -fno-builtin -fno-exceptions -mno-cygwin -march=i386 
    INCLUDES += -I$(OPENXDK)/i386-pc-xbox/include -I$(OPENXDK)/include -I$(OPENXDK)/include/SDL
endif

ALL_CFLAGS = $(CFLAGS) $(CPPFLAGS) $(INCLUDES) # $(WARN_CFLAGS) 

##################################################################

FBRT_OBJS := $(patsubst @srcdir@/%.c,$(FBRT_OBJDEST)/%.o,$(wildcard @srcdir@/*.c))
FBRT_OBJS += $(patsubst @srcdir@/%.s,$(FBRT_OBJDEST)/%.o,$(wildcard @srcdir@/*.s))
FBRT_OSDEPOBJS := $(patsubst @srcdir@/@FBRT_TARGET@/%.c,$(FBRT_OBJDEST)/%.o,$(wildcard @srcdir@/@FBRT_TARGET@/*.c))
FBRT_OSDEPOBJS += $(patsubst @srcdir@/@FBRT_TARGET@/%.s,$(FBRT_OBJDEST)/%.o,$(wildcard @srcdir@/@FBRT_TARGET@/*.s))
FBRT_CPUDEPOBJS := $(patsubst @srcdir@/@FBRT_CPU@/%.c,$(FBRT_OBJDEST)/%.o,$(wildcard @srcdir@/@FBRT_CPU@/*.c))
FBRT_CPUDEPOBJS += $(patsubst @srcdir@/@FBRT_CPU@/%.s,$(FBRT_OBJDEST)/%.o,$(wildcard @srcdir@/@FBRT_CPU@/*.s))
FBRT_STATICOBJS := $(patsubst @srcdir@/static/%.c,$(FBRT_OBJDEST)/%.o,$(wildcard @srcdir@/static/*.c))
FBRT_HEADERS := $(wildcard @srcdir@/*.h)
FBRT_HEADERS += $(wildcard @srcdir@/@FBRT_TARGET@/*.h)
FBRT_HEADERS += $(wildcard @srcdir@/@FBRT_CPU@/*.h)
FBRT_BASEDEPOBJS :=

ifneq (,@FBRT_TARGET_BASE@)
    FBRT_BASEDEPOBJS += $(patsubst @srcdir@/@FBRT_TARGET_BASE@/%.c,$(FBRT_OBJDEST)/%.o,$(wildcard @srcdir@/@FBRT_TARGET_BASE@/*.c))
    FBRT_BASEDEPOBJS += $(patsubst @srcdir@/@FBRT_TARGET_BASE@/%.s,$(FBRT_OBJDEST)/%.o,$(wildcard @srcdir@/@FBRT_TARGET_BASE@/*.s))
    FBRT_HEADERS += $(wildcard @srcdir@/@FBRT_TARGET_BASE@/*.h)
endif

##################################################################

all: $(FBRT_LIB) $(FBRT_STATICOBJS)

.SUFFIXES:
.SUFFIXES: .c .s .o

$(FBRT_OBJDEST)/%.o : %.c $(FBRT_HEADERS)
	$(COMPILE) $< -o $@

$(FBRT_OBJDEST)/%.o : %.s
	$(CC) -x assembler-with-cpp -c $(CFLAGS) $< -o $@

$(FBRT_LIB) : $(FBRT_OBJS) $(FBRT_OSDEPOBJS) $(FBRT_BASEDEPOBJS) $(FBRT_CPUDEPOBJS)
	$(AR) $(ARFLAGS) $(FBRT_LIB) $(FBRT_OBJS) $(FBRT_OSDEPOBJS) $(FBRT_BASEDEPOBJS) $(FBRT_CPUDEPOBJS)
	$(RANLIB) $(FBRT_LIB)

##################################################################

# Rules to rebuild the configuration

Makefile: $(srcdir)/Makefile.in config.status config.h
	$(SHELL) ./config.status Makefile

config.status: $(srcdir)/configure
	$(SHELL) ./config.status --recheck

$(srcdir)/configure: @MAINT@ $(srcdir)/aclocal.m4
	cd $(srcdir) && $(AUTOCONF)

$(srcdir)/aclocal.m4: @MAINT@ $(srcdir)/../config/acx.m4 \
	$(srcdir)/../config/warnings.m4 \
	$(srcdir)/configure.ac
	cd $(srcdir) && $(ACLOCAL) -I ../config

config.h: stamp-h1
	@test -f config.h || (rm -f stamp-h1 && $(MAKE) stamp-h1)

stamp-h1: $(srcdir)/config.in config.status
	-rm -f stamp-h1
	$(SHELL) ./config.status config.h

$(srcdir)/config.in: @MAINT@ $(srcdir)/configure
	cd $(srcdir) && $(AUTOHEADER)
	-rm -f stamp-h1

# Other miscellaneous targets.

mostlyclean:
	-rm -rf $(FBRT_OBJS) $(FBRT_OSDEPOBJS) $(FBRT_CPUDEPOBJS) $(FBRT_BASEDEPOBJS) $(FBRT_STATICOBJS)

clean: mostlyclean
	-rm -rf makedepend$(EXEEXT) $(FBRT_LIB) $(srcdir)/autom4te.cache

distclean: clean
	-rm -f config.h stamp-h1 config.status config.cache config.log \
	  configure.lineno configure.status.lineno Makefile localedir.h \
	  localedir.hs

maintainer-clean: distclean
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f $(srcdir)/configure $(srcdir)/aclocal.m4

check:
installcheck:
dvi:
html:
info:
install-info:
install-man:

install:
	cp libfb*.a ../../../../lib/@FBRT_TARGET@/
	cp $(FBRT_STATICOBJS) ../../../../lib/@FBRT_TARGET@/

.PHONY: installdirs install install-strip mostlyclean clean distclean \
  maintainer-clean check installcheck dvi html info install-info \
  install-man update-po

COMPILE = $(CC) $(DEFS) $(ALL_CFLAGS) -c

# Implicit rules

.c.o:
	$(COMPILE) $<

.NOEXPORT:
